/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 27 20:05:05 GMT 2020
 */

package MVC.Models.BaseModels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Models.BaseModels.GPS;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GPS_ESTest extends GPS_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GPS gPS0 = new GPS();
      gPS0.setY(160.08);
      GPS gPS1 = new GPS();
      boolean boolean0 = gPS0.equals(gPS1);
      assertEquals(160.08, gPS0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GPS gPS0 = new GPS();
      gPS0.setXY((-1260.27228947299), (-903.6047366783));
      GPS gPS1 = gPS0.clone();
      gPS1.setXY(0.0, 0.0);
      boolean boolean0 = gPS0.equals(gPS1);
      assertEquals((-903.6047366783), gPS0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GPS gPS0 = new GPS((-1485.345926155985), 1498.3);
      double double0 = gPS0.getY();
      assertEquals(1498.3, double0, 0.01);
      assertEquals((-1485.345926155985), gPS0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GPS gPS0 = new GPS();
      gPS0.setY((-4202.711345560026));
      double double0 = gPS0.getY();
      assertEquals((-4202.711345560026), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GPS gPS0 = new GPS(2640.4117, 428.2692245);
      double double0 = gPS0.getX();
      assertEquals(428.2692245, gPS0.getY(), 0.01);
      assertEquals(2640.4117, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GPS gPS0 = new GPS();
      gPS0.setXY((-2235.4863), (-1890.4));
      double double0 = gPS0.getX();
      assertEquals((-1890.4), gPS0.getY(), 0.01);
      assertEquals((-2235.4863), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GPS gPS0 = new GPS();
      double double0 = gPS0.distancia(gPS0);
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertEquals(0.0, gPS0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GPS gPS0 = new GPS(2640.4117, 428.2692245);
      GPS gPS1 = new GPS(gPS0);
      gPS1.setXY(779.5766026, 428.2692245);
      double double0 = gPS0.distancia(gPS1);
      assertEquals(779.5766026, gPS1.getX(), 0.01);
      assertEquals(1860.8350974, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GPS gPS0 = new GPS();
      assertEquals(0.0, gPS0.getY(), 0.01);
      
      gPS0.setY(1.0);
      GPS gPS1 = gPS0.clone();
      assertTrue(gPS1.equals((Object)gPS0));
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GPS gPS0 = new GPS(2744.674, (-683.82));
      GPS gPS1 = gPS0.clone();
      assertEquals((-683.82), gPS0.getY(), 0.01);
      
      gPS0.setY(2744.674);
      double double0 = gPS1.distancia(gPS0);
      assertEquals(3428.494, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GPS gPS0 = null;
      try {
        gPS0 = new GPS((GPS) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.GPS", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GPS gPS0 = new GPS();
      double double0 = gPS0.getX();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, gPS0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GPS gPS0 = new GPS();
      double double0 = gPS0.getY();
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GPS gPS0 = new GPS();
      GPS gPS1 = gPS0.clone();
      gPS0.setY((-992.4583549293169));
      boolean boolean0 = gPS0.equals(gPS1);
      assertEquals((-992.4583549293169), gPS0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GPS gPS0 = new GPS();
      boolean boolean0 = gPS0.equals((Object) null);
      assertEquals(0.0, gPS0.getY(), 0.01);
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GPS gPS0 = new GPS();
      boolean boolean0 = gPS0.equals(gPS0);
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertEquals(0.0, gPS0.getY(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GPS gPS0 = new GPS();
      boolean boolean0 = gPS0.equals("GPS: (-1070.1171122356,-758.1410973806)");
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertEquals(0.0, gPS0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GPS gPS0 = new GPS();
      gPS0.setX((-1070.1171122356));
      assertEquals((-1070.1171122356), gPS0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GPS gPS0 = new GPS((-2656.608356), (-2656.608356));
      GPS gPS1 = new GPS();
      boolean boolean0 = gPS1.equals(gPS0);
      assertFalse(boolean0);
      assertEquals(0.0, gPS1.getX(), 0.01);
      assertEquals((-2656.608356), gPS0.getY(), 0.01);
      assertEquals(0.0, gPS1.getY(), 0.01);
      assertEquals((-2656.608356), gPS0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GPS gPS0 = new GPS();
      GPS gPS1 = gPS0.clone();
      boolean boolean0 = gPS0.equals(gPS1);
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertEquals(0.0, gPS0.getY(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GPS gPS0 = new GPS();
      // Undeclared exception!
      try { 
        gPS0.distancia((GPS) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.GPS", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      GPS gPS0 = new GPS();
      String string0 = gPS0.toString();
      assertEquals("GPS: (0.0,0.0)", string0);
  }
}
