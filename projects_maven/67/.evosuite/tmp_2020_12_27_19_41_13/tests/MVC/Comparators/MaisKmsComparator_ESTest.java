/*
 * This file was automatically generated by EvoSuite
 * Sun Dec 27 20:11:17 GMT 2020
 */

package MVC.Comparators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Comparators.MaisKmsComparator;
import MVC.Models.BaseModels.Transportadora;
import MVC.Models.BaseModels.TransportadoraMed;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MaisKmsComparator_ESTest extends MaisKmsComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      MaisKmsComparator maisKmsComparator0 = new MaisKmsComparator();
      TransportadoraMed transportadoraMed0 = new TransportadoraMed("'G{po23", "HZ:", 359.950717479132, 359.950717479132, "HZ:", 359.950717479132, 359.950717479132, false, 2081);
      TransportadoraMed transportadoraMed1 = new TransportadoraMed(transportadoraMed0);
      int int0 = maisKmsComparator0.compare((Transportadora) transportadoraMed0, (Transportadora) transportadoraMed1);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      MaisKmsComparator maisKmsComparator0 = new MaisKmsComparator();
      TransportadoraMed transportadoraMed0 = new TransportadoraMed();
      // Undeclared exception!
      try { 
        maisKmsComparator0.compare((Transportadora) transportadoraMed0, (Transportadora) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Comparators.MaisKmsComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      MaisKmsComparator maisKmsComparator0 = new MaisKmsComparator();
      TransportadoraMed transportadoraMed0 = new TransportadoraMed();
      TransportadoraMed transportadoraMed1 = new TransportadoraMed(transportadoraMed0);
      transportadoraMed1.addKmsTotal((-1.0));
      int int0 = maisKmsComparator0.compare((Transportadora) transportadoraMed0, (Transportadora) transportadoraMed1);
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      MaisKmsComparator maisKmsComparator0 = new MaisKmsComparator();
      TransportadoraMed transportadoraMed0 = new TransportadoraMed();
      TransportadoraMed transportadoraMed1 = new TransportadoraMed(transportadoraMed0);
      transportadoraMed1.addKmsTotal((-1.0));
      int int0 = maisKmsComparator0.compare((Transportadora) transportadoraMed1, (Transportadora) transportadoraMed0);
      assertEquals(1, int0);
  }
}
