/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:26:53 GMT 2021
 */

package MVC.Models;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Models.BaseModels.Encomenda;
import MVC.Models.BaseModels.Utilizador;
import MVC.Models.Catalogs.Encomendas;
import MVC.Models.Catalogs.Lojas;
import MVC.Models.Catalogs.Transportadoras;
import MVC.Models.Catalogs.Utilizadores;
import MVC.Models.Catalogs.Voluntarios;
import MVC.Models.Parse;
import java.util.HashMap;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Parse_ESTest extends Parse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseVoluntario("L,TBuzs}TOW]VL{");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("MVC.Models.Parse", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseUtilizador("M,T'L");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("MVC.Models.Parse", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseEncomenda("Yf,Sh}dMD1");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("MVC.Models.Parse", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseVoluntario((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.Parse", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseTransportadora(" 5vm:,SW;E");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("MVC.Models.Parse", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseLoja((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.Parse", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseEncomenda((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.Parse", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.lerFicheiro((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Parse parse0 = new Parse();
      List<String> list0 = parse0.lerFicheiro("");
      HashMap<String, Utilizador> hashMap0 = new HashMap<String, Utilizador>();
      Utilizadores utilizadores0 = new Utilizadores(hashMap0);
      Voluntarios voluntarios0 = new Voluntarios();
      Transportadoras transportadoras0 = new Transportadoras();
      Lojas lojas0 = new Lojas();
      HashMap<String, Encomenda> hashMap1 = new HashMap<String, Encomenda>();
      Encomendas encomendas0 = new Encomendas(hashMap1);
      parse0.parse(utilizadores0, voluntarios0, transportadoras0, lojas0, encomendas0, list0);
      assertEquals(0, list0.size());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseLoja(">F<&mR&q*RX,YA~:t");
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // 2
         //
         verifyException("MVC.Models.Parse", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseTransportadora((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.Parse", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Parse parse0 = new Parse();
      // Undeclared exception!
      try { 
        parse0.parseUtilizador((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.Parse", e);
      }
  }
}
