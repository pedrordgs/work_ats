/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:33:04 GMT 2021
 */

package MVC.Models.BaseModels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Models.BaseModels.Loja;
import MVC.Models.BaseModels.Produto;
import java.util.Collection;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Loja_ESTest extends Loja_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Loja loja0 = new Loja((String) null, (String) null, 466.67551982, 466.67551982);
      loja0.getDuracaoFila();
      double double0 = loja0.getDuracaoFila();
      assertEquals(0.05, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Loja loja0 = new Loja("eKnh^+7g=6Q", "eKnh^+7g=6Q", (-1160.5536), (-1160.5536));
      loja0.produtos = null;
      // Undeclared exception!
      try { 
        loja0.getListaProdutos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Loja loja0 = new Loja((String) null, (String) null, 0.0, 0.0);
      // Undeclared exception!
      try { 
        loja0.addProdutos((Collection<Produto>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Loja loja0 = null;
      try {
        loja0 = new Loja((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Loja loja0 = new Loja((String) null, (String) null, 466.67551982, 466.67551982);
      Loja loja1 = new Loja(loja0);
      assertNull(loja1.getName());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Loja loja0 = new Loja("MVC.Mo{els.BaseModels.V+luntar&oMed", "MVC.Mo{els.BaseModels.V+luntar&oMed", 1532.632, 1532.632);
      boolean boolean0 = loja0.existeProduto("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = loja0.clone();
      loja1.produtos = null;
      // Undeclared exception!
      try { 
        loja1.existeProduto("\nPre\u00E7o por Km: ");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Loja loja0 = new Loja("MVC.Mo{els.BaseModels.V+luntar&oMed", "MVC.Mo{els.BaseModels.V+luntar&oMed", 1532.632, 1532.632);
      List<Produto> list0 = loja0.getListaProdutos();
      loja0.addProdutos(list0);
      assertEquals("MVC.Mo{els.BaseModels.V+luntar&oMed", loja0.getName());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Loja loja0 = new Loja("MVC.Mo{els.BaseModels.V+luntar&oMed", "MVC.Mo{els.BaseModels.V+luntar&oMed", 1532.632, 1532.632);
      // Undeclared exception!
      try { 
        loja0.addProduto((Produto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Loja loja0 = new Loja("MVC.Mo{els.BaseModels.V+luntar&oMed", "MVC.Mo{els.BaseModels.V+luntar&oMed", 1532.632, 1532.632);
      String string0 = loja0.toString();
      assertEquals("Loja{\nC\u00F3digo: MVC.Mo{els.BaseModels.V+luntar&oMed\nNome: MVC.Mo{els.BaseModels.V+luntar&oMed\nGPS: (1532.632,1532.632)\n}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Loja loja0 = new Loja((String) null, (String) null, 466.67551982, 466.67551982);
      // Undeclared exception!
      try { 
        loja0.getProduto("\n}");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }
}
