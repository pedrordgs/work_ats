/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:31:20 GMT 2021
 */

package MVC.Comparators;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Comparators.DistanciaLojaComparator;
import MVC.Models.BaseModels.GPS;
import MVC.Models.BaseModels.User;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DistanciaLojaComparator_ESTest extends DistanciaLojaComparator_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      GPS gPS0 = mock(GPS.class, new ViolatedAssumptionAnswer());
      doReturn(0.0, 0.0).when(gPS0).distancia(any(MVC.Models.BaseModels.GPS.class));
      DistanciaLojaComparator distanciaLojaComparator0 = new DistanciaLojaComparator(gPS0);
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(user0).getCod();
      doReturn((GPS) null).when(user0).getGPS();
      User user1 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(user1).getCod();
      doReturn((GPS) null).when(user1).getGPS();
      // Undeclared exception!
      try { 
        distanciaLojaComparator0.compare(user0, user1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Comparators.DistanciaLojaComparator", e);
      }
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      GPS gPS0 = mock(GPS.class, new ViolatedAssumptionAnswer());
      doReturn((-291.0), (-291.0)).when(gPS0).distancia(any(MVC.Models.BaseModels.GPS.class));
      DistanciaLojaComparator distanciaLojaComparator0 = new DistanciaLojaComparator(gPS0);
      GPS gPS1 = mock(GPS.class, new ViolatedAssumptionAnswer());
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn("", "").when(user0).getCod();
      doReturn(gPS1, gPS1).when(user0).getGPS();
      int int0 = distanciaLojaComparator0.compare(user0, user0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      GPS gPS0 = mock(GPS.class, new ViolatedAssumptionAnswer());
      doReturn(2669.744985, (-1361.1682408159481)).when(gPS0).distancia(any(MVC.Models.BaseModels.GPS.class));
      DistanciaLojaComparator distanciaLojaComparator0 = new DistanciaLojaComparator(gPS0);
      GPS gPS1 = mock(GPS.class, new ViolatedAssumptionAnswer());
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn(gPS1, gPS1).when(user0).getGPS();
      int int0 = distanciaLojaComparator0.compare(user0, user0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      GPS gPS0 = mock(GPS.class, new ViolatedAssumptionAnswer());
      doReturn((-2061.85813), 660.0, 0.0, 0.0).when(gPS0).distancia(any(MVC.Models.BaseModels.GPS.class));
      DistanciaLojaComparator distanciaLojaComparator0 = new DistanciaLojaComparator(gPS0);
      User user0 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn((GPS) null, (GPS) null).when(user0).getGPS();
      distanciaLojaComparator0.compare(user0, user0);
      User user1 = mock(User.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(user1).getCod();
      doReturn((GPS) null, (GPS) null).when(user1).getGPS();
      // Undeclared exception!
      try { 
        distanciaLojaComparator0.compare(user1, user1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Comparators.DistanciaLojaComparator", e);
      }
  }
}
