/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 17:52:06 GMT 2021
 */

package MVC.Models.BaseModels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Models.BaseModels.GPS;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class GPS_ESTest extends GPS_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      GPS gPS0 = new GPS();
      GPS gPS1 = new GPS((-1547.373), (-1547.373));
      double double0 = gPS1.distancia(gPS0);
      assertEquals((-1547.373), gPS1.getY(), 0.01);
      assertEquals((-1547.373), gPS1.getX(), 0.01);
      assertEquals(2188.3158826499434, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      GPS gPS0 = new GPS(0.0, 0.0);
      GPS gPS1 = new GPS(gPS0);
      gPS1.setY(4267.22499);
      boolean boolean0 = gPS1.equals(gPS0);
      assertEquals(4267.22499, gPS1.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      GPS gPS0 = new GPS((-1.0), (-1.0));
      GPS gPS1 = new GPS((-940.009), (-1.0));
      boolean boolean0 = gPS0.equals(gPS1);
      assertEquals((-1.0), gPS1.getY(), 0.01);
      assertFalse(boolean0);
      assertEquals((-1.0), gPS0.getX(), 0.01);
      assertFalse(gPS1.equals((Object)gPS0));
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      GPS gPS0 = new GPS();
      double double0 = gPS0.getY();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, gPS0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      GPS gPS0 = new GPS(0.0, 22.1976932244);
      double double0 = gPS0.getY();
      assertEquals(22.1976932244, double0, 0.01);
      assertEquals(0.0, gPS0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      GPS gPS0 = new GPS();
      gPS0.setXY(2815.4477, 0.0);
      double double0 = gPS0.getX();
      assertEquals(2815.4477, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      GPS gPS0 = new GPS(0.0, 0.0);
      gPS0.setX((-1.0));
      double double0 = gPS0.getX();
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      GPS gPS0 = new GPS(0.0, 22.1976932244);
      assertEquals(0.0, gPS0.getX(), 0.01);
      
      gPS0.setX(22.1976932244);
      gPS0.clone();
      assertEquals(22.1976932244, gPS0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      GPS gPS0 = new GPS((-1.0), (-1.0));
      GPS gPS1 = gPS0.clone();
      assertTrue(gPS1.equals((Object)gPS0));
      assertEquals((-1.0), gPS1.getY(), 0.01);
      assertEquals((-1.0), gPS0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      GPS gPS0 = new GPS(0.0, (-1934.1260589389));
      // Undeclared exception!
      try { 
        gPS0.distancia((GPS) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.GPS", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      GPS gPS0 = null;
      try {
        gPS0 = new GPS((GPS) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.GPS", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      GPS gPS0 = new GPS(0.0, 0.0);
      double double0 = gPS0.getX();
      assertEquals(0.0, gPS0.getY(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      GPS gPS0 = new GPS((-1.0), (-1.0));
      double double0 = gPS0.getY();
      assertEquals((-1.0), gPS0.getX(), 0.01);
      assertEquals((-1.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      GPS gPS0 = new GPS();
      GPS gPS1 = new GPS((-1547.373), (-1547.373));
      gPS1.setX(0.0);
      boolean boolean0 = gPS1.equals(gPS0);
      assertEquals(0.0, gPS1.getX(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      GPS gPS0 = new GPS();
      boolean boolean0 = gPS0.equals("xirs9X6z8#XHXD4=3~}");
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertEquals(0.0, gPS0.getY(), 0.01);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      GPS gPS0 = new GPS();
      boolean boolean0 = gPS0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertEquals(0.0, gPS0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      GPS gPS0 = new GPS((-1.0), (-1.0));
      boolean boolean0 = gPS0.equals(gPS0);
      assertEquals((-1.0), gPS0.getY(), 0.01);
      assertTrue(boolean0);
      assertEquals((-1.0), gPS0.getX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      GPS gPS0 = new GPS();
      GPS gPS1 = new GPS((-1547.373), (-1547.373));
      GPS gPS2 = gPS0.clone();
      boolean boolean0 = gPS1.equals(gPS2);
      assertEquals(0.0, gPS0.getY(), 0.01);
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertFalse(boolean0);
      assertTrue(gPS2.equals((Object)gPS0));
      assertEquals((-1547.373), gPS1.getX(), 0.01);
      assertEquals((-1547.373), gPS1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      GPS gPS0 = new GPS();
      GPS gPS1 = gPS0.clone();
      boolean boolean0 = gPS0.equals(gPS1);
      assertEquals(0.0, gPS0.getY(), 0.01);
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      GPS gPS0 = new GPS();
      double double0 = gPS0.distancia(gPS0);
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, gPS0.getX(), 0.01);
      assertEquals(0.0, gPS0.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      GPS gPS0 = new GPS();
      String string0 = gPS0.toString();
      assertEquals("GPS: (0.0,0.0)", string0);
  }
}
