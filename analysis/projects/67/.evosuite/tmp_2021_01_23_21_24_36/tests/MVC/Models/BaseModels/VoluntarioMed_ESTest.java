/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:35:36 GMT 2021
 */

package MVC.Models.BaseModels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Models.BaseModels.VoluntarioMed;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class VoluntarioMed_ESTest extends VoluntarioMed_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed();
      voluntarioMed0.setVelocidadeMed((-1767.5498));
      VoluntarioMed voluntarioMed1 = voluntarioMed0.clone();
      assertFalse(voluntarioMed1.aceitoTrasnporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed();
      voluntarioMed0.classificaVoluntario(377);
      VoluntarioMed voluntarioMed1 = voluntarioMed0.clone();
      assertFalse(voluntarioMed1.aceitoTrasnporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed("W%?W/)nCT,y4>RZ.", "W%?W/)nCT,y4>RZ.", 4.0, 4.0, 0.0, false);
      voluntarioMed0.classificaVoluntario((-2899));
      VoluntarioMed voluntarioMed1 = voluntarioMed0.clone();
      assertFalse(voluntarioMed1.aceitoTrasnporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed("C\u00F3digo: ", "C\u00F3digo: ", 272.052883362997, (-1238.849413), (-1974.127060152611), false);
      voluntarioMed0.setEstaLivre(false);
      VoluntarioMed voluntarioMed1 = voluntarioMed0.clone();
      assertFalse(voluntarioMed1.aceitoTrasnporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed("", "N0C/", 0.0, 0.0, 239.4292, true);
      VoluntarioMed voluntarioMed1 = voluntarioMed0.clone();
      assertTrue(voluntarioMed1.aceitoTrasnporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed();
      boolean boolean0 = voluntarioMed0.aceitoTrasnporteMedicamentos();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed("", "", 0.0, 0.0, 2212.55878378558, true);
      boolean boolean0 = voluntarioMed0.aceitoTrasnporteMedicamentos();
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed("C\u00F3digo: ", "C\u00F3digo: ", 272.052883362997, (-1238.849413), (-1974.127060152611), false);
      VoluntarioMed voluntarioMed1 = new VoluntarioMed(voluntarioMed0);
      assertFalse(voluntarioMed1.aceitoTrasnporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed();
      String string0 = voluntarioMed0.toString();
      assertEquals("Voluntario{\nC\u00F3digo: \nNome: \nGPS: (0.0,0.0)\nRaio: 0.0\nClassificacao:0.00\n}Transporta Medicamentos: false\n", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = new VoluntarioMed();
      voluntarioMed0.aceitaMedicamentos(false);
      assertFalse(voluntarioMed0.aceitoTrasnporteMedicamentos());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      VoluntarioMed voluntarioMed0 = null;
      try {
        voluntarioMed0 = new VoluntarioMed((VoluntarioMed) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.User", e);
      }
  }
}
