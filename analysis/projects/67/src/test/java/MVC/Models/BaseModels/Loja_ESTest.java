/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 17:57:05 GMT 2021
 */

package MVC.Models.BaseModels;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import MVC.Models.BaseModels.Loja;
import MVC.Models.BaseModels.Produto;
import java.util.Collection;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Loja_ESTest extends Loja_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.produtos = null;
      // Undeclared exception!
      try { 
        loja0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.produtos = null;
      // Undeclared exception!
      try { 
        loja0.getListaProdutos();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.produtos = null;
      // Undeclared exception!
      try { 
        loja0.clone();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Loja loja0 = new Loja("", "\n}", (-1.0), (-1.0));
      // Undeclared exception!
      try { 
        loja0.addProdutos((Collection<Produto>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Loja loja0 = null;
      try {
        loja0 = new Loja((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.User", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = new Loja(loja0);
      assertEquals("", loja1.getCod());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Loja loja0 = new Loja("E?oe>1%nN~K", "Loja{\n", 0.0, 0.0);
      boolean boolean0 = loja0.existeProduto("E?oe>1%nN~K");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Loja loja0 = new Loja();
      List<Produto> list0 = loja0.getListaProdutos();
      loja0.addProdutos(list0);
      assertEquals("", loja0.getCod());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Loja loja0 = new Loja("E?oe>1%nN~K", "Loja{\n", 0.0, 0.0);
      // Undeclared exception!
      try { 
        loja0.addProduto((Produto) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Loja loja0 = new Loja("^pS]I[1Pv{b{{", "", 1395.349375181966, (-1.0));
      String string0 = loja0.toString();
      assertEquals("Loja{\nC\u00F3digo: ^pS]I[1Pv{b{{\nNome: \nGPS: (1395.349375181966,-1.0)\n}", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Loja loja0 = new Loja("E?oe>1%nN~K", "Loja{\n", 0.0, 0.0);
      Loja loja1 = loja0.clone();
      assertNotSame(loja1, loja0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Loja loja0 = new Loja("^pS]I[1Pv{b{{", "", 1395.349375181966, (-1.0));
      // Undeclared exception!
      try { 
        loja0.getProduto("`aW<I<_Y((x$i");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("MVC.Models.BaseModels.Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.getDuracaoFila();
      double double0 = loja0.getDuracaoFila();
      assertEquals(0.05, double0, 0.01);
  }
}
