/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:43:48 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinhaEncomenda_ESTest extends LinhaEncomenda_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("Alcool", "Alcool", (-84.60428761364598), (-84.60428761364598));
      linhaEncomenda0.setQuantidade((-84.60428761364598));
      linhaEncomenda0.setCodigo("Prodto: ");
      linhaEncomenda0.setPreco(1.0);
      linhaEncomenda0.setPreco((-84.60428761364598));
      linhaEncomenda0.isMed();
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setCodigo("y?8s*!%|>xLm]=f-");
      linhaEncomenda1.setDescricao("Quantidade: ");
      linhaEncomenda1.setDescricao(".[G");
      linhaEncomenda1.setDescricao(";5l%)r9RO");
      linhaEncomenda0.isMed();
      linhaEncomenda0.isMed();
      linhaEncomenda0.equals("Alcool");
      linhaEncomenda0.equals("Alcool");
      linhaEncomenda1.isMed();
      linhaEncomenda1.toString();
      linhaEncomenda1.toString();
      linhaEncomenda0.toString();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda2.equals("");
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("Alcool", "Alcool", (-84.60428761364598), (-84.60428761364598));
      linhaEncomenda0.setQuantidade((-84.60428761364598));
      linhaEncomenda0.setCodigo("Prodto: ");
      linhaEncomenda0.setPreco(1.0);
      linhaEncomenda0.setPreco((-84.60428761364598));
      linhaEncomenda0.isMed();
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setCodigo("y?8s*!%|>xLm]=f-");
      linhaEncomenda1.setDescricao("Quantidade: ");
      linhaEncomenda1.setDescricao(".[G");
      linhaEncomenda1.setDescricao(";5l%)r9RO");
      linhaEncomenda0.isMed();
      linhaEncomenda0.isMed();
      linhaEncomenda0.equals("Alcool");
      linhaEncomenda1.isMed();
      linhaEncomenda1.toString();
      linhaEncomenda1.toString();
      linhaEncomenda0.toString();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda2.equals("");
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.toString();
      linhaEncomenda0.setDescricao("\nC\u00F3digo de produto:  \nProduto:  \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      linhaEncomenda1.toString();
      linhaEncomenda0.isMed();
      linhaEncomenda0.equals(linhaEncomenda0);
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      LinhaEncomenda linhaEncomenda3 = new LinhaEncomenda(linhaEncomenda0);
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda1.clone();
      linhaEncomenda4.equals(linhaEncomenda2);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("/l]yXU", "/l]yXU", (-1.0), (-1787.71496394519));
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda0.isMed();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      linhaEncomenda2.setCodigo("\n");
      linhaEncomenda2.setQuantidade((-1.0));
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda2.clone();
      linhaEncomenda0.toString();
      linhaEncomenda0.toString();
      linhaEncomenda4.equals(linhaEncomenda0);
      linhaEncomenda4.isMed();
      LinhaEncomenda linhaEncomenda5 = linhaEncomenda0.clone();
      linhaEncomenda0.equals("/l]yXU");
      linhaEncomenda4.clone();
      LinhaEncomenda linhaEncomenda6 = linhaEncomenda1.clone();
      LinhaEncomenda linhaEncomenda7 = linhaEncomenda6.clone();
      linhaEncomenda7.clone();
      LinhaEncomenda linhaEncomenda8 = linhaEncomenda4.clone();
      linhaEncomenda8.toString();
      linhaEncomenda8.setPreco((-362.0227709412305));
      linhaEncomenda5.setQuantidade((-1787.71496394519));
      linhaEncomenda8.setQuantidade((-1787.71496394519));
      linhaEncomenda5.equals(linhaEncomenda1);
      linhaEncomenda4.clone();
      LinhaEncomenda linhaEncomenda9 = linhaEncomenda3.clone();
      linhaEncomenda9.isMed();
      linhaEncomenda5.toString();
      linhaEncomenda0.clone();
      linhaEncomenda9.isMed();
      linhaEncomenda4.isMed();
      linhaEncomenda5.isMed();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "Desinfetante", 0.0, 0.0);
      linhaEncomenda0.setCodigo("");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.toString();
      linhaEncomenda1.setPreco(1.0);
      linhaEncomenda0.getQuantidade();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda0.setCodigo("");
      linhaEncomenda1.equals("");
      linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      linhaEncomenda0.setQuantidade((-1953.325968));
      linhaEncomenda0.getQuantidade();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.getQuantidade();
      linhaEncomenda2.getCodigo();
      linhaEncomenda1.setQuantidade(0.0);
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda1.clone();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda2.setDescricao("");
      linhaEncomenda3.getDescricao();
      linhaEncomenda1.isMed();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.toString();
      linhaEncomenda0.setQuantidade(1255.48);
      linhaEncomenda0.setCodigo("\nC\u00F3digo de produto:  \nProduto:  \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      linhaEncomenda0.setCodigo("");
      linhaEncomenda0.toString();
      linhaEncomenda0.setPreco((-1.0));
      linhaEncomenda0.getDescricao();
      linhaEncomenda0.equals("\nC\u00F3digo de produto:  \nProduto:  \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setDescricao("");
      linhaEncomenda0.getCodigo();
      linhaEncomenda1.toString();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      LinhaEncomenda linhaEncomenda3 = new LinhaEncomenda("", "", (-1.0), 0.0);
      linhaEncomenda1.equals(linhaEncomenda3);
      linhaEncomenda2.toString();
      linhaEncomenda2.getDescricao();
      linhaEncomenda0.getQuantidade();
      linhaEncomenda2.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      String string0 = null;
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("Ei81coY.-)BYRW5=#a{", (String) null, 1.0, 3630.993733843263);
      linhaEncomenda0.setQuantidade(3630.993733843263);
      linhaEncomenda0.toString();
      linhaEncomenda0.getDescricao();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      // Undeclared exception!
      try { 
        linhaEncomenda0.equals(linhaEncomenda1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      String string0 = null;
      double double0 = 0.0;
      double double1 = (-4206.434648381356);
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda((String) null, (String) null, 0.0, (-4206.434648381356));
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setDescricao((String) null);
      linhaEncomenda1.setCodigo((String) null);
      linhaEncomenda1.setCodigo((String) null);
      linhaEncomenda0.equals((Object) null);
      linhaEncomenda1.setDescricao("x+B+;W67");
      linhaEncomenda0.getPreco();
      linhaEncomenda0.getCodigo();
      linhaEncomenda1.isMed();
      // Undeclared exception!
      try { 
        linhaEncomenda0.isMed();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      linhaEncomenda0.setPreco(1.0);
      linhaEncomenda0.setCodigo("");
      linhaEncomenda0.getQuantidade();
      LinhaEncomenda linhaEncomenda2 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda2.setQuantidade(1646.9283);
      linhaEncomenda2.setPreco(0.0);
      linhaEncomenda0.setPreco(1646.9283);
      linhaEncomenda0.equals(linhaEncomenda2);
      linhaEncomenda0.getPreco();
      linhaEncomenda2.setQuantidade(1.0);
      linhaEncomenda2.setCodigo(" Zcp6iyDvTaC");
      linhaEncomenda0.getPreco();
      linhaEncomenda1.setDescricao("");
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("Saco de lixo 30l", "Saco de lixo 30l", (-641.58635963436), (-641.58635963436));
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda0.toString();
      linhaEncomenda0.setQuantidade(3691.00036688513);
      linhaEncomenda1.setPreco(599.57414219);
      linhaEncomenda1.setCodigo("Saco de lixo 30l");
      linhaEncomenda0.setQuantidade(303.5353);
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda1.setCodigo("Saco de lixo 30l");
      linhaEncomenda2.setQuantidade(0.0);
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      linhaEncomenda3.setPreco(303.5353);
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda2.clone();
      linhaEncomenda1.setCodigo("Produto: ");
      linhaEncomenda4.setPreco((-641.58635963436));
      linhaEncomenda2.setQuantidade((-2396.8));
      linhaEncomenda1.getDescricao();
      linhaEncomenda0.setDescricao("\nC\u00F3digo de produto: Saco de lixo 30l\nProduto: Saco de lixo 30l\nQuantidade: -641.58635963436\nPre\u00E7o: -641.58635963436\n");
      linhaEncomenda0.setDescricao("Saco de lixo 30l");
      linhaEncomenda2.setQuantidade(0.0);
      linhaEncomenda2.setDescricao("Saco de lixo 30l");
      linhaEncomenda2.isMed();
      linhaEncomenda4.toString();
      linhaEncomenda3.setCodigo("Produto: ");
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setQuantidade((-2086.0));
      linhaEncomenda0.toString();
      linhaEncomenda0.toString();
      linhaEncomenda0.setPreco((-1.0));
      linhaEncomenda0.setCodigo("");
      linhaEncomenda0.setDescricao("Saco de lixo 30l");
      linhaEncomenda0.setQuantidade(1061.953116834985);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.getDescricao();
      linhaEncomenda1.getPreco();
      linhaEncomenda0.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda0.toString();
      linhaEncomenda0.setQuantidade((-2259.813272));
      linhaEncomenda1.equals(linhaEncomenda0);
      linhaEncomenda1.getQuantidade();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      linhaEncomenda2.setDescricao("(EmC(4XNXdc\"");
      linhaEncomenda0.equals((Object) null);
      linhaEncomenda1.equals("\nC\u00F3digo de produto:  \nProduto:  \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      linhaEncomenda1.clone();
      linhaEncomenda0.setQuantidade((-941.661186349007));
      linhaEncomenda0.setDescricao("(EmC(4XNXdc\"");
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setPreco((-1664.8267751));
      linhaEncomenda0.setQuantidade((-2002.0));
      linhaEncomenda0.clone();
      linhaEncomenda0.setPreco((-2002.0));
      linhaEncomenda0.getQuantidade();
      linhaEncomenda0.equals((Object) null);
      linhaEncomenda0.getCodigo();
      linhaEncomenda0.setPreco((-2002.0));
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("c", "dJ", (-1568.71140529), (-1568.71140529));
      linhaEncomenda0.getPreco();
      linhaEncomenda0.clone();
      linhaEncomenda0.isMed();
      linhaEncomenda0.isMed();
      linhaEncomenda0.getPreco();
      linhaEncomenda0.clone();
      linhaEncomenda0.setCodigo((String) null);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "\n", (-119.9077832), (-119.9077832));
      linhaEncomenda0.getPreco();
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", (String) null, (-1.0), (-503.8041));
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setQuantidade(357.064606483517);
      linhaEncomenda1.setPreco((-503.8041));
      linhaEncomenda1.setPreco(2710.14964672);
      linhaEncomenda1.setPreco(0.0);
      linhaEncomenda0.getCodigo();
      linhaEncomenda0.setQuantidade((-1.0));
      linhaEncomenda1.clone();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("C\u00F3digo de produto: ", "C\u00F3digo de produto: ", 3701.6758, 3701.6758);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setQuantidade((-1664.463));
      linhaEncomenda1.toString();
      linhaEncomenda1.setPreco(0.0);
      linhaEncomenda0.getQuantidade();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      linhaEncomenda1.setQuantidade(270.0);
      linhaEncomenda2.getPreco();
      linhaEncomenda1.toString();
      linhaEncomenda2.equals(linhaEncomenda0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("G5(F-(,v]", "G5(F-(,v]", 2348.243216, 2348.243216);
      linhaEncomenda0.setDescricao("G5(F-(,v]");
      linhaEncomenda0.toString();
      linhaEncomenda0.getQuantidade();
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.toString();
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.setPreco((-2019.748363620582));
      linhaEncomenda0.getDescricao();
      linhaEncomenda0.clone();
      linhaEncomenda0.getDescricao();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "H;;D,|P$z4E{^c2h", (-1169.09), 1752.3);
      linhaEncomenda0.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 808.7420741817841, 1.0);
      linhaEncomenda0.getPreco();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.getCodigo();
      linhaEncomenda0.getQuantidade();
      linhaEncomenda0.clone();
      linhaEncomenda0.setCodigo("\"7;KNj~'k>");
      linhaEncomenda0.getCodigo();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda2.toString();
      linhaEncomenda1.setDescricao("\nC\u00F3digo de produto:  \nProduto:  \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      linhaEncomenda2.toString();
      linhaEncomenda1.setQuantidade(0.0);
      linhaEncomenda1.equals(linhaEncomenda0);
      linhaEncomenda1.equals(linhaEncomenda0);
      linhaEncomenda2.clone();
      linhaEncomenda0.clone();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("[KjZ1M81hTXQ3a-", "[KjZ1M81hTXQ3a-", 0.0, 0.0);
      linhaEncomenda0.setPreco(909.6411050754779);
      linhaEncomenda0.setDescricao("L:uD^b2Z7kud");
      linhaEncomenda0.getCodigo();
      linhaEncomenda0.setCodigo("[KjZ1M81hTXQ3a-");
      linhaEncomenda0.getCodigo();
      linhaEncomenda0.isMed();
      linhaEncomenda0.setQuantidade(0.0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.getDescricao();
      linhaEncomenda1.clone();
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao("Y=-Kmj/s");
      linhaEncomenda0.setPreco(2456.2889958);
      linhaEncomenda0.setPreco(2456.2889958);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda("", "", 2456.2889958, 2456.2889958);
      linhaEncomenda1.setPreco(2456.2889958);
      linhaEncomenda1.setPreco((-810.6037));
      linhaEncomenda0.equals(linhaEncomenda1);
      linhaEncomenda1.getCodigo();
      linhaEncomenda0.equals("");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda((String) null, "", 0.0, 0.0);
      linhaEncomenda0.setPreco(366.4643);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda0.toString();
      linhaEncomenda0.toString();
      linhaEncomenda0.getPreco();
      linhaEncomenda0.isMed();
      linhaEncomenda0.setQuantidade((-680.7169027182379));
      linhaEncomenda1.getDescricao();
      linhaEncomenda1.setDescricao("!7VBJh,LJxWT/s}X%");
      linhaEncomenda0.getPreco();
      // Undeclared exception!
      try { 
        linhaEncomenda1.equals(linhaEncomenda0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = null;
      try {
        linhaEncomenda0 = new LinhaEncomenda((LinhaEncomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("LinhaEncomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.equals("rGf8Nw`G;y[4E#");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setCodigo("");
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.getPreco();
      linhaEncomenda0.setDescricao("2wJ&Y% :");
      linhaEncomenda0.toString();
      linhaEncomenda0.toString();
      linhaEncomenda0.setDescricao("DNR4i\"| xf/");
      linhaEncomenda0.isMed();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setQuantidade(605.0);
      linhaEncomenda0.getDescricao();
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.toString();
      linhaEncomenda0.setPreco(1.0);
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao((String) null);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("IjGRK2~hW^kceh1.wi", "IjGRK2~hW^kceh1.wi", 0.0, 0.0);
      linhaEncomenda0.getDescricao();
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("Saco de lixo 30l", "Saco de lixo 30l", (-641.58635963436), (-641.58635963436));
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda0.toString();
      linhaEncomenda0.setQuantidade(3691.00036688513);
      linhaEncomenda1.setPreco((-641.58635963436));
      linhaEncomenda1.setCodigo("Saco de lixo 30l");
      linhaEncomenda0.setQuantidade(303.5353);
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda1.setCodigo("Saco de lixo 30l");
      linhaEncomenda2.setQuantidade(0.0);
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      linhaEncomenda3.setPreco(303.5353);
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda2.clone();
      linhaEncomenda1.setCodigo("Produto: ");
      linhaEncomenda4.setPreco((-641.58635963436));
      linhaEncomenda2.setQuantidade(0.0);
      linhaEncomenda1.getDescricao();
      linhaEncomenda0.setDescricao("Saco de lixo 30l");
      linhaEncomenda2.setQuantidade(0.0);
      linhaEncomenda2.setDescricao("Saco de lixo 30l");
      linhaEncomenda2.isMed();
      linhaEncomenda4.toString();
      linhaEncomenda3.setCodigo("Produto: ");
      linhaEncomenda3.equals(linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("g-I<^51W}-\u0002 R", "g-I<^51W}-\u0002 R", (-895.302078689), (-895.302078689));
      linhaEncomenda0.toString();
      linhaEncomenda0.equals("\nC\u00F3digo de produto: g-I<^51W}-\u0002 R\nProduto: g-I<^51W}-\u0002 R\nQuantidade: -895.302078689\nPre\u00E7o: -895.302078689\n");
      linhaEncomenda0.setCodigo("\nC\u00F3digo de produto: g-I<^51W}-\u0002 R\nProduto: g-I<^51W}-\u0002 R\nQuantidade: -895.302078689\nPre\u00E7o: -895.302078689\n");
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setQuantidade(668.48247386);
      linhaEncomenda0.isMed();
      linhaEncomenda1.toString();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao("");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      linhaEncomenda0.setPreco((-1.0));
      linhaEncomenda1.setCodigo("");
      linhaEncomenda0.setCodigo("1*pZV");
      linhaEncomenda1.setDescricao("");
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda1.clone();
      linhaEncomenda1.setQuantidade(1098.50111671043);
      linhaEncomenda1.setQuantidade((-1.0));
      linhaEncomenda4.setDescricao("");
      LinhaEncomenda linhaEncomenda5 = linhaEncomenda4.clone();
      linhaEncomenda5.setCodigo("DiU5K?zR.s$5yb");
      linhaEncomenda4.setCodigo("");
      linhaEncomenda1.equals(linhaEncomenda0);
      LinhaEncomenda linhaEncomenda6 = linhaEncomenda0.clone();
      linhaEncomenda6.setQuantidade(2423.146199565784);
      LinhaEncomenda linhaEncomenda7 = linhaEncomenda4.clone();
      LinhaEncomenda linhaEncomenda8 = linhaEncomenda6.clone();
      linhaEncomenda8.setDescricao("1*pZV");
      linhaEncomenda3.toString();
      linhaEncomenda4.equals(linhaEncomenda7);
      LinhaEncomenda linhaEncomenda9 = new LinhaEncomenda(linhaEncomenda5);
      linhaEncomenda1.equals(linhaEncomenda9);
      linhaEncomenda2.equals(linhaEncomenda4);
      linhaEncomenda6.clone();
      LinhaEncomenda linhaEncomenda10 = new LinhaEncomenda("", "I", 0.0, 2423.146199565784);
      linhaEncomenda1.equals(linhaEncomenda10);
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setPreco((-29.0));
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      linhaEncomenda1.toString();
      linhaEncomenda0.equals("<^yy!LPqr:M");
      linhaEncomenda0.setPreco(0.0);
      linhaEncomenda1.setQuantidade(839.0632022003688);
      linhaEncomenda0.setDescricao("\nC\u00F3digo de produto:  \nProduto:  \nQuantidade: 0.0\nPre\u00E7o: -29.0\n");
      linhaEncomenda0.equals("Saco de lixo de 50l");
      linhaEncomenda1.equals("<^yy!LPqr:M");
      linhaEncomenda1.equals((Object) null);
      linhaEncomenda1.isMed();
      linhaEncomenda0.toString();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda2.toString();
      linhaEncomenda1.equals("Saco de lixo de 50l");
      linhaEncomenda0.equals("Saco de lixo de 50l");
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda1.clone();
      linhaEncomenda1.toString();
      linhaEncomenda3.setDescricao("Bm!bYfd]-");
      linhaEncomenda0.clone();
      linhaEncomenda1.isMed();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.clone();
      linhaEncomenda1.getCodigo();
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("Saco de lixo de 50l", "Saco de lixo de 50l", (-3984.4031), (-3984.4031));
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setPreco((-3984.4031));
      linhaEncomenda0.toString();
      linhaEncomenda0.setPreco((-3984.4031));
      linhaEncomenda0.setCodigo("");
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      linhaEncomenda1.isMed();
      linhaEncomenda1.isMed();
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda0.clone();
      linhaEncomenda1.setQuantidade((-3984.4031));
      linhaEncomenda3.clone();
      linhaEncomenda1.isMed();
      linhaEncomenda1.toString();
      linhaEncomenda2.isMed();
      linhaEncomenda1.isMed();
      linhaEncomenda1.toString();
      linhaEncomenda3.isMed();
      linhaEncomenda2.toString();
      linhaEncomenda2.isMed();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("]GNbTQc^VfUi@4G", "0pK(tGLt", (-2197.1), (-1.0));
      linhaEncomenda0.setDescricao("o");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda2.setCodigo("]GNbTQc^VfUi@4G");
      linhaEncomenda1.toString();
      linhaEncomenda0.equals(linhaEncomenda1);
      linhaEncomenda2.setCodigo("\nC\u00F3digo de produto: ]GNbTQc^VfUi@4G\nProduto: o\nQuantidade: -2197.1\nPre\u00E7o: -1.0\n");
      linhaEncomenda0.setCodigo("]GNbTQc^VfUi@4G");
      linhaEncomenda1.toString();
      linhaEncomenda0.isMed();
      linhaEncomenda2.equals((Object) null);
      linhaEncomenda2.getCodigo();
      linhaEncomenda2.getPreco();
      linhaEncomenda2.setDescricao("\nC\u00F3digo de produto: ]GNbTQc^VfUi@4G\nProduto: o\nQuantidade: -2197.1\nPre\u00E7o: -1.0\n");
      linhaEncomenda0.toString();
      linhaEncomenda0.equals((Object) null);
      linhaEncomenda1.getDescricao();
      linhaEncomenda2.setCodigo("]GNbTQc^VfUi@4G");
      linhaEncomenda2.setQuantidade(818.4712);
      LinhaEncomenda linhaEncomenda3 = new LinhaEncomenda("\nC\u00F3digo de produto: ]GNbTQc^VfUi@4G\nProduto: o\nQuantidade: -2197.1\nPre\u00E7o: -1.0\n", "\nC\u00F3digo de produto: ]GNbTQc^VfUi@4G\nProduto: o\nQuantidade: -2197.1\nPre\u00E7o: -1.0\n", 1.0, (-1.0));
      linhaEncomenda1.equals(linhaEncomenda3);
      linhaEncomenda0.setDescricao("");
      linhaEncomenda1.getCodigo();
      linhaEncomenda3.getDescricao();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setCodigo("\n");
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.toString();
      linhaEncomenda1.setPreco(0.0);
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.setPreco(0.0);
      linhaEncomenda0.getCodigo();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      linhaEncomenda2.getPreco();
      linhaEncomenda2.setPreco(20.8494);
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda1.clone();
      LinhaEncomenda linhaEncomenda4 = new LinhaEncomenda();
      linhaEncomenda4.toString();
      linhaEncomenda1.equals(linhaEncomenda4);
      linhaEncomenda3.clone();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda0.setQuantidade(191.89843);
      linhaEncomenda2.toString();
      linhaEncomenda1.setDescricao("\nC\u00F3digo de produto:  \nProduto:  \nQuantidade: 0.0\nPre\u00E7o: 0.0\n");
      linhaEncomenda1.equals(linhaEncomenda0);
      linhaEncomenda2.isMed();
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda2.clone();
      linhaEncomenda0.clone();
      LinhaEncomenda linhaEncomenda4 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda3.equals(linhaEncomenda4);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "Desinfetante", 0.0, 0.0);
      linhaEncomenda0.setCodigo("");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.toString();
      linhaEncomenda1.setPreco(1.0);
      linhaEncomenda0.getQuantidade();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda0.setCodigo("");
      linhaEncomenda1.equals("");
      LinhaEncomenda linhaEncomenda3 = new LinhaEncomenda("", "Desinfetante", 1.0, 0.0);
      linhaEncomenda1.toString();
      linhaEncomenda0.setQuantidade((-1953.325968));
      linhaEncomenda0.getQuantidade();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.getQuantidade();
      linhaEncomenda2.getCodigo();
      linhaEncomenda1.setQuantidade(0.0);
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda1.clone();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda2.setDescricao("&");
      linhaEncomenda4.getDescricao();
      boolean boolean0 = linhaEncomenda1.isMed();
      assertEquals(1.0, linhaEncomenda1.getPreco(), 0.01);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 1.0, 1.0);
      linhaEncomenda0.setCodigo("");
      linhaEncomenda0.clone();
      linhaEncomenda0.setCodigo("Ysa)GYP");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.toString();
      linhaEncomenda1.toString();
      linhaEncomenda1.setPreco(0.0);
      linhaEncomenda0.setQuantidade(0.0);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
  }
}
