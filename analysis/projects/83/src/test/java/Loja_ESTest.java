/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 18:07:36 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Loja_ESTest extends Loja_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      String string0 = "H%&";
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      loja0.setLatitude((-1));
      Loja loja1 = new Loja("", "H%&", " ", "C\u00F3digo: ", 2910.8822670439, 2910.8822670439, (-4459.59645542946), arrayList0, (-1));
      loja1.setNrPessoasEmFila((-515));
      loja0.setTypeUser((String) null);
      loja1.getEncNotReady();
      Loja loja2 = new Loja();
      // Undeclared exception!
      try { 
        loja0.equals(loja2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("UtilizadorSistema", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = new Loja(loja0);
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      loja1.setEncomendas_recebidas(arrayList0);
      ArrayList<Encomenda> arrayList1 = null;
      // Undeclared exception!
      try { 
        loja1.setEncomendas_recebidas((ArrayList<Encomenda>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = new Loja(loja0);
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      Loja loja2 = new Loja("mIE+0[WNX", "h+lqG_CBZ_j.bevAG", "mIE+0[WNX", "5.$dz7';DTr]a|n", 1.0, (-4573.1848119), 0.0, arrayList0, 0);
      loja0.equals(loja0);
      loja0.getEncNotReady();
      loja0.setCodigo("");
      loja1.getCodigo();
      loja1.getEncomendas_recebidas();
      loja1.setNrPessoasEmFila(2860);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      String string0 = "B";
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      String string1 = loja1.getEncNotReady();
      assertEquals("0", string1);
      assertNotNull(string1);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      ArrayList<Encomenda> arrayList1 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList1);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList1, arrayList0);
      
      Loja loja2 = new Loja((String) null, "UtilizadorSistema", "B", (String) null, 1.0, 1.0, (-1.0), arrayList0, (-2429));
      assertNotNull(loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja2.getLatitude(), 0.01);
      assertEquals(1.0, loja2.getTempo_espera(), 0.01);
      assertEquals((-2429), loja2.getNrPessoasEmFila());
      assertNull(loja2.getEmail());
      assertEquals("B", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("UtilizadorSistema", loja2.getPassword());
      assertNull(loja2.getNome());
      assertEquals(1.0, loja2.getLongitude(), 0.01);
      
      double double0 = loja2.getLatitude();
      assertEquals(1.0, double0, 0.01);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1.0, loja2.getLatitude(), 0.01);
      assertEquals(1.0, loja2.getTempo_espera(), 0.01);
      assertEquals((-2429), loja2.getNrPessoasEmFila());
      assertNull(loja2.getEmail());
      assertEquals("B", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("UtilizadorSistema", loja2.getPassword());
      assertNull(loja2.getNome());
      assertEquals(1.0, loja2.getLongitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      
      Loja loja3 = loja1.clone();
      assertNotNull(loja3);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja2));
      assertTrue(loja3.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja3.getEmail());
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getNome());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getPassword());
      assertEquals("", loja3.getCodigo());
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals("", loja3.getTypeUser());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      
      loja3.setCodigo("KpYcq.1");
      assertTrue(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja3));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja2));
      assertTrue(loja3.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja3.getEmail());
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getNome());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getPassword());
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals("", loja3.getTypeUser());
      assertEquals("KpYcq.1", loja3.getCodigo());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      
      loja3.setPassword("KpYcq.1");
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja2));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja3.getEmail());
      assertEquals("KpYcq.1", loja3.getPassword());
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getNome());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals("", loja3.getTypeUser());
      assertEquals("KpYcq.1", loja3.getCodigo());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      
      String string2 = loja3.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: KpYcq.1\nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string2);
      assertNotNull(string2);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja3.getEmail());
      assertEquals("KpYcq.1", loja3.getPassword());
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getNome());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals("", loja3.getTypeUser());
      assertEquals("KpYcq.1", loja3.getCodigo());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      
      boolean boolean0 = loja3.equals((Object) null);
      assertFalse(boolean0);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja2));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja3.getEmail());
      assertEquals("KpYcq.1", loja3.getPassword());
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getNome());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals("", loja3.getTypeUser());
      assertEquals("KpYcq.1", loja3.getCodigo());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      
      try { 
        loja3.getEnc("#3/gk)I]z9a");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      String string0 = "Lista de encomendas recebidas: ";
      double double0 = 0.0;
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      int int0 = 0;
      Loja loja1 = new Loja("#IW7h", "Lista de encomendas recebidas: ", "Lista de encomendas recebidas: ", (String) null, (-574.0183529562231), 0.0, 1.0, arrayList0, 0);
      assertNotNull(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("#IW7h", loja1.getEmail());
      assertEquals("Lista de encomendas recebidas: ", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("Lista de encomendas recebidas: ", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-574.0183529562231), loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNull(loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      
      String string1 = loja1.getNome();
      assertNull(string1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("#IW7h", loja1.getEmail());
      assertEquals("Lista de encomendas recebidas: ", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("Lista de encomendas recebidas: ", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-574.0183529562231), loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNull(loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      ArrayList<Encomenda> arrayList1 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("#IW7h", loja1.getEmail());
      assertEquals("Lista de encomendas recebidas: ", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("Lista de encomendas recebidas: ", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-574.0183529562231), loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNull(loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotSame(loja0, loja1);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList1, arrayList0);
      
      double double1 = loja0.getLatitude();
      assertEquals(0.0, double1, 0.01);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals(double1, double0, 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotSame(loja0, loja1);
      
      String string2 = "";
      try { 
        loja1.getEnc("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Loja loja1 = new Loja("U!O;\")d<G6T", "fl[F4}K1I2+Y1", (String) null, "fl[F4}K1I2+Y1", (-380.98325989), (-380.98325989), (-380.98325989), arrayList0, 0);
      assertNotNull(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-380.98325989), loja1.getTempo_espera(), 0.01);
      assertNull(loja1.getCodigo());
      assertEquals("U!O;\")d<G6T", loja1.getEmail());
      assertEquals("fl[F4}K1I2+Y1", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("fl[F4}K1I2+Y1", loja1.getNome());
      assertEquals((-380.98325989), loja1.getLongitude(), 0.01);
      assertEquals((-380.98325989), loja1.getLatitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      
      Loja loja2 = new Loja(loja1);
      assertNotNull(loja2);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-380.98325989), loja1.getTempo_espera(), 0.01);
      assertNull(loja1.getCodigo());
      assertEquals("U!O;\")d<G6T", loja1.getEmail());
      assertEquals("fl[F4}K1I2+Y1", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("fl[F4}K1I2+Y1", loja1.getNome());
      assertEquals((-380.98325989), loja1.getLongitude(), 0.01);
      assertEquals((-380.98325989), loja1.getLatitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("fl[F4}K1I2+Y1", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("U!O;\")d<G6T", loja2.getEmail());
      assertEquals((-380.98325989), loja2.getLongitude(), 0.01);
      assertEquals("fl[F4}K1I2+Y1", loja2.getNome());
      assertEquals((-380.98325989), loja2.getLatitude(), 0.01);
      assertNull(loja2.getCodigo());
      assertEquals((-380.98325989), loja2.getTempo_espera(), 0.01);
      
      loja1.setNome("Tempo de espera: ");
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-380.98325989), loja1.getTempo_espera(), 0.01);
      assertNull(loja1.getCodigo());
      assertEquals("U!O;\")d<G6T", loja1.getEmail());
      assertEquals("fl[F4}K1I2+Y1", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-380.98325989), loja1.getLongitude(), 0.01);
      assertEquals("Tempo de espera: ", loja1.getNome());
      assertEquals((-380.98325989), loja1.getLatitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      
      String string0 = loja2.getCodigo();
      assertNull(string0);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-380.98325989), loja1.getTempo_espera(), 0.01);
      assertNull(loja1.getCodigo());
      assertEquals("U!O;\")d<G6T", loja1.getEmail());
      assertEquals("fl[F4}K1I2+Y1", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-380.98325989), loja1.getLongitude(), 0.01);
      assertEquals("Tempo de espera: ", loja1.getNome());
      assertEquals((-380.98325989), loja1.getLatitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("fl[F4}K1I2+Y1", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("U!O;\")d<G6T", loja2.getEmail());
      assertEquals((-380.98325989), loja2.getLongitude(), 0.01);
      assertEquals("fl[F4}K1I2+Y1", loja2.getNome());
      assertEquals((-380.98325989), loja2.getLatitude(), 0.01);
      assertNull(loja2.getCodigo());
      assertEquals((-380.98325989), loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      String string1 = loja2.getEncNotReady();
      assertEquals("0", string1);
      assertNotNull(string1);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-380.98325989), loja1.getTempo_espera(), 0.01);
      assertNull(loja1.getCodigo());
      assertEquals("U!O;\")d<G6T", loja1.getEmail());
      assertEquals("fl[F4}K1I2+Y1", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-380.98325989), loja1.getLongitude(), 0.01);
      assertEquals("Tempo de espera: ", loja1.getNome());
      assertEquals((-380.98325989), loja1.getLatitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("fl[F4}K1I2+Y1", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("U!O;\")d<G6T", loja2.getEmail());
      assertEquals((-380.98325989), loja2.getLongitude(), 0.01);
      assertEquals("fl[F4}K1I2+Y1", loja2.getNome());
      assertEquals((-380.98325989), loja2.getLatitude(), 0.01);
      assertNull(loja2.getCodigo());
      assertEquals((-380.98325989), loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      try { 
        loja2.getEnc((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Loja loja1 = new Loja("", "", "", "i3,,HFw%y:&uYwKG[", 0.0, 0.0, (-1.0), arrayList0, (-3210));
      assertNotNull(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals((-3210), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("i3,,HFw%y:&uYwKG[", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      
      Loja loja2 = new Loja(loja1);
      assertNotNull(loja2);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals((-3210), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("i3,,HFw%y:&uYwKG[", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja2.getEmail());
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-3210), loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("i3,,HFw%y:&uYwKG[", loja2.getNome());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      
      loja2.setNrPessoasEmFila((-3210));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals((-3210), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("i3,,HFw%y:&uYwKG[", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja2.getEmail());
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-3210), loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("i3,,HFw%y:&uYwKG[", loja2.getNome());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      String string0 = loja2.getNome();
      assertEquals("i3,,HFw%y:&uYwKG[", string0);
      assertNotNull(string0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals((-3210), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("i3,,HFw%y:&uYwKG[", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja2.getEmail());
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-3210), loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("i3,,HFw%y:&uYwKG[", loja2.getNome());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      double double0 = loja0.getLatitude();
      assertEquals(0.0, double0, 0.01);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      
      Loja loja3 = loja1.clone();
      assertNotNull(loja3);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja1.equals((Object)loja2));
      assertTrue(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertTrue(loja3.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals((-3210), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("i3,,HFw%y:&uYwKG[", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja3.getPassword());
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals("i3,,HFw%y:&uYwKG[", loja3.getNome());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getCodigo());
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals((-3210), loja3.getNrPessoasEmFila());
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals("", loja3.getEmail());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja1);
      
      loja0.setCodigo("\n");
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja3));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("\n", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Loja loja1 = new Loja((String) null, "", "0", "0", 1164.16807, 1164.16807, 0.0, arrayList0, 0);
      assertNotNull(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("0", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(1164.16807, loja1.getTempo_espera(), 0.01);
      assertEquals(1164.16807, loja1.getLatitude(), 0.01);
      assertNull(loja1.getEmail());
      assertEquals(1164.16807, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("0", loja1.getCodigo());
      
      Loja loja2 = new Loja(loja1);
      assertNotNull(loja2);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("0", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(1164.16807, loja1.getTempo_espera(), 0.01);
      assertEquals(1164.16807, loja1.getLatitude(), 0.01);
      assertNull(loja1.getEmail());
      assertEquals(1164.16807, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("0", loja1.getCodigo());
      assertEquals(1164.16807, loja2.getLatitude(), 0.01);
      assertEquals(1164.16807, loja2.getTempo_espera(), 0.01);
      assertEquals("0", loja2.getCodigo());
      assertEquals("0", loja2.getNome());
      assertNull(loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(1164.16807, loja2.getLongitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals(0, loja2.getNrPessoasEmFila());
      
      Loja loja3 = loja2.clone();
      assertNotNull(loja3);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("0", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(1164.16807, loja1.getTempo_espera(), 0.01);
      assertEquals(1164.16807, loja1.getLatitude(), 0.01);
      assertNull(loja1.getEmail());
      assertEquals(1164.16807, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("0", loja1.getCodigo());
      assertEquals(1164.16807, loja2.getLatitude(), 0.01);
      assertEquals(1164.16807, loja2.getTempo_espera(), 0.01);
      assertEquals("0", loja2.getCodigo());
      assertEquals("0", loja2.getNome());
      assertNull(loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(1164.16807, loja2.getLongitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja3.getPassword());
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals(1164.16807, loja3.getLongitude(), 0.01);
      assertEquals(1164.16807, loja3.getLatitude(), 0.01);
      assertNull(loja3.getEmail());
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals(1164.16807, loja3.getTempo_espera(), 0.01);
      assertEquals("0", loja3.getCodigo());
      assertEquals("0", loja3.getNome());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja3);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Loja loja2 = new Loja("f43UHh@2U", "MI9G7O4TpC@hkK", "Encomenda", "", 0.0, 0.0, 0.0, arrayList0, 4429);
      assertNotNull(loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(4429, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("MI9G7O4TpC@hkK", loja2.getPassword());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("Encomenda", loja2.getCodigo());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      
      Loja loja3 = new Loja(loja2);
      assertNotNull(loja3);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja2));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(4429, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("MI9G7O4TpC@hkK", loja2.getPassword());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("Encomenda", loja2.getCodigo());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("MI9G7O4TpC@hkK", loja3.getPassword());
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals("Encomenda", loja3.getCodigo());
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals(4429, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getNome());
      
      boolean boolean0 = loja2.equals(loja3);
      assertTrue(boolean0);
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja3));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja2));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(4429, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("MI9G7O4TpC@hkK", loja2.getPassword());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("Encomenda", loja2.getCodigo());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("MI9G7O4TpC@hkK", loja3.getPassword());
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals("Encomenda", loja3.getCodigo());
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals(4429, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getNome());
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja3);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja1);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja1);
      
      loja3.setTypeUser("Encomenda");
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja3));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja1));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(4429, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("MI9G7O4TpC@hkK", loja2.getPassword());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("Encomenda", loja2.getCodigo());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("MI9G7O4TpC@hkK", loja3.getPassword());
      assertEquals("Encomenda", loja3.getTypeUser());
      assertEquals("Encomenda", loja3.getCodigo());
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals(4429, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getNome());
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja3);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja1);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja1);
      
      try { 
        loja2.getEnc("MI9G7O4TpC@hkK");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Loja loja1 = new Loja("", "", (String) null, "C\u00F3digo da loja: ", (-1644.67583266), (-1644.67583266), 1252.0, arrayList0, 0);
      assertNotNull(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("C\u00F3digo da loja: ", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals((-1644.67583266), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals((-1644.67583266), loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-1644.67583266), loja1.getLongitude(), 0.01);
      
      Loja loja2 = new Loja(loja1);
      assertNotNull(loja2);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("C\u00F3digo da loja: ", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals((-1644.67583266), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals((-1644.67583266), loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-1644.67583266), loja1.getLongitude(), 0.01);
      assertEquals((-1644.67583266), loja2.getLongitude(), 0.01);
      assertEquals("C\u00F3digo da loja: ", loja2.getNome());
      assertNull(loja2.getCodigo());
      assertEquals((-1644.67583266), loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getEmail());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-1644.67583266), loja2.getLatitude(), 0.01);
      
      Loja loja3 = loja2.clone();
      assertNotNull(loja3);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja3.equals((Object)loja2));
      assertTrue(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("C\u00F3digo da loja: ", loja1.getNome());
      assertNull(loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals((-1644.67583266), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals((-1644.67583266), loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-1644.67583266), loja1.getLongitude(), 0.01);
      assertEquals((-1644.67583266), loja2.getLongitude(), 0.01);
      assertEquals("C\u00F3digo da loja: ", loja2.getNome());
      assertNull(loja2.getCodigo());
      assertEquals((-1644.67583266), loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getEmail());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-1644.67583266), loja2.getLatitude(), 0.01);
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getPassword());
      assertNull(loja3.getCodigo());
      assertEquals("C\u00F3digo da loja: ", loja3.getNome());
      assertEquals((-1644.67583266), loja3.getLongitude(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals((-1644.67583266), loja3.getTempo_espera(), 0.01);
      assertEquals("", loja3.getEmail());
      assertEquals((-1644.67583266), loja3.getLatitude(), 0.01);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Loja loja2 = new Loja("Loja", "Loja", "Loja", "Loja", 254.41158828056, 254.41158828056, 254.41158828056, arrayList0, (-697));
      assertNotNull(loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(254.41158828056, loja2.getLatitude(), 0.01);
      assertEquals("Loja", loja2.getCodigo());
      assertEquals(254.41158828056, loja2.getTempo_espera(), 0.01);
      assertEquals("Loja", loja2.getNome());
      assertEquals("Loja", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("Loja", loja2.getPassword());
      assertEquals((-697), loja2.getNrPessoasEmFila());
      assertEquals(254.41158828056, loja2.getLongitude(), 0.01);
      
      double double0 = loja2.getLongitude();
      assertEquals(254.41158828056, double0, 0.01);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(254.41158828056, loja2.getLatitude(), 0.01);
      assertEquals("Loja", loja2.getCodigo());
      assertEquals(254.41158828056, loja2.getTempo_espera(), 0.01);
      assertEquals("Loja", loja2.getNome());
      assertEquals("Loja", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("Loja", loja2.getPassword());
      assertEquals((-697), loja2.getNrPessoasEmFila());
      assertEquals(254.41158828056, loja2.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Loja loja2 = new Loja("K-^)P9f5 KR(", "K-^)P9f5 KR(", "K-^)P9f5 KR(", "K-^)P9f5 KR(", 0.0, 675.701646643, 0.0, arrayList0, (-2020));
      assertNotNull(loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(675.701646643, loja2.getLatitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals((-2020), loja2.getNrPessoasEmFila());
      assertEquals("K-^)P9f5 KR(", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("K-^)P9f5 KR(", loja2.getPassword());
      assertEquals("K-^)P9f5 KR(", loja2.getCodigo());
      assertEquals(675.701646643, loja2.getLongitude(), 0.01);
      assertEquals("K-^)P9f5 KR(", loja2.getNome());
      
      loja2.setNrPessoasEmFila((-2020));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(675.701646643, loja2.getLatitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals((-2020), loja2.getNrPessoasEmFila());
      assertEquals("K-^)P9f5 KR(", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("K-^)P9f5 KR(", loja2.getPassword());
      assertEquals("K-^)P9f5 KR(", loja2.getCodigo());
      assertEquals(675.701646643, loja2.getLongitude(), 0.01);
      assertEquals("K-^)P9f5 KR(", loja2.getNome());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      loja2.setTempo_espera((-2319.1));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(675.701646643, loja2.getLatitude(), 0.01);
      assertEquals((-2020), loja2.getNrPessoasEmFila());
      assertEquals("K-^)P9f5 KR(", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("K-^)P9f5 KR(", loja2.getPassword());
      assertEquals("K-^)P9f5 KR(", loja2.getCodigo());
      assertEquals(675.701646643, loja2.getLongitude(), 0.01);
      assertEquals("K-^)P9f5 KR(", loja2.getNome());
      assertEquals((-2319.1), loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      double double0 = loja2.getTempo_espera();
      assertEquals((-2319.1), double0, 0.01);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(675.701646643, loja2.getLatitude(), 0.01);
      assertEquals((-2020), loja2.getNrPessoasEmFila());
      assertEquals("K-^)P9f5 KR(", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("K-^)P9f5 KR(", loja2.getPassword());
      assertEquals("K-^)P9f5 KR(", loja2.getCodigo());
      assertEquals(675.701646643, loja2.getLongitude(), 0.01);
      assertEquals("K-^)P9f5 KR(", loja2.getNome());
      assertEquals((-2319.1), loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      String string0 = loja0.getEncNotReady();
      assertEquals("0", string0);
      assertNotNull(string0);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      
      String string1 = loja2.getNome();
      assertEquals("K-^)P9f5 KR(", string1);
      assertNotNull(string1);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(675.701646643, loja2.getLatitude(), 0.01);
      assertEquals((-2020), loja2.getNrPessoasEmFila());
      assertEquals("K-^)P9f5 KR(", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("K-^)P9f5 KR(", loja2.getPassword());
      assertEquals("K-^)P9f5 KR(", loja2.getCodigo());
      assertEquals(675.701646643, loja2.getLongitude(), 0.01);
      assertEquals("K-^)P9f5 KR(", loja2.getNome());
      assertEquals((-2319.1), loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      loja1.setLatitude(0.0);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      double double0 = (-580.9814);
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      int int0 = (-1808);
      loja0.setNrPessoasEmFila((-1808));
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-1808), loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      
      Loja loja2 = new Loja((String) null, (String) null, "wllaxK8)wt", (String) null, (-1.0), (-1.0), (-580.9814), arrayList0, 0);
      assertNotNull(loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-1808), loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1.0), loja2.getLatitude(), 0.01);
      assertNull(loja2.getPassword());
      assertEquals((-1.0), loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getNome());
      assertEquals((-1.0), loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("wllaxK8)wt", loja2.getCodigo());
      assertNull(loja2.getEmail());
      assertEquals(0, loja2.getNrPessoasEmFila());
      
      double double1 = loja2.getLatitude();
      assertEquals((-1.0), double1, 0.01);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertNotEquals(double1, double0, 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-1808), loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1.0), loja2.getLatitude(), 0.01);
      assertNull(loja2.getPassword());
      assertEquals((-1.0), loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getNome());
      assertEquals((-1.0), loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("wllaxK8)wt", loja2.getCodigo());
      assertNull(loja2.getEmail());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      
      ArrayList<Encomenda> arrayList1 = loja2.getEncomendas_recebidas();
      assertNotNull(arrayList1);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals((-1808), loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals((-1.0), loja2.getLatitude(), 0.01);
      assertNull(loja2.getPassword());
      assertEquals((-1.0), loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getNome());
      assertEquals((-1.0), loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("wllaxK8)wt", loja2.getCodigo());
      assertNull(loja2.getEmail());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(arrayList1, arrayList0);
      
      try { 
        loja1.getEnc("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Loja loja1 = new Loja("", "Zn&|[1j*#:", "qh]p>Ms;6", "Zn&|[1j*#:", 0.0, 0.0, 0.0, arrayList0, 0);
      assertNotNull(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Zn&|[1j*#:", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("qh]p>Ms;6", loja1.getCodigo());
      assertEquals("Zn&|[1j*#:", loja1.getNome());
      assertEquals("Loja", loja1.getTypeUser());
      
      double double0 = loja1.getLongitude();
      assertEquals(0.0, double0, 0.01);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Zn&|[1j*#:", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("qh]p>Ms;6", loja1.getCodigo());
      assertEquals("Zn&|[1j*#:", loja1.getNome());
      assertEquals("Loja", loja1.getTypeUser());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      
      loja1.setPassword("Tpc9pW");
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("Tpc9pW", loja1.getPassword());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("Tpc9pW", loja1.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Loja loja2 = new Loja("zCI", "", "zCI", "zCI", 0.0, 0.0, (-3014.785869), arrayList0, 1);
      assertNotNull(loja2);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("Tpc9pW", loja1.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(1, loja2.getNrPessoasEmFila());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals("zCI", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("zCI", loja2.getEmail());
      assertEquals("zCI", loja2.getCodigo());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      
      int int0 = loja2.getNrPessoasEmFila();
      assertEquals(1, int0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("Tpc9pW", loja1.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(1, loja2.getNrPessoasEmFila());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals("zCI", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("zCI", loja2.getEmail());
      assertEquals("zCI", loja2.getCodigo());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      
      String string0 = loja1.getNome();
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("Tpc9pW", loja1.getPassword());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      loja0.setCodigo("");
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      int int0 = 0;
      Loja loja1 = new Loja("gNm=PyIC", "-N-lu.]_", "gNm=PyIC", "", (-1990.04667241), (-1990.04667241), (-1990.04667241), arrayList0, 0);
      assertNotNull(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("-N-lu.]_", loja1.getPassword());
      assertEquals("gNm=PyIC", loja1.getCodigo());
      assertEquals((-1990.04667241), loja1.getLongitude(), 0.01);
      assertEquals((-1990.04667241), loja1.getTempo_espera(), 0.01);
      assertEquals("gNm=PyIC", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals((-1990.04667241), loja1.getLatitude(), 0.01);
      
      loja1.setLatitude(0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("-N-lu.]_", loja1.getPassword());
      assertEquals("gNm=PyIC", loja1.getCodigo());
      assertEquals((-1990.04667241), loja1.getTempo_espera(), 0.01);
      assertEquals("gNm=PyIC", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      loja1.setNrPessoasEmFila((-457));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("-N-lu.]_", loja1.getPassword());
      assertEquals((-457), loja1.getNrPessoasEmFila());
      assertEquals("gNm=PyIC", loja1.getCodigo());
      assertEquals((-1990.04667241), loja1.getTempo_espera(), 0.01);
      assertEquals("gNm=PyIC", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      int int1 = loja1.getNrPessoasEmFila();
      assertEquals((-457), int1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(int1 == int0);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("-N-lu.]_", loja1.getPassword());
      assertEquals((-457), loja1.getNrPessoasEmFila());
      assertEquals("gNm=PyIC", loja1.getCodigo());
      assertEquals((-1990.04667241), loja1.getTempo_espera(), 0.01);
      assertEquals("gNm=PyIC", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      double double0 = loja1.getLatitude();
      assertEquals(0.0, double0, 0.01);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("-N-lu.]_", loja1.getPassword());
      assertEquals((-457), loja1.getNrPessoasEmFila());
      assertEquals("gNm=PyIC", loja1.getCodigo());
      assertEquals((-1990.04667241), loja1.getTempo_espera(), 0.01);
      assertEquals("gNm=PyIC", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      double double1 = loja0.getTempo_espera();
      assertEquals(0.0, double1, 0.01);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals(double1, double0, 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      
      loja1.setCodigo((String) null);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("-N-lu.]_", loja1.getPassword());
      assertEquals((-457), loja1.getNrPessoasEmFila());
      assertEquals((-1990.04667241), loja1.getTempo_espera(), 0.01);
      assertEquals("gNm=PyIC", loja1.getEmail());
      assertNull(loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja1);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja1);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja1);
      
      String string0 = loja0.getNome();
      assertEquals("", string0);
      assertNotNull(string0);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      
      try { 
        loja0.getEnc("-N-lu.]_");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      String string0 = "t";
      double double0 = (-1636.488872318326);
      ArrayList<Encomenda> arrayList0 = null;
      int int0 = (-458);
      Loja loja0 = null;
      try {
        loja0 = new Loja("t", "t", "t", "t", (-1636.488872318326), (-1636.488872318326), (-1636.488872318326), (ArrayList<Encomenda>) null, (-458));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      String string0 = loja0.getNome();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      int int0 = loja0.getNrPessoasEmFila();
      assertEquals(0, int0);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      loja0.setLongitude((-989.4558853));
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      loja0.setPassword("EJ>A>o<S");
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("EJ>A>o<S", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      loja0.removeEncomenda((Encomenda) null);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("EJ>A>o<S", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      int int1 = loja0.getNrPessoasEmFila();
      assertEquals(0, int1);
      assertTrue(int1 == int0);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("EJ>A>o<S", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      loja0.setTempo_espera(2614.164803103);
      assertEquals(2614.164803103, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      loja0.setNome("");
      assertEquals(2614.164803103, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      Loja loja1 = loja0.clone();
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(2614.164803103, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(2614.164803103, loja1.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      loja0.setEmail("3.J");
      assertFalse(loja0.equals((Object)loja1));
      assertEquals(2614.164803103, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("3.J", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotSame(loja0, loja1);
      
      loja1.setLongitude(2614.164803103);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(2614.164803103, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("3.J", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(2614.164803103, loja1.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Encomenda encomenda0 = null;
      loja1.setLongitude(0.0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(2614.164803103, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("3.J", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(2614.164803103, loja1.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(2614.164803103, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("3.J", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(2614.164803103, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      // Undeclared exception!
      try { 
        loja1.addEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      
      String string0 = "";
      // Undeclared exception!
      try { 
        loja0.addEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      String string0 = loja0.getCodigo();
      assertEquals("", string0);
      assertNotNull(string0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Loja loja1 = new Loja("/@?FN|<%d[V(q2w", "/@?FN|<%d[V(q2w", "/@?FN|<%d[V(q2w", "/@?FN|<%d[V(q2w", (-1687.1289713), (-1687.1289713), 0.0, arrayList0, (-1));
      assertNotNull(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("/@?FN|<%d[V(q2w", loja1.getPassword());
      assertEquals((-1687.1289713), loja1.getLatitude(), 0.01);
      assertEquals((-1687.1289713), loja1.getTempo_espera(), 0.01);
      assertEquals((-1687.1289713), loja1.getLongitude(), 0.01);
      assertEquals("/@?FN|<%d[V(q2w", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("/@?FN|<%d[V(q2w", loja1.getNome());
      assertEquals("/@?FN|<%d[V(q2w", loja1.getEmail());
      assertEquals((-1), loja1.getNrPessoasEmFila());
      
      String string0 = loja1.getCodigo();
      assertEquals("/@?FN|<%d[V(q2w", string0);
      assertNotNull(string0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("/@?FN|<%d[V(q2w", loja1.getPassword());
      assertEquals((-1687.1289713), loja1.getLatitude(), 0.01);
      assertEquals((-1687.1289713), loja1.getTempo_espera(), 0.01);
      assertEquals((-1687.1289713), loja1.getLongitude(), 0.01);
      assertEquals("/@?FN|<%d[V(q2w", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("/@?FN|<%d[V(q2w", loja1.getNome());
      assertEquals("/@?FN|<%d[V(q2w", loja1.getEmail());
      assertEquals((-1), loja1.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      Loja loja1 = new Loja("", "", "", "qoqklx3_-Y\" X", (-3207.4), (-2512.65239113905), (-615.2863581732987), arrayList0, 417);
      assertNotNull(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals((-2512.65239113905), loja1.getLatitude(), 0.01);
      assertEquals(417, loja1.getNrPessoasEmFila());
      assertEquals((-2512.65239113905), loja1.getLongitude(), 0.01);
      assertEquals((-3207.4), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("qoqklx3_-Y\" X", loja1.getNome());
      
      Loja loja2 = new Loja(loja1);
      assertNotNull(loja2);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals((-2512.65239113905), loja1.getLatitude(), 0.01);
      assertEquals(417, loja1.getNrPessoasEmFila());
      assertEquals((-2512.65239113905), loja1.getLongitude(), 0.01);
      assertEquals((-3207.4), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("qoqklx3_-Y\" X", loja1.getNome());
      assertEquals("", loja2.getPassword());
      assertEquals(417, loja2.getNrPessoasEmFila());
      assertEquals((-2512.65239113905), loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getEmail());
      assertEquals((-2512.65239113905), loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja2.getCodigo());
      assertEquals((-3207.4), loja2.getTempo_espera(), 0.01);
      assertEquals("qoqklx3_-Y\" X", loja2.getNome());
      
      double double0 = loja2.getLongitude();
      assertEquals((-2512.65239113905), double0, 0.01);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja1.equals((Object)loja2));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals((-2512.65239113905), loja1.getLatitude(), 0.01);
      assertEquals(417, loja1.getNrPessoasEmFila());
      assertEquals((-2512.65239113905), loja1.getLongitude(), 0.01);
      assertEquals((-3207.4), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("qoqklx3_-Y\" X", loja1.getNome());
      assertEquals("", loja2.getPassword());
      assertEquals(417, loja2.getNrPessoasEmFila());
      assertEquals((-2512.65239113905), loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getEmail());
      assertEquals((-2512.65239113905), loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja2.getCodigo());
      assertEquals((-3207.4), loja2.getTempo_espera(), 0.01);
      assertEquals("qoqklx3_-Y\" X", loja2.getNome());
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      String string0 = "";
      String string1 = "\n";
      double double0 = (-126.5347);
      double double1 = (-1002.937065);
      String string2 = null;
      Loja loja0 = null;
      try {
        loja0 = new Loja((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("UtilizadorSistema", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      
      double double0 = loja0.getTempo_espera();
      assertEquals(0.0, double0, 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      
      String string0 = loja0.getEncNotReady();
      assertEquals("0", string0);
      assertNotNull(string0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Loja loja2 = new Loja("Tempo de espera: ", "Tempo de espera: ", "Tempo de espera: ", "Tempo de espera: ", 532.5242152258929, 0.0, (-1432.63), arrayList0, 2028);
      assertNotNull(loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("Tempo de espera: ", loja2.getEmail());
      assertEquals(532.5242152258929, loja2.getTempo_espera(), 0.01);
      assertEquals("Tempo de espera: ", loja2.getCodigo());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("Tempo de espera: ", loja2.getNome());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(2028, loja2.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja2.getPassword());
      
      Loja loja3 = loja2.clone();
      assertNotNull(loja3);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja2));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("Tempo de espera: ", loja2.getEmail());
      assertEquals(532.5242152258929, loja2.getTempo_espera(), 0.01);
      assertEquals("Tempo de espera: ", loja2.getCodigo());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("Tempo de espera: ", loja2.getNome());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(2028, loja2.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja2.getPassword());
      assertEquals("Tempo de espera: ", loja3.getCodigo());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals("Tempo de espera: ", loja3.getNome());
      assertEquals("Tempo de espera: ", loja3.getEmail());
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals("Tempo de espera: ", loja3.getPassword());
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals(532.5242152258929, loja3.getTempo_espera(), 0.01);
      assertEquals(2028, loja3.getNrPessoasEmFila());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      
      loja1.setCodigo("0");
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja3));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("0", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      String string0 = loja0.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertNotNull(string0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      String string1 = loja0.getNome();
      assertEquals("", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      String string2 = loja0.getEncNotReady();
      assertEquals("0", string2);
      assertNotNull(string2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      try { 
        loja0.getEnc("_,u~k6NB");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      
      loja1.setLatitude(0.0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      loja0.setTempo_espera((-587.7311845737552));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals((-587.7311845737552), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      boolean boolean0 = loja0.equals("\n");
      assertFalse(boolean0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals((-587.7311845737552), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals((-587.7311845737552), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals((-587.7311845737552), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      
      loja0.setNome((String) null);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertNull(loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals((-587.7311845737552), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      
      double double0 = loja1.getLatitude();
      assertEquals(0.0, double0, 0.01);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertNull(loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals((-587.7311845737552), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals((-587.7311845737552), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Loja loja2 = new Loja();
      assertNotNull(loja2);
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja2.getNome());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getTypeUser());
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getEmail());
      
      boolean boolean1 = loja0.equals(loja2);
      assertFalse(boolean1);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(boolean1 == boolean0);
      assertEquals("", loja0.getCodigo());
      assertNull(loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals((-587.7311845737552), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getPassword());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getTypeUser());
      assertEquals("", loja2.getCodigo());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getEmail());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Loja loja2 = new Loja("Q.uj`V-nFYk,B u", "Q.uj`V-nFYk,B u", "Q.uj`V-nFYk,B u", "x3<G r`[Nm_19", 1755.559, 1755.559, 1755.559, arrayList0, 0);
      assertNotNull(loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1755.559, loja2.getLatitude(), 0.01);
      assertEquals("Q.uj`V-nFYk,B u", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(1755.559, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("Q.uj`V-nFYk,B u", loja2.getPassword());
      assertEquals("Q.uj`V-nFYk,B u", loja2.getEmail());
      assertEquals(1755.559, loja2.getTempo_espera(), 0.01);
      assertEquals("x3<G r`[Nm_19", loja2.getNome());
      
      boolean boolean0 = loja2.equals(loja0);
      assertFalse(boolean0);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1755.559, loja2.getLatitude(), 0.01);
      assertEquals("Q.uj`V-nFYk,B u", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(1755.559, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("Q.uj`V-nFYk,B u", loja2.getPassword());
      assertEquals("Q.uj`V-nFYk,B u", loja2.getEmail());
      assertEquals(1755.559, loja2.getTempo_espera(), 0.01);
      assertEquals("x3<G r`[Nm_19", loja2.getNome());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getTypeUser());
      
      loja1.setNome((String) null);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertNull(loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getTypeUser());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      
      try { 
        loja0.getEnc("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      Loja loja1 = new Loja(loja0);
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      int int0 = 0;
      String string0 = loja1.getEncNotReady();
      assertEquals("0", string0);
      assertNotNull(string0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Loja loja2 = new Loja("", "g", "g", "2~GLS<coOl>", 146.8735, 0.0, 0.0, arrayList0, 0);
      assertNotNull(loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(146.8735, loja2.getTempo_espera(), 0.01);
      assertEquals("g", loja2.getCodigo());
      assertEquals("g", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja2.getEmail());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("2~GLS<coOl>", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      
      loja2.setEmail("g");
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(146.8735, loja2.getTempo_espera(), 0.01);
      assertEquals("g", loja2.getEmail());
      assertEquals("g", loja2.getCodigo());
      assertEquals("g", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("2~GLS<coOl>", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      
      loja1.setEncomendas_recebidas(arrayList0);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      
      ArrayList<Encomenda> arrayList1 = loja1.getEncomendas_recebidas();
      assertNotNull(arrayList1);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList1, arrayList0);
      
      loja1.setNrPessoasEmFila((-1160));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals((-1160), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      
      String string1 = loja2.getNome();
      assertEquals("2~GLS<coOl>", string1);
      assertNotNull(string1);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals((-1160), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(146.8735, loja2.getTempo_espera(), 0.01);
      assertEquals("g", loja2.getEmail());
      assertEquals("g", loja2.getCodigo());
      assertEquals("g", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("2~GLS<coOl>", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      
      double double0 = loja2.getTempo_espera();
      assertEquals(146.8735, double0, 0.01);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals((-1160), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(146.8735, loja2.getTempo_espera(), 0.01);
      assertEquals("g", loja2.getEmail());
      assertEquals("g", loja2.getCodigo());
      assertEquals("g", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("2~GLS<coOl>", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      
      loja1.setPassword((String) null);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertNull(loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals((-1160), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      
      loja1.setCodigo("");
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertNull(loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals((-1160), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      
      int int1 = loja0.getNrPessoasEmFila();
      assertEquals(0, int1);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(int1 == int0);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      
      loja2.setLongitude(0);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertNull(loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals((-1160), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(146.8735, loja2.getTempo_espera(), 0.01);
      assertEquals("g", loja2.getEmail());
      assertEquals("g", loja2.getCodigo());
      assertEquals("g", loja2.getPassword());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("2~GLS<coOl>", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      
      // Undeclared exception!
      try { 
        loja1.updateEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      
      Loja loja1 = loja0.clone();
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      loja1.setTempo_espera(3197.699884);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(3197.699884, loja1.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      try { 
        loja0.getEnc("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      
      String string0 = "k]";
      Encomenda encomenda0 = null;
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      // Undeclared exception!
      try { 
        loja0.updateEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      Loja loja1 = loja0.clone();
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      String string0 = loja0.getEncNotReady();
      assertEquals("0", string0);
      assertNotNull(string0);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotSame(loja0, loja1);
      
      try { 
        loja0.getEnc("0");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      
      loja0.setLongitude((-197.6681070698));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      loja0.setNrPessoasEmFila(4439);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(4439, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      try { 
        loja0.getEnc("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      String string0 = "";
      loja0.setNome("");
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      loja0.setTempo_espera(1985.7043510756012);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(1985.7043510756012, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      int int0 = loja0.getNrPessoasEmFila();
      assertEquals(0, int0);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(1985.7043510756012, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      String string1 = loja0.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 1985.7043510756012\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string1);
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(1985.7043510756012, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      loja0.setLatitude((-4443.89));
      assertEquals("", loja0.getPassword());
      assertEquals((-4443.89), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(1985.7043510756012, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals((-4443.89), loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      boolean boolean0 = loja0.equals("u|x&`)=c7~cXj");
      assertFalse(boolean0);
      assertEquals("", loja0.getPassword());
      assertEquals((-4443.89), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(1985.7043510756012, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals((-4443.89), loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertEquals("", loja0.getPassword());
      assertEquals((-4443.89), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(1985.7043510756012, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals((-4443.89), loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      Encomenda encomenda0 = null;
      loja0.removeEncomenda((Encomenda) null);
      assertEquals("", loja0.getPassword());
      assertEquals((-4443.89), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(1985.7043510756012, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals((-4443.89), loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      // Undeclared exception!
      try { 
        loja0.updateEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      try { 
        loja0.getEnc("k9nzw-M(");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      Loja loja1 = loja0.clone();
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      Loja loja2 = new Loja(loja0);
      assertNotNull(loja2);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getEmail());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      
      ArrayList<Encomenda> arrayList0 = loja2.getEncomendas_recebidas();
      assertNotNull(arrayList0);
      assertTrue(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getEmail());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      String string0 = "";
      loja0.setEmail("");
      assertTrue(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      
      String string1 = loja2.getEncNotReady();
      assertEquals("0", string1);
      assertNotNull(string1);
      assertTrue(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getEmail());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      ArrayList<Encomenda> arrayList1 = loja2.getEncomendas_recebidas();
      assertNotNull(arrayList1);
      assertTrue(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("", loja2.getEmail());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(arrayList1, arrayList0);
      
      loja2.setEmail("0");
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("0", loja2.getEmail());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      
      double double0 = 406.598;
      loja1.setNome(" ");
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(" ", loja1.getNome());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      
      Loja loja3 = loja2.clone();
      assertNotNull(loja3);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("0", loja2.getEmail());
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getTypeUser());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getPassword());
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals("", loja3.getNome());
      assertEquals("", loja3.getCodigo());
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals("0", loja3.getEmail());
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja2);
      
      try { 
        loja1.getEnc(" ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Loja loja0 = new Loja();
      assertNotNull(loja0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      loja0.setLongitude(0.0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      Loja loja1 = new Loja();
      assertNotNull(loja1);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      
      boolean boolean0 = loja0.equals(loja1);
      assertTrue(boolean0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      
      String string0 = loja0.getEncNotReady();
      assertEquals("0", string0);
      assertNotNull(string0);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotSame(loja0, loja1);
      
      loja0.setNrPessoasEmFila(15);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(15, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotSame(loja0, loja1);
      
      double double0 = loja0.getLatitude();
      assertEquals(0.0, double0, 0.01);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(15, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotSame(loja0, loja1);
      
      loja1.setLatitude(0.0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertNotSame(loja1, loja0);
      
      double double1 = loja1.getLatitude();
      assertEquals(0.0, double1, 0.01);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(double1, double0, 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertNotSame(loja1, loja0);
      
      String string1 = "Peso: ";
      try { 
        loja1.getEnc("Peso: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = new Loja(loja0);
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Loja loja2 = new Loja("", "Comprador: ", "UtilizadorSistema", "", (-223.09459144355), (-223.09459144355), 0.0, arrayList0, 4655);
      loja0.equals(loja2);
      loja1.getEncNotReady();
      try { 
        loja0.getEnc("0");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.equals((Object) null);
      loja0.setCodigo((String) null);
      Loja loja1 = new Loja();
      try { 
        loja1.getEnc("H=7 ,7]- cx*'YnM=");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Loja loja1 = new Loja("", "", "", "", 0.0, 0.0, 0.0, arrayList0, 10);
      Loja loja2 = new Loja(loja1);
      loja1.setCodigo("");
      loja2.setEncomendas_recebidas(arrayList0);
      try { 
        loja0.getEnc("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = new Loja(loja0);
      loja0.equals(loja1);
      loja0.setLongitude(1426.110164);
      loja1.setLongitude(0.0);
      loja1.getEncNotReady();
      loja1.setTypeUser("0");
      loja1.toString();
      loja0.setEmail("0");
      try { 
        loja1.getEnc("vc{#e");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }
}
