/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 18:05:08 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.List;
import java.util.Map;
import java.util.Set;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BDTransportes_ESTest extends BDTransportes_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.setTransportes((Map<String, EmpresaTransportes>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.setCodigos((Set<String>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.existe((EmpresaTransportes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Set<String> set0 = bDTransportes0.getCodigos();
      BDTransportes bDTransportes1 = null;
      try {
        bDTransportes1 = new BDTransportes((Map<String, EmpresaTransportes>) null, set0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BDTransportes bDTransportes0 = null;
      try {
        bDTransportes0 = new BDTransportes((BDTransportes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Set<String> set0 = bDTransportes0.getCodigos();
      bDTransportes0.setCodigos(set0);
      assertTrue(set0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Map<String, EmpresaTransportes> map0 = bDTransportes0.getTransportes();
      bDTransportes0.setTransportes(map0);
      assertEquals(0, map0.size());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      try { 
        bDTransportes0.encontraEnc("o,72gtGf!t");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Loja loja0 = mock(Loja.class, new ViolatedAssumptionAnswer());
      Utilizador utilizador0 = mock(Utilizador.class, new ViolatedAssumptionAnswer());
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveisMedParse(loja0, utilizador0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Loja loja0 = mock(Loja.class, new ViolatedAssumptionAnswer());
      Utilizador utilizador0 = mock(Utilizador.class, new ViolatedAssumptionAnswer());
      List<EmpresaTransportes> list0 = bDTransportes0.transDisponiveis(loja0, utilizador0);
      assertTrue(list0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Utilizador utilizador0 = mock(Utilizador.class, new ViolatedAssumptionAnswer());
      Loja loja0 = mock(Loja.class, new ViolatedAssumptionAnswer());
      String string0 = bDTransportes0.printEmpresasMed(utilizador0, loja0, 0.2);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Utilizador utilizador0 = mock(Utilizador.class, new ViolatedAssumptionAnswer());
      Loja loja0 = mock(Loja.class, new ViolatedAssumptionAnswer());
      String string0 = bDTransportes0.printEmpresas(utilizador0, loja0, 0.0);
      assertEquals("0", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      try { 
        bDTransportes0.getEmail("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      String string0 = bDTransportes0.printTransportes();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      EmpresaTransportes empresaTransportes0 = bDTransportes0.tryLogin("]M*t", "");
      assertNull(empresaTransportes0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      boolean boolean0 = bDTransportes0.existeCodigo("vJ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      boolean boolean0 = bDTransportes0.existeEmail("vJ");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      boolean boolean0 = bDTransportes0.equals(")!*");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      boolean boolean0 = bDTransportes0.equals(bDTransportes0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      boolean boolean0 = bDTransportes0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.updateTransporte((EmpresaTransportes) null, 0.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      Map<String, EmpresaTransportes> map0 = bDTransportes0.getTransportes();
      Set<String> set0 = bDTransportes0.getCodigos();
      BDTransportes bDTransportes1 = new BDTransportes(map0, set0);
      assertTrue(bDTransportes1.equals((Object)bDTransportes0));
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.add((EmpresaTransportes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      BDTransportes bDTransportes1 = bDTransportes0.clone();
      assertNotSame(bDTransportes0, bDTransportes1);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      BDTransportes bDTransportes1 = new BDTransportes(bDTransportes0);
      boolean boolean0 = bDTransportes1.equals(bDTransportes0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      // Undeclared exception!
      try { 
        bDTransportes0.updateTransportes2((EmpresaTransportes) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("BDTransportes", e);
      }
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BDTransportes bDTransportes0 = new BDTransportes();
      String string0 = bDTransportes0.toString();
      assertEquals("Total de Empresas de transporte: \n{}", string0);
  }
}
