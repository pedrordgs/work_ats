/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 18:09:42 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UtilizadorSistema_ESTest extends UtilizadorSistema_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      voluntario0.setNome("");
      assertEquals(0.0, voluntario0.getLongitude(), 0.01);
      assertEquals(0.0, voluntario0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      Utilizador utilizador0 = new Utilizador("qo?WSOL", "", "j%D<|93OiDZnh\"Q", "j%D<|93OiDZnh\"Q", 0.0, 0.0, arrayList0);
      utilizador0.setLongitude(0.0);
      assertEquals("", utilizador0.getPassword());
      assertEquals("Utilizador", utilizador0.getTypeUser());
      assertEquals("j%D<|93OiDZnh\"Q", utilizador0.getNome());
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
      assertEquals("qo?WSOL", utilizador0.getEmail());
      assertEquals("j%D<|93OiDZnh\"Q", utilizador0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      Loja loja0 = new Loja("vGbTw", " <--- O utilizador \u00E9: ", "", "`>MyGC!#O =%", 0.0, 0.0, 0.0, arrayList0, 0);
      assertEquals("", loja0.getCodigo());
      
      loja0.setCodigo("");
      assertEquals("`>MyGC!#O =%", loja0.getNome());
      assertEquals(" <--- O utilizador \u00E9: ", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("vGbTw", loja0.getEmail());
      assertEquals("Loja", loja0.getTypeUser());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      String string0 = empresaTransportes0.toString();
      assertEquals(" <--- O utilizador \u00E9: \n\n\nC\u00F3digo de empresa: \nNome: \nNif: 0\nCusto por km: 0.0\nLocal:  \nLatitude: 0.0\nLongitude: 0.0\nRaio de a\u00E7\u00E3o: 0.0\nRegistos de encomendas: []N\u00FAmero m\u00EDnimo de encomendas: Apta para transportes m\u00E9dicos: false\n", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      double double0 = utilizador0.getLongitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      double double0 = empresaTransportes0.getLatitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Loja loja0 = new Loja();
      Voluntario voluntario0 = new Voluntario();
      loja0.equals(voluntario0);
      assertEquals(0.0, voluntario0.getLongitude(), 0.01);
      assertEquals(0.0, voluntario0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes("", (String) null, "", (String) null, 0, (-2114.0), "SS4[EI8=PfiG", 0, 0.0, 471.0, arrayList0, true, (-1244.63), 0, true, 0, 0);
      UtilizadorSistema utilizadorSistema0 = empresaTransportes0.clone();
      assertEquals("", utilizadorSistema0.getCodigo());
      assertEquals(0.0, utilizadorSistema0.getLatitude(), 0.01);
      assertEquals("Transportadora", utilizadorSistema0.getTypeUser());
      assertEquals("", utilizadorSistema0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes("", "", "+czcp<b", "Cs2H</M^|Dt+V:% RI", 0, 1884.24794616, "+czcp<b", (-1.0), (-1.0), (-637.81960852834), arrayList0, false, 1812.9766192967, 0, false, 0, 0);
      UtilizadorSistema utilizadorSistema0 = empresaTransportes0.clone();
      assertEquals((-1.0), empresaTransportes0.getLatitude(), 0.01);
      assertEquals((-1.0), empresaTransportes0.getLongitude(), 0.01);
      assertEquals("+czcp<b", utilizadorSistema0.getCodigo());
      assertEquals("", utilizadorSistema0.getPassword());
      assertEquals("Cs2H</M^|Dt+V:% RI", utilizadorSistema0.getNome());
      assertEquals((-1.0), utilizadorSistema0.getLongitude(), 0.01);
      assertEquals("Transportadora", utilizadorSistema0.getTypeUser());
      assertEquals("", utilizadorSistema0.getEmail());
      assertEquals((-1.0), utilizadorSistema0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      utilizador0.getEmail();
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes("", "", "+czcp<b", "Cs2H</M^|Dt+V:% RI", 0, 1884.24794616, "+czcp<b", (-1.0), (-1.0), (-637.81960852834), arrayList0, false, 1812.9766192967, 0, false, 0, 0);
      String string0 = empresaTransportes0.getPassword();
      assertEquals((-1.0), empresaTransportes0.getLatitude(), 0.01);
      assertEquals((-1.0), empresaTransportes0.getLongitude(), 0.01);
      assertEquals("+czcp<b", empresaTransportes0.getCodigo());
      assertEquals("Transportadora", empresaTransportes0.getTypeUser());
      assertEquals("Cs2H</M^|Dt+V:% RI", empresaTransportes0.getNome());
      assertEquals("", string0);
      assertEquals("", empresaTransportes0.getEmail());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      LinkedList<Encomenda> linkedList0 = new LinkedList<Encomenda>();
      Voluntario voluntario0 = new Voluntario("#`8g`g:.j:m;^", "#`8g`g:.j:m;^", "#`8g`g:.j:m;^", "#`8g`g:.j:m;^", false, 1.0, 1.0, localDate0, 0.0, linkedList0, 0.0, 1, false, 60, 0);
      String string0 = voluntario0.getTypeUser();
      assertEquals("#`8g`g:.j:m;^", voluntario0.getEmail());
      assertEquals("#`8g`g:.j:m;^", voluntario0.getNome());
      assertEquals("#`8g`g:.j:m;^", voluntario0.getPassword());
      assertEquals("#`8g`g:.j:m;^", voluntario0.getCodigo());
      assertEquals("Voluntario", string0);
      assertEquals(1.0, voluntario0.getLatitude(), 0.01);
      assertEquals(1.0, voluntario0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      LocalDate localDate0 = MockLocalDate.ofEpochDay(0L);
      boolean boolean0 = utilizador0.equals(localDate0);
      assertFalse(boolean0);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      utilizador0.setPassword("");
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      utilizador0.setTypeUser(" e ");
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.setLatitude(1661.6);
      assertEquals(1661.6, empresaTransportes0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.setEmail("]");
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
  }
}
