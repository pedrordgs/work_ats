/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:42:17 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Loja_ESTest extends Loja_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      Loja loja1 = loja0.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      assertNotNull(loja1);
      
      loja0.setTempo_espera((-531.2163876058784));
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-531.2163876058784), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      
      loja1.setNome("");
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-531.2163876058784), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
      
      String string0 = loja0.getCodigo();
      assertNotSame(loja0, loja1);
      assertEquals("", string0);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-531.2163876058784), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(string0);
      
      boolean boolean0 = loja0.equals(loja1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(boolean0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals((-531.2163876058784), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getEmail());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertNotNull(loja0);
      
      boolean boolean0 = loja0.equals(loja0);
      assertTrue(boolean0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      
      loja0.setNrPessoasEmFila((-2289));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-2289), loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      
      String string0 = loja0.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-2289), loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertNotNull(string0);
      
      loja0.setNrPessoasEmFila(236);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(236, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(236, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      String string0 = "/MuJEqFHtK?";
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      String string1 = loja0.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(string1);
      
      loja0.setNrPessoasEmFila(795);
      assertEquals(795, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      int int0 = loja0.getNrPessoasEmFila();
      assertEquals(795, int0);
      assertEquals(795, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      Loja loja1 = loja0.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(795, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(795, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getNome());
      assertNotNull(loja1);
      
      try { 
        loja0.getEnc("))>m");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      ArrayList<Encomenda> arrayList1 = loja0.getEncomendas_recebidas();
      assertNotSame(arrayList1, arrayList0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      loja0.setNome("t!1aFp{PQ!7Nc8N");
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      
      loja0.setCodigo((String) null);
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      
      loja0.setLatitude((-4741.7222038724));
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals((-4741.7222038724), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals((-4741.7222038724), loja0.getLatitude(), 0.01);
      
      Loja loja1 = loja0.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals((-4741.7222038724), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals((-4741.7222038724), loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals((-4741.7222038724), loja1.getLongitude(), 0.01);
      assertNull(loja1.getCodigo());
      assertEquals("t!1aFp{PQ!7Nc8N", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals((-4741.7222038724), loja1.getLatitude(), 0.01);
      assertNotNull(loja1);
      
      loja0.setLongitude(39.555);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals((-4741.7222038724), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals((-4741.7222038724), loja0.getLatitude(), 0.01);
      
      loja0.setEmail((String) null);
      assertNotSame(loja0, loja1);
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals((-4741.7222038724), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getEmail());
      assertEquals((-4741.7222038724), loja0.getLatitude(), 0.01);
      
      double double0 = loja0.getLongitude();
      assertNotSame(loja0, loja1);
      assertEquals((-4741.7222038724), double0, 0.01);
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals((-4741.7222038724), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getEmail());
      assertEquals((-4741.7222038724), loja0.getLatitude(), 0.01);
      
      ArrayList<Encomenda> arrayList2 = loja0.getEncomendas_recebidas();
      assertNotSame(loja0, loja1);
      assertNotSame(arrayList2, arrayList1);
      assertNotSame(arrayList2, arrayList0);
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals((-4741.7222038724), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getEmail());
      assertEquals((-4741.7222038724), loja0.getLatitude(), 0.01);
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      
      Loja loja2 = loja0.clone();
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals((-4741.7222038724), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getEmail());
      assertEquals((-4741.7222038724), loja0.getLatitude(), 0.01);
      assertEquals((-4741.7222038724), loja2.getLongitude(), 0.01);
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getTypeUser());
      assertNull(loja2.getCodigo());
      assertEquals("", loja2.getPassword());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("t!1aFp{PQ!7Nc8N", loja2.getNome());
      assertEquals((-4741.7222038724), loja2.getLatitude(), 0.01);
      assertNull(loja2.getEmail());
      assertNotNull(loja2);
      
      Loja loja3 = loja1.clone();
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja2));
      assertTrue(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals("t!1aFp{PQ!7Nc8N", loja0.getNome());
      assertEquals((-4741.7222038724), loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertNull(loja0.getEmail());
      assertEquals((-4741.7222038724), loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals((-4741.7222038724), loja1.getLongitude(), 0.01);
      assertNull(loja1.getCodigo());
      assertEquals("t!1aFp{PQ!7Nc8N", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals((-4741.7222038724), loja1.getLatitude(), 0.01);
      assertEquals((-4741.7222038724), loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getTypeUser());
      assertNull(loja3.getCodigo());
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals("", loja3.getPassword());
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals("", loja3.getEmail());
      assertEquals((-4741.7222038724), loja3.getLatitude(), 0.01);
      assertEquals("t!1aFp{PQ!7Nc8N", loja3.getNome());
      assertNotNull(loja3);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja("", "", "", (String) null, (-682.653059), (-1.0), (-682.653059), arrayList0, (-1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertNull(loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals((-682.653059), loja1.getTempo_espera(), 0.01);
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertNotNull(loja1);
      
      Loja loja2 = new Loja(loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertNull(loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals((-682.653059), loja1.getTempo_espera(), 0.01);
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja2.getEmail());
      assertEquals((-1), loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja2.getPassword());
      assertEquals((-682.653059), loja2.getTempo_espera(), 0.01);
      assertEquals((-1.0), loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals((-1.0), loja2.getLongitude(), 0.01);
      assertNull(loja2.getNome());
      assertNotNull(loja2);
      
      String string0 = loja2.getNome();
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1), loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals((-1.0), loja1.getLongitude(), 0.01);
      assertNull(loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals((-682.653059), loja1.getTempo_espera(), 0.01);
      assertEquals((-1.0), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals("", loja2.getEmail());
      assertEquals((-1), loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja2.getPassword());
      assertEquals((-682.653059), loja2.getTempo_espera(), 0.01);
      assertEquals((-1.0), loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertEquals((-1.0), loja2.getLongitude(), 0.01);
      assertNull(loja2.getNome());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      double double0 = 318.72984538163;
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      int int0 = 2835;
      Loja loja1 = new Loja("", "", (String) null, "Latitude: ", 318.72984538163, 318.72984538163, 318.72984538163, arrayList0, 2835);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Latitude: ", loja1.getNome());
      assertEquals(318.72984538163, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(318.72984538163, loja1.getLongitude(), 0.01);
      assertEquals(318.72984538163, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(2835, loja1.getNrPessoasEmFila());
      assertNull(loja1.getCodigo());
      assertNotNull(loja1);
      
      loja1.setTempo_espera(318.72984538163);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Latitude: ", loja1.getNome());
      assertEquals(318.72984538163, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(318.72984538163, loja1.getLongitude(), 0.01);
      assertEquals(318.72984538163, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(2835, loja1.getNrPessoasEmFila());
      assertNull(loja1.getCodigo());
      
      Loja loja2 = new Loja(loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Latitude: ", loja1.getNome());
      assertEquals(318.72984538163, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(318.72984538163, loja1.getLongitude(), 0.01);
      assertEquals(318.72984538163, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(2835, loja1.getNrPessoasEmFila());
      assertNull(loja1.getCodigo());
      assertEquals(2835, loja2.getNrPessoasEmFila());
      assertEquals(318.72984538163, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals(318.72984538163, loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getCodigo());
      assertEquals("", loja2.getEmail());
      assertEquals("Latitude: ", loja2.getNome());
      assertEquals(318.72984538163, loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertNotNull(loja2);
      
      loja2.setTempo_espera(318.72984538163);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Latitude: ", loja1.getNome());
      assertEquals(318.72984538163, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(318.72984538163, loja1.getLongitude(), 0.01);
      assertEquals(318.72984538163, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(2835, loja1.getNrPessoasEmFila());
      assertNull(loja1.getCodigo());
      assertEquals(2835, loja2.getNrPessoasEmFila());
      assertEquals(318.72984538163, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals(318.72984538163, loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getCodigo());
      assertEquals("", loja2.getEmail());
      assertEquals("Latitude: ", loja2.getNome());
      assertEquals(318.72984538163, loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      
      Loja loja3 = loja2.clone();
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja3);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Latitude: ", loja1.getNome());
      assertEquals(318.72984538163, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(318.72984538163, loja1.getLongitude(), 0.01);
      assertEquals(318.72984538163, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(2835, loja1.getNrPessoasEmFila());
      assertNull(loja1.getCodigo());
      assertEquals(2835, loja2.getNrPessoasEmFila());
      assertEquals(318.72984538163, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals(318.72984538163, loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getCodigo());
      assertEquals("", loja2.getEmail());
      assertEquals("Latitude: ", loja2.getNome());
      assertEquals(318.72984538163, loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja3.getPassword());
      assertEquals("Latitude: ", loja3.getNome());
      assertNull(loja3.getCodigo());
      assertEquals(318.72984538163, loja3.getLongitude(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals("", loja3.getEmail());
      assertEquals(2835, loja3.getNrPessoasEmFila());
      assertEquals(318.72984538163, loja3.getLatitude(), 0.01);
      assertEquals(318.72984538163, loja3.getTempo_espera(), 0.01);
      assertNotNull(loja3);
      
      loja3.setEmail("");
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja3);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja1);
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja3));
      assertTrue(loja2.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Latitude: ", loja1.getNome());
      assertEquals(318.72984538163, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(318.72984538163, loja1.getLongitude(), 0.01);
      assertEquals(318.72984538163, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(2835, loja1.getNrPessoasEmFila());
      assertNull(loja1.getCodigo());
      assertEquals(2835, loja2.getNrPessoasEmFila());
      assertEquals(318.72984538163, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals(318.72984538163, loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getCodigo());
      assertEquals("", loja2.getEmail());
      assertEquals("Latitude: ", loja2.getNome());
      assertEquals(318.72984538163, loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja3.getPassword());
      assertEquals("Latitude: ", loja3.getNome());
      assertNull(loja3.getCodigo());
      assertEquals(318.72984538163, loja3.getLongitude(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals("", loja3.getEmail());
      assertEquals(2835, loja3.getNrPessoasEmFila());
      assertEquals(318.72984538163, loja3.getLatitude(), 0.01);
      assertEquals(318.72984538163, loja3.getTempo_espera(), 0.01);
      
      String string0 = loja3.getCodigo();
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja3);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja1);
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja3));
      assertTrue(loja2.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Latitude: ", loja1.getNome());
      assertEquals(318.72984538163, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(318.72984538163, loja1.getLongitude(), 0.01);
      assertEquals(318.72984538163, loja1.getTempo_espera(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(2835, loja1.getNrPessoasEmFila());
      assertNull(loja1.getCodigo());
      assertEquals(2835, loja2.getNrPessoasEmFila());
      assertEquals(318.72984538163, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals(318.72984538163, loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getCodigo());
      assertEquals("", loja2.getEmail());
      assertEquals("Latitude: ", loja2.getNome());
      assertEquals(318.72984538163, loja2.getLongitude(), 0.01);
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja3.getPassword());
      assertEquals("Latitude: ", loja3.getNome());
      assertNull(loja3.getCodigo());
      assertEquals(318.72984538163, loja3.getLongitude(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals("", loja3.getEmail());
      assertEquals(2835, loja3.getNrPessoasEmFila());
      assertEquals(318.72984538163, loja3.getLatitude(), 0.01);
      assertEquals(318.72984538163, loja3.getTempo_espera(), 0.01);
      assertNull(string0);
      
      try { 
        loja0.getEnc("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotNull(loja0);
      
      boolean boolean0 = loja0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      String string0 = null;
      String string1 = loja0.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string1);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotNull(string1);
      
      try { 
        loja0.getEnc((String) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      Encomenda encomenda0 = null;
      loja0.removeEncomenda((Encomenda) null);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      
      loja0.setTypeUser("Longitude: ");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("Longitude: ", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      
      try { 
        loja0.getEnc("SyE]cyqL2:)u^+1ZY~_");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja(", kj?l<M", "Latitude: ", "Latitude: ", (String) null, 119.0, 1047.9, (-1.0), arrayList0, (-342));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Latitude: ", loja1.getPassword());
      assertEquals(1047.9, loja1.getLongitude(), 0.01);
      assertEquals(119.0, loja1.getTempo_espera(), 0.01);
      assertEquals(1047.9, loja1.getLatitude(), 0.01);
      assertNull(loja1.getNome());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("Latitude: ", loja1.getCodigo());
      assertEquals(", kj?l<M", loja1.getEmail());
      assertEquals((-342), loja1.getNrPessoasEmFila());
      assertNotNull(loja1);
      
      Loja loja2 = loja1.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("Latitude: ", loja1.getPassword());
      assertEquals(1047.9, loja1.getLongitude(), 0.01);
      assertEquals(119.0, loja1.getTempo_espera(), 0.01);
      assertEquals(1047.9, loja1.getLatitude(), 0.01);
      assertNull(loja1.getNome());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("Latitude: ", loja1.getCodigo());
      assertEquals(", kj?l<M", loja1.getEmail());
      assertEquals((-342), loja1.getNrPessoasEmFila());
      assertEquals("Latitude: ", loja2.getPassword());
      assertEquals(119.0, loja2.getTempo_espera(), 0.01);
      assertEquals(", kj?l<M", loja2.getEmail());
      assertNull(loja2.getNome());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("Latitude: ", loja2.getCodigo());
      assertEquals((-342), loja2.getNrPessoasEmFila());
      assertEquals(1047.9, loja2.getLongitude(), 0.01);
      assertEquals(1047.9, loja2.getLatitude(), 0.01);
      assertNotNull(loja2);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      loja0.setCodigo((String) null);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      loja0.setLongitude(0.0);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      String string0 = loja0.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: null\nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotNull(string0);
      
      loja0.setNrPessoasEmFila((-940));
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals((-940), loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      
      double double0 = loja0.getLongitude();
      assertEquals(0.0, double0, 0.01);
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals((-940), loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      
      String string1 = loja0.getEncNotReady();
      assertEquals("0", string1);
      assertFalse(string1.equals((Object)string0));
      assertNull(loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals((-940), loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertNotNull(string1);
      
      // Undeclared exception!
      try { 
        loja0.setEncomendas_recebidas((ArrayList<Encomenda>) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja("", "", "Peso: ", "", (-1.0), 1125.54126115885, (-1.0), arrayList0, 599);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(599, loja1.getNrPessoasEmFila());
      assertEquals(1125.54126115885, loja1.getLongitude(), 0.01);
      assertEquals(1125.54126115885, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals("Peso: ", loja1.getCodigo());
      assertEquals((-1.0), loja1.getTempo_espera(), 0.01);
      assertNotNull(loja1);
      
      double double0 = loja1.getLongitude();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals(1125.54126115885, double0, 0.01);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(599, loja1.getNrPessoasEmFila());
      assertEquals(1125.54126115885, loja1.getLongitude(), 0.01);
      assertEquals(1125.54126115885, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals("Peso: ", loja1.getCodigo());
      assertEquals((-1.0), loja1.getTempo_espera(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertNotNull(loja1);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja2 = new Loja("9B lTS)", "WMS|[d;g$A", "HZ7&|V", "WMS|[d;g$A", 3245.7683984802, (-719.8), 2800.345555526619, arrayList0, 0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("WMS|[d;g$A", loja2.getPassword());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals((-719.8), loja2.getLongitude(), 0.01);
      assertEquals("9B lTS)", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-719.8), loja2.getLatitude(), 0.01);
      assertEquals("WMS|[d;g$A", loja2.getNome());
      assertEquals("HZ7&|V", loja2.getCodigo());
      assertEquals(3245.7683984802, loja2.getTempo_espera(), 0.01);
      assertNotNull(loja2);
      
      Loja loja3 = loja2.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja1));
      assertTrue(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("WMS|[d;g$A", loja2.getPassword());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals((-719.8), loja2.getLongitude(), 0.01);
      assertEquals("9B lTS)", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-719.8), loja2.getLatitude(), 0.01);
      assertEquals("WMS|[d;g$A", loja2.getNome());
      assertEquals("HZ7&|V", loja2.getCodigo());
      assertEquals(3245.7683984802, loja2.getTempo_espera(), 0.01);
      assertEquals((-719.8), loja3.getLatitude(), 0.01);
      assertEquals(3245.7683984802, loja3.getTempo_espera(), 0.01);
      assertEquals("WMS|[d;g$A", loja3.getNome());
      assertEquals(0, loja3.getNrPessoasEmFila());
      assertEquals("WMS|[d;g$A", loja3.getPassword());
      assertEquals((-719.8), loja3.getLongitude(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals("9B lTS)", loja3.getEmail());
      assertEquals("HZ7&|V", loja3.getCodigo());
      assertNotNull(loja3);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja("", "tdm'", "M", "[@dlo^Hk0e~Ot", 0.0, (-3405.332), (-3405.332), arrayList0, (-296));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("[@dlo^Hk0e~Ot", loja1.getNome());
      assertEquals("tdm'", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals((-3405.332), loja1.getLatitude(), 0.01);
      assertEquals((-3405.332), loja1.getLongitude(), 0.01);
      assertEquals("M", loja1.getCodigo());
      assertEquals((-296), loja1.getNrPessoasEmFila());
      assertNotNull(loja1);
      
      int int0 = loja1.getNrPessoasEmFila();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals((-296), int0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("[@dlo^Hk0e~Ot", loja1.getNome());
      assertEquals("tdm'", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals((-3405.332), loja1.getLatitude(), 0.01);
      assertEquals((-3405.332), loja1.getLongitude(), 0.01);
      assertEquals("M", loja1.getCodigo());
      assertEquals((-296), loja1.getNrPessoasEmFila());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      String string0 = "";
      loja0.setEmail("");
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      boolean boolean0 = loja0.equals("");
      assertFalse(boolean0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      double double0 = 0.0;
      loja0.setLongitude(0.0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      loja0.setCodigo("");
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      ArrayList<Encomenda> arrayList1 = loja0.getEncomendas_recebidas();
      assertNotSame(arrayList1, arrayList0);
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      ArrayList<Encomenda> arrayList2 = loja0.getEncomendas_recebidas();
      assertNotSame(arrayList2, arrayList0);
      assertNotSame(arrayList2, arrayList1);
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList2.isEmpty());
      assertEquals(0, arrayList2.size());
      assertNotNull(arrayList2);
      
      Encomenda encomenda0 = null;
      // Undeclared exception!
      try { 
        loja0.addEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertNotNull(loja1);
      
      loja1.setNrPessoasEmFila(0);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      
      loja0.setNome("");
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      String string0 = loja1.toString();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertNotNull(string0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      loja0.setLongitude(1184.02);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      
      loja1.setNrPessoasEmFila(0);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      
      String string1 = loja0.getCodigo();
      assertNotSame(loja0, loja1);
      assertEquals("", string1);
      assertTrue(loja0.equals((Object)loja1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotNull(string1);
      
      // Undeclared exception!
      try { 
        loja0.addEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertNotNull(loja1);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      int int0 = 1974;
      Loja loja2 = new Loja(" <--- O utilizador \u00E9: ", "IwZD[yp2U'", " <--- O utilizador \u00E9: ", " <--- O utilizador \u00E9: ", 0.0, 0.0, 0.0, arrayList0, 1974);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1974, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getEmail());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja2.getPassword());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getCodigo());
      assertNotNull(loja2);
      
      Loja loja3 = loja2.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja0);
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1974, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getEmail());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja2.getPassword());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getCodigo());
      assertEquals(" <--- O utilizador \u00E9: ", loja3.getNome());
      assertEquals(" <--- O utilizador \u00E9: ", loja3.getCodigo());
      assertEquals(" <--- O utilizador \u00E9: ", loja3.getEmail());
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals(1974, loja3.getNrPessoasEmFila());
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja3.getPassword());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertNotNull(loja3);
      
      String string0 = loja3.getEncNotReady();
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja3, loja2);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja0);
      assertEquals("0", string0);
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja3));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja3.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1974, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getEmail());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja2.getPassword());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getCodigo());
      assertEquals(" <--- O utilizador \u00E9: ", loja3.getNome());
      assertEquals(" <--- O utilizador \u00E9: ", loja3.getCodigo());
      assertEquals(" <--- O utilizador \u00E9: ", loja3.getEmail());
      assertEquals("Loja", loja3.getTypeUser());
      assertEquals(1974, loja3.getNrPessoasEmFila());
      assertEquals(0.0, loja3.getTempo_espera(), 0.01);
      assertEquals(0.0, loja3.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja3.getPassword());
      assertEquals(0.0, loja3.getLongitude(), 0.01);
      assertNotNull(string0);
      
      loja2.setTempo_espera((-2673.3551212515));
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja3));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1974, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getEmail());
      assertEquals((-2673.3551212515), loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja2.getPassword());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getCodigo());
      
      Loja loja4 = loja2.clone();
      assertNotSame(loja0, loja4);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja4);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja4);
      assertNotSame(loja2, loja0);
      assertNotSame(loja4, loja2);
      assertNotSame(loja4, loja3);
      assertNotSame(loja4, loja0);
      assertNotSame(loja4, loja1);
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja3));
      assertFalse(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja4.equals((Object)loja3));
      assertFalse(loja4.equals((Object)loja0));
      assertTrue(loja4.equals((Object)loja2));
      assertFalse(loja4.equals((Object)loja1));
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1974, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getEmail());
      assertEquals((-2673.3551212515), loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja2.getPassword());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getCodigo());
      assertEquals(" <--- O utilizador \u00E9: ", loja4.getNome());
      assertEquals(0.0, loja4.getLongitude(), 0.01);
      assertEquals(" <--- O utilizador \u00E9: ", loja4.getCodigo());
      assertEquals((-2673.3551212515), loja4.getTempo_espera(), 0.01);
      assertEquals(0.0, loja4.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja4.getPassword());
      assertEquals(1974, loja4.getNrPessoasEmFila());
      assertEquals("Loja", loja4.getTypeUser());
      assertEquals(" <--- O utilizador \u00E9: ", loja4.getEmail());
      assertNotNull(loja4);
      
      String string1 = loja2.toString();
      assertNotSame(loja0, loja4);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja4);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja4);
      assertNotSame(loja2, loja0);
      assertEquals("Loja: \nC\u00F3digo da loja:  <--- O utilizador \u00E9: \nNome da loja:  <--- O utilizador \u00E9: \nTempo de espera: -2673.3551212515\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \nLoja\n\n", string1);
      assertFalse(loja0.equals((Object)loja4));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja4));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja3));
      assertFalse(loja2.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja4));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1974, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getEmail());
      assertEquals((-2673.3551212515), loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja2.getPassword());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getCodigo());
      assertNotNull(string1);
      
      double double0 = loja2.getLongitude();
      assertNotSame(loja0, loja4);
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja4);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja3);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja4);
      assertNotSame(loja2, loja0);
      assertEquals(0.0, double0, 0.01);
      assertFalse(loja0.equals((Object)loja4));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja2));
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja4));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja2.equals((Object)loja3));
      assertFalse(loja2.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja4));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(1974, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getEmail());
      assertEquals((-2673.3551212515), loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("IwZD[yp2U'", loja2.getPassword());
      assertEquals(" <--- O utilizador \u00E9: ", loja2.getCodigo());
      
      try { 
        loja1.getEnc("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      loja0.setTypeUser("Lista de encomendas recebidas: ");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      loja0.setLongitude(0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      Loja loja1 = new Loja("-xgO$//A.L}RA", "-xgO$//A.L}RA", "", "Pu^dk[", 375.443068, (-475.39), 375.443068, arrayList0, 0);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("-xgO$//A.L}RA", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("-xgO$//A.L}RA", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-475.39), loja1.getLongitude(), 0.01);
      assertEquals("Pu^dk[", loja1.getNome());
      assertEquals(375.443068, loja1.getTempo_espera(), 0.01);
      assertEquals((-475.39), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertNotNull(loja1);
      
      Loja loja2 = new Loja(loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("-xgO$//A.L}RA", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("-xgO$//A.L}RA", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-475.39), loja1.getLongitude(), 0.01);
      assertEquals("Pu^dk[", loja1.getNome());
      assertEquals(375.443068, loja1.getTempo_espera(), 0.01);
      assertEquals((-475.39), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("-xgO$//A.L}RA", loja2.getPassword());
      assertEquals("-xgO$//A.L}RA", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-475.39), loja2.getLongitude(), 0.01);
      assertEquals("Pu^dk[", loja2.getNome());
      assertEquals(375.443068, loja2.getTempo_espera(), 0.01);
      assertEquals((-475.39), loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertNotNull(loja2);
      
      double double0 = loja2.getTempo_espera();
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertEquals(375.443068, double0, 0.01);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("Lista de encomendas recebidas: ", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("-xgO$//A.L}RA", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("-xgO$//A.L}RA", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-475.39), loja1.getLongitude(), 0.01);
      assertEquals("Pu^dk[", loja1.getNome());
      assertEquals(375.443068, loja1.getTempo_espera(), 0.01);
      assertEquals((-475.39), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("-xgO$//A.L}RA", loja2.getPassword());
      assertEquals("-xgO$//A.L}RA", loja2.getEmail());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-475.39), loja2.getLongitude(), 0.01);
      assertEquals("Pu^dk[", loja2.getNome());
      assertEquals(375.443068, loja2.getTempo_espera(), 0.01);
      assertEquals((-475.39), loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      
      try { 
        loja2.getEnc("Lista de encomendas recebidas: ");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      String string0 = loja0.getNome();
      assertEquals("", string0);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(string0);
      
      String string1 = loja0.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(string1);
      
      String string2 = loja0.toString();
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string2);
      assertTrue(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(string2);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Loja loja0 = null;
      try {
        loja0 = new Loja("1^:n+xu`=Y;}3xa{*", "0", "1^:n+xu`=Y;}3xa{*", "0", 0.0, 1879.5364121, 914.834, (ArrayList<Encomenda>) null, 2725);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertNotNull(loja0);
      
      loja0.setNrPessoasEmFila(1);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      
      Loja loja1 = loja0.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(1, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertNotNull(loja1);
      
      double double0 = loja1.getLatitude();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals(0.0, double0, 0.01);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(1, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(1, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja((String) null, (String) null, "\n", "+Cp+", 0.0, 0.0, 0.0, arrayList0, 2706);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(2706, loja1.getNrPessoasEmFila());
      assertEquals("+Cp+", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertNull(loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("\n", loja1.getCodigo());
      assertNotNull(loja1);
      
      Loja loja2 = new Loja(loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(2706, loja1.getNrPessoasEmFila());
      assertEquals("+Cp+", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertNull(loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("\n", loja1.getCodigo());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getPassword());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertNull(loja2.getEmail());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("+Cp+", loja2.getNome());
      assertEquals(2706, loja2.getNrPessoasEmFila());
      assertEquals("\n", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertNotNull(loja2);
      
      String string0 = loja2.getCodigo();
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertEquals("\n", string0);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNull(loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(2706, loja1.getNrPessoasEmFila());
      assertEquals("+Cp+", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertNull(loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("\n", loja1.getCodigo());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertNull(loja2.getPassword());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertNull(loja2.getEmail());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("+Cp+", loja2.getNome());
      assertEquals(2706, loja2.getNrPessoasEmFila());
      assertEquals("\n", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja("", "", "Tempo de espera: ", "", (-1183.7000963183), (-1183.7000963183), 0.0, arrayList0, (-1344));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1183.7000963183), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals((-1344), loja1.getNrPessoasEmFila());
      assertEquals((-1183.7000963183), loja1.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("Tempo de espera: ", loja1.getCodigo());
      assertNotNull(loja1);
      
      loja0.setNrPessoasEmFila((-1344));
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      
      Loja loja2 = new Loja("+^|xb", "Encomenda", "+^|xb", "YHXv", 0.0, (-1183.7000963183), (-1344), arrayList0, (-1344));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals((-1183.7000963183), loja2.getLatitude(), 0.01);
      assertEquals("+^|xb", loja2.getEmail());
      assertEquals("Encomenda", loja2.getPassword());
      assertEquals("+^|xb", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-1183.7000963183), loja2.getLongitude(), 0.01);
      assertEquals("YHXv", loja2.getNome());
      assertEquals((-1344), loja2.getNrPessoasEmFila());
      assertNotNull(loja2);
      
      boolean boolean0 = loja0.equals(loja2);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(boolean0);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertFalse(loja2.equals((Object)loja1));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals((-1183.7000963183), loja2.getLatitude(), 0.01);
      assertEquals("+^|xb", loja2.getEmail());
      assertEquals("Encomenda", loja2.getPassword());
      assertEquals("+^|xb", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals((-1183.7000963183), loja2.getLongitude(), 0.01);
      assertEquals("YHXv", loja2.getNome());
      assertEquals((-1344), loja2.getNrPessoasEmFila());
      
      Loja loja3 = new Loja(loja1);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja2));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1183.7000963183), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals((-1344), loja1.getNrPessoasEmFila());
      assertEquals((-1183.7000963183), loja1.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("Tempo de espera: ", loja1.getCodigo());
      assertEquals("", loja3.getNome());
      assertEquals((-1183.7000963183), loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getPassword());
      assertEquals((-1344), loja3.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja3.getCodigo());
      assertEquals((-1183.7000963183), loja3.getLatitude(), 0.01);
      assertEquals("", loja3.getEmail());
      assertEquals((-1183.7000963183), loja3.getTempo_espera(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      assertNotNull(loja3);
      
      loja3.setLongitude(0.0);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja2));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1183.7000963183), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals((-1344), loja1.getNrPessoasEmFila());
      assertEquals((-1183.7000963183), loja1.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("Tempo de espera: ", loja1.getCodigo());
      assertEquals("", loja3.getNome());
      assertEquals((-1183.7000963183), loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getPassword());
      assertEquals((-1344), loja3.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja3.getCodigo());
      assertEquals((-1183.7000963183), loja3.getLatitude(), 0.01);
      assertEquals("", loja3.getEmail());
      assertEquals((-1183.7000963183), loja3.getTempo_espera(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      
      loja3.setEmail("Tempo de espera: ");
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja2));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1183.7000963183), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals((-1344), loja1.getNrPessoasEmFila());
      assertEquals((-1183.7000963183), loja1.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("Tempo de espera: ", loja1.getCodigo());
      assertEquals("", loja3.getNome());
      assertEquals((-1183.7000963183), loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getPassword());
      assertEquals((-1344), loja3.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja3.getEmail());
      assertEquals("Tempo de espera: ", loja3.getCodigo());
      assertEquals((-1183.7000963183), loja3.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja3.getTempo_espera(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      
      double double0 = loja3.getLatitude();
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      assertEquals((-1183.7000963183), double0, 0.01);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja2));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1183.7000963183), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals((-1344), loja1.getNrPessoasEmFila());
      assertEquals((-1183.7000963183), loja1.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("Tempo de espera: ", loja1.getCodigo());
      assertEquals("", loja3.getNome());
      assertEquals((-1183.7000963183), loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getPassword());
      assertEquals((-1344), loja3.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja3.getEmail());
      assertEquals("Tempo de espera: ", loja3.getCodigo());
      assertEquals((-1183.7000963183), loja3.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja3.getTempo_espera(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      
      double double1 = loja3.getTempo_espera();
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja3, loja0);
      assertNotSame(loja3, loja1);
      assertNotSame(loja3, loja2);
      assertEquals((-1183.7000963183), double1, 0.01);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja3.equals((Object)loja0));
      assertFalse(loja3.equals((Object)loja1));
      assertFalse(loja3.equals((Object)loja2));
      assertEquals(double1, double0, 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1183.7000963183), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals((-1344), loja1.getNrPessoasEmFila());
      assertEquals((-1183.7000963183), loja1.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("Tempo de espera: ", loja1.getCodigo());
      assertEquals("", loja3.getNome());
      assertEquals((-1183.7000963183), loja3.getLongitude(), 0.01);
      assertEquals("", loja3.getPassword());
      assertEquals((-1344), loja3.getNrPessoasEmFila());
      assertEquals("Tempo de espera: ", loja3.getEmail());
      assertEquals("Tempo de espera: ", loja3.getCodigo());
      assertEquals((-1183.7000963183), loja3.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja3.getTempo_espera(), 0.01);
      assertEquals("Loja", loja3.getTypeUser());
      
      loja0.setPassword("");
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      
      boolean boolean1 = loja1.equals("\"@Hu/>");
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja3);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja3);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertFalse(boolean1);
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja3));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja3));
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(loja1.equals((Object)loja2));
      assertTrue(boolean1 == boolean0);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("", loja1.getEmail());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-1183.7000963183), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals((-1344), loja1.getNrPessoasEmFila());
      assertEquals((-1183.7000963183), loja1.getLatitude(), 0.01);
      assertEquals((-1183.7000963183), loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals("Tempo de espera: ", loja1.getCodigo());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja();
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertNotNull(loja1);
      
      boolean boolean0 = loja0.equals(loja1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(boolean0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      
      loja0.setLongitude(0.0);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      
      loja0.setNrPessoasEmFila((-2289));
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-2289), loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      
      String string0 = loja0.toString();
      assertNotSame(loja0, loja1);
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals((-2289), loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotNull(string0);
      
      loja0.setNrPessoasEmFila(236);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(236, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(236, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertNotNull(loja0);
      
      double double0 = loja0.getLongitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      double double0 = loja0.getTempo_espera();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      
      Encomenda encomenda0 = null;
      // Undeclared exception!
      try { 
        loja0.updateEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertNotNull(loja0);
      
      loja0.setLatitude(2072.46891);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(2072.46891, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getNome());
      assertEquals(2072.46891, loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      boolean boolean0 = loja0.equals("K2P9;-*>Xr)Pmvj#");
      assertFalse(boolean0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      
      loja0.setPassword("K2P9;-*>Xr)Pmvj#");
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("K2P9;-*>Xr)Pmvj#", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      
      loja0.setTypeUser((String) null);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("K2P9;-*>Xr)Pmvj#", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNull(loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      
      loja0.setLongitude(2273.22);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("K2P9;-*>Xr)Pmvj#", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNull(loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      
      String string0 = loja0.getCodigo();
      assertEquals("", string0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("K2P9;-*>Xr)Pmvj#", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNull(loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertNotNull(string0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("K2P9;-*>Xr)Pmvj#", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNull(loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotNull(loja0);
      
      loja0.setNome("$`:fEk`Ar");
      assertEquals("$`:fEk`Ar", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      
      loja0.setNome("");
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertNotNull(loja1);
      
      String string0 = loja0.toString();
      assertNotSame(loja0, loja1);
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotNull(string0);
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      loja1.setEncomendas_recebidas(arrayList0);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja("AXUJ|Q0]?/%AKD9", "AXUJ|Q0]?/%AKD9", "AXUJ|Q0]?/%AKD9", "", 2084.3309241, 5912.213765746656, 1.0, arrayList0, 0);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(5912.213765746656, loja1.getLatitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("AXUJ|Q0]?/%AKD9", loja1.getCodigo());
      assertEquals(2084.3309241, loja1.getTempo_espera(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("AXUJ|Q0]?/%AKD9", loja1.getEmail());
      assertEquals(5912.213765746656, loja1.getLongitude(), 0.01);
      assertEquals("AXUJ|Q0]?/%AKD9", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertNotNull(loja1);
      
      Loja loja2 = loja1.clone();
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(5912.213765746656, loja1.getLatitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("AXUJ|Q0]?/%AKD9", loja1.getCodigo());
      assertEquals(2084.3309241, loja1.getTempo_espera(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("AXUJ|Q0]?/%AKD9", loja1.getEmail());
      assertEquals(5912.213765746656, loja1.getLongitude(), 0.01);
      assertEquals("AXUJ|Q0]?/%AKD9", loja1.getPassword());
      assertEquals("", loja1.getNome());
      assertEquals("AXUJ|Q0]?/%AKD9", loja2.getPassword());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals(5912.213765746656, loja2.getLongitude(), 0.01);
      assertEquals(2084.3309241, loja2.getTempo_espera(), 0.01);
      assertEquals("AXUJ|Q0]?/%AKD9", loja2.getCodigo());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("", loja2.getNome());
      assertEquals(5912.213765746656, loja2.getLatitude(), 0.01);
      assertEquals("AXUJ|Q0]?/%AKD9", loja2.getEmail());
      assertNotNull(loja2);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotNull(loja0);
      
      double double0 = loja0.getLatitude();
      assertEquals(0.0, double0, 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      int int0 = loja0.getNrPessoasEmFila();
      assertEquals(0, int0);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja("Vendedor: ", "Vendedor: ", "Vendedor: ", "[", (-2139.04475371878), (-2139.04475371878), (-2487.414041247), arrayList0, 0);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("Vendedor: ", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("Vendedor: ", loja1.getPassword());
      assertEquals((-2139.04475371878), loja1.getTempo_espera(), 0.01);
      assertEquals("[", loja1.getNome());
      assertEquals((-2139.04475371878), loja1.getLatitude(), 0.01);
      assertEquals((-2139.04475371878), loja1.getLongitude(), 0.01);
      assertEquals("Vendedor: ", loja1.getEmail());
      assertNotNull(loja1);
      
      Loja loja2 = new Loja(loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("Vendedor: ", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("Vendedor: ", loja1.getPassword());
      assertEquals((-2139.04475371878), loja1.getTempo_espera(), 0.01);
      assertEquals("[", loja1.getNome());
      assertEquals((-2139.04475371878), loja1.getLatitude(), 0.01);
      assertEquals((-2139.04475371878), loja1.getLongitude(), 0.01);
      assertEquals("Vendedor: ", loja1.getEmail());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("Vendedor: ", loja2.getCodigo());
      assertEquals((-2139.04475371878), loja2.getTempo_espera(), 0.01);
      assertEquals("[", loja2.getNome());
      assertEquals((-2139.04475371878), loja2.getLatitude(), 0.01);
      assertEquals((-2139.04475371878), loja2.getLongitude(), 0.01);
      assertEquals("Vendedor: ", loja2.getPassword());
      assertEquals("Vendedor: ", loja2.getEmail());
      assertNotNull(loja2);
      
      String string0 = loja2.getNome();
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(loja1, loja2);
      assertNotSame(loja2, loja1);
      assertNotSame(loja2, loja0);
      assertEquals("[", string0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja0.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(loja1.equals((Object)loja2));
      assertTrue(loja2.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja0));
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals("Vendedor: ", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals("Vendedor: ", loja1.getPassword());
      assertEquals((-2139.04475371878), loja1.getTempo_espera(), 0.01);
      assertEquals("[", loja1.getNome());
      assertEquals((-2139.04475371878), loja1.getLatitude(), 0.01);
      assertEquals((-2139.04475371878), loja1.getLongitude(), 0.01);
      assertEquals("Vendedor: ", loja1.getEmail());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals("Loja", loja2.getTypeUser());
      assertEquals("Vendedor: ", loja2.getCodigo());
      assertEquals((-2139.04475371878), loja2.getTempo_espera(), 0.01);
      assertEquals("[", loja2.getNome());
      assertEquals((-2139.04475371878), loja2.getLatitude(), 0.01);
      assertEquals((-2139.04475371878), loja2.getLongitude(), 0.01);
      assertEquals("Vendedor: ", loja2.getPassword());
      assertEquals("Vendedor: ", loja2.getEmail());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertNotNull(loja0);
      
      try { 
        loja0.getEnc("");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja("Y", "Y", "", "3fUxFJ+I?aZl%kz", 3420.31, 3420.31, 3420.31, arrayList0, 0);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(3420.31, loja1.getLongitude(), 0.01);
      assertEquals("Y", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("3fUxFJ+I?aZl%kz", loja1.getNome());
      assertEquals(3420.31, loja1.getTempo_espera(), 0.01);
      assertEquals(3420.31, loja1.getLatitude(), 0.01);
      assertEquals("Y", loja1.getPassword());
      assertNotNull(loja1);
      
      double double0 = loja1.getLatitude();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals(3420.31, double0, 0.01);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertEquals(3420.31, loja1.getLongitude(), 0.01);
      assertEquals("Y", loja1.getEmail());
      assertEquals("", loja1.getCodigo());
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("3fUxFJ+I?aZl%kz", loja1.getNome());
      assertEquals(3420.31, loja1.getTempo_espera(), 0.01);
      assertEquals(3420.31, loja1.getLatitude(), 0.01);
      assertEquals("Y", loja1.getPassword());
      
      loja0.setCodigo("Encomenda");
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("Encomenda", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja("\"?O)TK3$", "\"?O)TK3$", "\n", (String) null, 51.148, 51.148, 51.148, arrayList0, (-1301));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(loja1.getNome());
      assertEquals(51.148, loja1.getLongitude(), 0.01);
      assertEquals(51.148, loja1.getTempo_espera(), 0.01);
      assertEquals((-1301), loja1.getNrPessoasEmFila());
      assertEquals("\"?O)TK3$", loja1.getEmail());
      assertEquals(51.148, loja1.getLatitude(), 0.01);
      assertEquals("\n", loja1.getCodigo());
      assertEquals("\"?O)TK3$", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertNotNull(loja1);
      
      String string0 = loja1.getEncNotReady();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals("0", string0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNull(loja1.getNome());
      assertEquals(51.148, loja1.getLongitude(), 0.01);
      assertEquals(51.148, loja1.getTempo_espera(), 0.01);
      assertEquals((-1301), loja1.getNrPessoasEmFila());
      assertEquals("\"?O)TK3$", loja1.getEmail());
      assertEquals(51.148, loja1.getLatitude(), 0.01);
      assertEquals("\n", loja1.getCodigo());
      assertEquals("\"?O)TK3$", loja1.getPassword());
      assertEquals("Loja", loja1.getTypeUser());
      assertNotNull(string0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      try { 
        loja0.getEnc("U");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      Loja loja1 = new Loja("_cMPySG%sG", "_cMPySG%sG", "_cMPySG%sG", "iz1i", (-60.8), (-60.8), (-60.8), arrayList0, 10);
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(10, loja1.getNrPessoasEmFila());
      assertEquals("_cMPySG%sG", loja1.getEmail());
      assertEquals((-60.8), loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-60.8), loja1.getLatitude(), 0.01);
      assertEquals("iz1i", loja1.getNome());
      assertEquals("_cMPySG%sG", loja1.getCodigo());
      assertEquals("_cMPySG%sG", loja1.getPassword());
      assertEquals((-60.8), loja1.getTempo_espera(), 0.01);
      assertNotNull(loja1);
      
      double double0 = loja1.getTempo_espera();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals((-60.8), double0, 0.01);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals(10, loja1.getNrPessoasEmFila());
      assertEquals("_cMPySG%sG", loja1.getEmail());
      assertEquals((-60.8), loja1.getLongitude(), 0.01);
      assertEquals("Loja", loja1.getTypeUser());
      assertEquals((-60.8), loja1.getLatitude(), 0.01);
      assertEquals("iz1i", loja1.getNome());
      assertEquals("_cMPySG%sG", loja1.getCodigo());
      assertEquals("_cMPySG%sG", loja1.getPassword());
      assertEquals((-60.8), loja1.getTempo_espera(), 0.01);
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      Loja loja0 = null;
      try {
        loja0 = new Loja("eH", "eH", "eH", "eH", 0.0, 0.0, 0.0, (ArrayList<Encomenda>) null, 10);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
      assertNotNull(loja1);
      
      int int0 = loja1.getNrPessoasEmFila();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals(0, int0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals("", loja1.getEmail());
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      Loja loja0 = null;
      try {
        loja0 = new Loja((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("UtilizadorSistema", e);
      }
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertNotNull(loja0);
      
      loja0.setNrPessoasEmFila(0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      Loja loja1 = loja0.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertNotNull(loja1);
      
      loja0.setTempo_espera((-531.2163876058784));
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals((-531.2163876058784), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      
      String string0 = loja0.getCodigo();
      assertNotSame(loja0, loja1);
      assertEquals("", string0);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals((-531.2163876058784), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertNotNull(string0);
      
      boolean boolean0 = loja0.equals("");
      assertNotSame(loja0, loja1);
      assertFalse(boolean0);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals((-531.2163876058784), loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      
      // Undeclared exception!
      try { 
        loja0.addEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      loja0.setLongitude(0.0);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      
      Loja loja1 = new Loja(loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertNotNull(loja1);
      
      ArrayList<Encomenda> arrayList1 = loja1.getEncomendas_recebidas();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList1, arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertTrue(arrayList1.isEmpty());
      assertEquals(0, arrayList1.size());
      assertNotNull(arrayList1);
      
      boolean boolean0 = loja0.equals(loja0);
      assertNotSame(loja0, loja1);
      assertTrue(boolean0);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      
      ArrayList<Encomenda> arrayList2 = loja0.getEncomendas_recebidas();
      assertNotSame(loja0, loja1);
      assertNotSame(arrayList2, arrayList1);
      assertNotSame(arrayList2, arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(arrayList2.equals((Object)arrayList0));
      assertTrue(arrayList2.equals((Object)arrayList1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, arrayList2.size());
      assertTrue(arrayList2.isEmpty());
      assertNotNull(arrayList2);
      
      loja0.setNrPessoasEmFila(0);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      
      loja1.setEncomendas_recebidas(arrayList0);
      assertNotSame(loja0, loja1);
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList0, arrayList1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(arrayList0.equals((Object)arrayList2));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      
      String string0 = loja0.getEncNotReady();
      assertNotSame(loja0, loja1);
      assertEquals("0", string0);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertNotNull(string0);
      
      loja1.setCodigo("r[YM (o/O+R30m");
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("r[YM (o/O+R30m", loja1.getCodigo());
      
      loja0.setTempo_espera(1357.90303069);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals(1357.90303069, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      
      Loja loja2 = loja0.clone();
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja0));
      assertEquals(1357.90303069, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja2.getCodigo());
      assertEquals("", loja2.getNome());
      assertEquals(1357.90303069, loja2.getTempo_espera(), 0.01);
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getTypeUser());
      assertEquals("", loja2.getPassword());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("", loja2.getEmail());
      assertNotNull(loja2);
      
      loja1.setTempo_espera(0.0);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals(1357.90303069, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("r[YM (o/O+R30m", loja1.getCodigo());
      
      ArrayList<Encomenda> arrayList3 = loja1.getEncomendas_recebidas();
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja2);
      assertNotSame(loja1, loja0);
      assertNotSame(arrayList3, arrayList2);
      assertNotSame(arrayList3, arrayList1);
      assertNotSame(arrayList3, arrayList0);
      assertTrue(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja2));
      assertFalse(loja1.equals((Object)loja0));
      assertTrue(arrayList3.equals((Object)arrayList2));
      assertTrue(arrayList3.equals((Object)arrayList0));
      assertTrue(arrayList3.equals((Object)arrayList1));
      assertEquals(1357.90303069, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("r[YM (o/O+R30m", loja1.getCodigo());
      assertEquals(0, arrayList3.size());
      assertTrue(arrayList3.isEmpty());
      assertNotNull(arrayList3);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertNotSame(loja0, loja2);
      assertNotSame(loja0, loja1);
      assertNotSame(arrayList0, arrayList3);
      assertNotSame(arrayList0, arrayList2);
      assertNotSame(arrayList0, arrayList1);
      assertTrue(loja0.equals((Object)loja2));
      assertFalse(loja0.equals((Object)loja1));
      assertTrue(arrayList0.equals((Object)arrayList2));
      assertTrue(arrayList0.equals((Object)arrayList1));
      assertTrue(arrayList0.equals((Object)arrayList3));
      assertEquals(1357.90303069, loja0.getTempo_espera(), 0.01);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      
      try { 
        loja0.getEnc("0");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja();
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertNotNull(loja1);
      
      loja1.setNome("mM}7");
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("mM}7", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      
      loja0.removeEncomenda((Encomenda) null);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      boolean boolean0 = loja0.equals(loja1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(boolean0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("mM}7", loja1.getNome());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      
      String string0 = loja0.toString();
      assertNotSame(loja0, loja1);
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertNotNull(string0);
      
      loja0.setCodigo("");
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      
      loja0.setNrPessoasEmFila(236);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals("", loja0.getEmail());
      assertEquals(236, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja(loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertNotNull(loja1);
      
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertNotNull(arrayList0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      double double0 = (-1252.76211211627);
      loja1.setLatitude((-1252.76211211627));
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals((-1252.76211211627), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-1252.76211211627), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      
      String string0 = loja1.toString();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: -1252.76211211627\nLongitude: -1252.76211211627\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals((-1252.76211211627), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-1252.76211211627), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertNotNull(string0);
      
      loja1.setEncomendas_recebidas(arrayList0);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals((-1252.76211211627), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-1252.76211211627), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      
      ArrayList<Encomenda> arrayList1 = loja0.getEncomendas_recebidas();
      assertNotSame(loja0, loja1);
      assertNotSame(arrayList1, arrayList0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(arrayList1.equals((Object)arrayList0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0, arrayList1.size());
      assertTrue(arrayList1.isEmpty());
      assertNotNull(arrayList1);
      
      String string1 = loja1.getEncNotReady();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals("0", string1);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertFalse(string1.equals((Object)string0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals((-1252.76211211627), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-1252.76211211627), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      assertNotNull(string1);
      
      int int0 = loja1.getNrPessoasEmFila();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertEquals(0, int0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals((-1252.76211211627), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-1252.76211211627), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      
      loja1.setTempo_espera((-1252.76211211627));
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals((-1252.76211211627), loja1.getTempo_espera(), 0.01);
      assertEquals((-1252.76211211627), loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals((-1252.76211211627), loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getCodigo());
      assertEquals("", loja1.getNome());
      
      double double1 = 306.96;
      loja0.setLongitude(306.96);
      assertNotSame(loja0, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      
      try { 
        loja0.getEnc("0");
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotNull(loja0);
      
      Loja loja1 = new Loja();
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertNotNull(loja1);
      
      boolean boolean0 = loja0.equals(loja1);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(boolean0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      
      loja0.setLongitude(0.0);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      loja0.setNrPessoasEmFila((-2289));
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals((-2289), loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      String string0 = loja0.toString();
      assertNotSame(loja0, loja1);
      assertEquals("Loja: \nC\u00F3digo da loja: \nNome da loja: \nTempo de espera: 0.0\nLatitude: 0.0\nLongitude: 0.0\nLista de encomendas recebidas:  <--- O utilizador \u00E9: \n\n\n", string0);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals((-2289), loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertNotNull(string0);
      
      loja0.setNrPessoasEmFila(0);
      assertNotSame(loja0, loja1);
      assertTrue(loja0.equals((Object)loja1));
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      
      ArrayList<Encomenda> arrayList0 = loja1.getEncomendas_recebidas();
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertNotNull(arrayList0);
      
      loja0.setEncomendas_recebidas(arrayList0);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja0.equals((Object)loja1));
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getTypeUser());
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getCodigo());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getPassword());
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals("", loja1.getNome());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      Loja loja0 = new Loja();
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(loja0);
      
      String string0 = loja0.getEncNotReady();
      assertEquals("0", string0);
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertNotNull(string0);
      
      Loja loja1 = loja0.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertTrue(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getEmail());
      assertEquals("", loja1.getPassword());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("", loja1.getCodigo());
      assertNotNull(loja1);
      
      loja1.setPassword("%WN$@k0R^");
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("%WN$@k0R^", loja1.getPassword());
      assertEquals("", loja1.getCodigo());
      
      loja1.setCodigo("Peso: ");
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Peso: ", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("%WN$@k0R^", loja1.getPassword());
      
      loja1.setLongitude(1.0);
      assertNotSame(loja0, loja1);
      assertNotSame(loja1, loja0);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja1.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals("", loja1.getEmail());
      assertEquals(0.0, loja1.getLongitude(), 0.01);
      assertEquals(0, loja1.getNrPessoasEmFila());
      assertEquals("Peso: ", loja1.getCodigo());
      assertEquals(0.0, loja1.getTempo_espera(), 0.01);
      assertEquals("", loja1.getTypeUser());
      assertEquals("", loja1.getNome());
      assertEquals(0.0, loja1.getLatitude(), 0.01);
      assertEquals("%WN$@k0R^", loja1.getPassword());
      
      boolean boolean0 = loja0.equals((Object) null);
      assertNotSame(loja0, loja1);
      assertFalse(boolean0);
      assertFalse(loja0.equals((Object)loja1));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      
      Loja loja2 = loja0.clone();
      assertNotSame(loja0, loja1);
      assertNotSame(loja0, loja2);
      assertNotSame(loja2, loja0);
      assertNotSame(loja2, loja1);
      assertFalse(loja0.equals((Object)loja1));
      assertFalse(loja2.equals((Object)loja1));
      assertTrue(loja2.equals((Object)loja0));
      assertEquals("", loja0.getPassword());
      assertEquals(0.0, loja0.getLongitude(), 0.01);
      assertEquals(0, loja0.getNrPessoasEmFila());
      assertEquals("", loja0.getNome());
      assertEquals(0.0, loja0.getTempo_espera(), 0.01);
      assertEquals("", loja0.getTypeUser());
      assertEquals("", loja0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals("", loja0.getEmail());
      assertEquals(0, loja2.getNrPessoasEmFila());
      assertEquals(0.0, loja2.getLongitude(), 0.01);
      assertEquals("", loja2.getPassword());
      assertEquals("", loja2.getEmail());
      assertEquals("", loja2.getTypeUser());
      assertEquals(0.0, loja2.getTempo_espera(), 0.01);
      assertEquals("", loja2.getNome());
      assertEquals(0.0, loja2.getLatitude(), 0.01);
      assertEquals("", loja2.getCodigo());
      assertNotNull(loja2);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Loja loja1 = new Loja("", "", "Tempo de espera: ", "", (-1183.7000963183), (-1183.7000963183), 0.0, arrayList0, (-1344));
      loja0.setNrPessoasEmFila((-1344));
      Loja loja2 = new Loja("Latitude: ", "Encomenda", "Latitude: ", "YHXv", 0.0, (-1183.7000963183), (-1344), arrayList0, (-1344));
      loja0.equals(loja2);
      Loja loja3 = new Loja(loja1);
      loja3.setLongitude(0.0);
      loja3.setEmail("Tempo de espera: ");
      loja3.getEncNotReady();
      loja3.getLatitude();
      loja3.getTempo_espera();
      loja0.setPassword("");
      boolean boolean0 = loja1.equals("\"@Hu/>");
      assertEquals((-1344), loja0.getNrPessoasEmFila());
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test48()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.clone();
      loja0.setTempo_espera((-531.2163876058784));
      // Undeclared exception!
      try { 
        loja0.updateEncomenda((Encomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Loja", e);
      }
  }
}
