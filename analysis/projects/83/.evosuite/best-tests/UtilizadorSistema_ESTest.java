/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:44:26 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import java.time.LocalDate;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.MockLocalDate;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UtilizadorSistema_ESTest extends UtilizadorSistema_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario();
      voluntario0.setNome("");
      assertEquals(0.0, voluntario0.getLatitude(), 0.01);
      assertEquals(0.0, voluntario0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setCodigo(",Rj|3kOdU4^i");
      assertEquals(0.0, loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      String string0 = utilizador0.toString();
      assertEquals(" <--- O utilizador \u00E9: \n\n\nC\u00F3digo: \nNome: \nLatitude: 0.0\nLongitude: 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.getTypeUser();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      utilizador0.getPassword();
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.getNome();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Loja loja0 = new Loja();
      double double0 = loja0.getLongitude();
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Utilizador utilizador0 = new Utilizador("Q(.~Z*3wY;?|$3!z@", "Q(.~Z*3wY;?|$3!z@", " encomendas pela empresa ", "Q(.~Z*3wY;?|$3!z@", (-1.0), (-1.0), arrayList0);
      double double0 = utilizador0.getLongitude();
      assertEquals("Q(.~Z*3wY;?|$3!z@", utilizador0.getNome());
      assertEquals((-1.0), utilizador0.getLatitude(), 0.01);
      assertEquals((-1.0), double0, 0.01);
      assertEquals("Q(.~Z*3wY;?|$3!z@", utilizador0.getEmail());
      assertEquals("Q(.~Z*3wY;?|$3!z@", utilizador0.getPassword());
      assertEquals("Utilizador", utilizador0.getTypeUser());
      assertEquals(" encomendas pela empresa ", utilizador0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      double double0 = utilizador0.getLatitude();
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      ArrayList<Encomenda> arrayList0 = empresaTransportes0.getRegistos();
      Utilizador utilizador0 = new Utilizador("Total de Voluntarios: \n{}", "", "Total de Voluntarios: \n{}", "", 1.0, (-1081), arrayList0);
      double double0 = utilizador0.getLatitude();
      assertEquals("Total de Voluntarios: \n{}", utilizador0.getCodigo());
      assertEquals((-1081.0), utilizador0.getLongitude(), 0.01);
      assertEquals(1.0, double0, 0.01);
      assertEquals("Total de Voluntarios: \n{}", utilizador0.getEmail());
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
      assertEquals("", utilizador0.getPassword());
      assertEquals("Utilizador", utilizador0.getTypeUser());
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
      assertEquals("", utilizador0.getNome());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.getCodigo();
      assertEquals(0.0, loja0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      utilizador0.clone();
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LocalDate localDate0 = MockLocalDate.now();
      ArrayList<Encomenda> arrayList0 = new ArrayList<Encomenda>();
      Voluntario voluntario0 = new Voluntario("r|<,!F?RFHXm42d", ">[:`o{l", "r|<,!F?RFHXm42d", ">[:`o{l", true, (-949.166500104173), 0.0, localDate0, (-2163.0), arrayList0, 1.0, 0, true, 0, (-1));
      UtilizadorSistema utilizadorSistema0 = voluntario0.clone();
      assertEquals("r|<,!F?RFHXm42d", utilizadorSistema0.getEmail());
      assertEquals("r|<,!F?RFHXm42d", utilizadorSistema0.getNome());
      assertEquals((-949.166500104173), utilizadorSistema0.getLatitude(), 0.01);
      assertEquals(0.0, voluntario0.getLongitude(), 0.01);
      assertEquals(">[:`o{l", utilizadorSistema0.getPassword());
      assertEquals(">[:`o{l", utilizadorSistema0.getCodigo());
      assertEquals((-949.166500104173), voluntario0.getLatitude(), 0.01);
      assertEquals("Voluntario", utilizadorSistema0.getTypeUser());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.setLatitude(0.0);
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.getEmail();
      assertEquals(0.0, loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      ArrayList<Encomenda> arrayList0 = utilizador0.getEncomendas();
      Loja loja0 = new Loja("", (String) null, (String) null, "RZlyNFpSX^E}*\"='8", (-1.0), (-1.0), 0.0, arrayList0, 412);
      String string0 = loja0.getPassword();
      assertEquals("", loja0.getEmail());
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
      assertEquals("RZlyNFpSX^E}*\"='8", loja0.getNome());
      assertEquals("Loja", loja0.getTypeUser());
      assertNull(string0);
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertEquals((-1.0), loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EmpresaTransportes empresaTransportes0 = new EmpresaTransportes();
      empresaTransportes0.setLongitude(0.0);
      assertEquals(0.0, empresaTransportes0.getLongitude(), 0.01);
      assertEquals(0.0, empresaTransportes0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Utilizador utilizador0 = new Utilizador("w\"VN", "--> ", "9_GD<3", "BDUtilizador", 0.0, 0.0, arrayList0);
      String string0 = utilizador0.getTypeUser();
      assertEquals("9_GD<3", utilizador0.getCodigo());
      assertEquals("--> ", utilizador0.getPassword());
      assertEquals("w\"VN", utilizador0.getEmail());
      assertEquals("Utilizador", string0);
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
      assertEquals("BDUtilizador", utilizador0.getNome());
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Utilizador utilizador0 = new Utilizador("w\"VN", "--> ", "9_GD<3", "BDUtilizador", 0.0, 0.0, arrayList0);
      Object object0 = new Object();
      boolean boolean0 = utilizador0.equals(object0);
      assertEquals("--> ", utilizador0.getPassword());
      assertEquals("BDUtilizador", utilizador0.getNome());
      assertEquals("w\"VN", utilizador0.getEmail());
      assertFalse(boolean0);
      assertEquals("Utilizador", utilizador0.getTypeUser());
      assertEquals(0.0, utilizador0.getLongitude(), 0.01);
      assertEquals("9_GD<3", utilizador0.getCodigo());
      assertEquals(0.0, loja0.getLatitude(), 0.01);
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setPassword("\"0k_QGR=R^D;");
      assertEquals(0.0, loja0.getLongitude(), 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Utilizador utilizador0 = new Utilizador("w\"VN", "--> ", "9_GD<3", "BDUtilizador", 0.0, 0.0, arrayList0);
      assertEquals("Utilizador", utilizador0.getTypeUser());
      
      utilizador0.setTypeUser(";}O:NbH`Ftu[");
      assertEquals("w\"VN", utilizador0.getEmail());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Loja loja0 = new Loja();
      ArrayList<Encomenda> arrayList0 = loja0.getEncomendas_recebidas();
      Utilizador utilizador0 = new Utilizador("w\"VN", "--> ", "9_GD<3", "BDUtilizador", 0.0, 0.0, arrayList0);
      assertEquals("w\"VN", utilizador0.getEmail());
      
      utilizador0.setEmail("KJjp");
      assertEquals(0.0, utilizador0.getLatitude(), 0.01);
  }
}
