/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:19:12 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Perfil_ESTest extends Perfil_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      Empresa empresa0 = new Empresa("]O>", "Empresa", "Empresa", ponto2D0, (-1.0), 0, (-1), "G", (-1), (-1.0));
      boolean boolean0 = empresa0.validaLogin("Empresa");
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      String string0 = empresa0.toString();
      assertEquals("Perfil: \n\n\n(0.0,0.0)\nRaio de a\u00E7ao: 0.0\nVelocidade media: 0\nLicen\u00E7a de transporte de medicamentos: 0\nNif: null\nCusto por km: 0.0\nCusto por quilo: 0.0\n", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      Voluntario voluntario0 = new Voluntario((String) null, (String) null, (String) null, ponto2D0, (-4759.5646121), 1175, 1, true);
      String string0 = voluntario0.getPassword();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D((-39.8892881770907), (-39.8892881770907));
      Empresa empresa0 = new Empresa("Perfil: Custo por km: \nCusto por km: \npjhM0P$_*sVtjA3\n(-39.8892881770907,-39.8892881770907)\nTempo de espera: 1165\nMorada: .?Y/", "pjhM0P$_*sVtjA3", "Numero de Encomenda: ", ponto2D0, (-1760.0), 0, (-2250), "Custo por km: ", (-1760.0), 1165);
      String string0 = empresa0.getPassword();
      assertEquals("Numero de Encomenda: ", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D(334.93864918, 73.3312518405);
      Utilizador utilizador0 = new Utilizador("Z12.8s", (String) null, (String) null, ponto2D0, 0);
      String string0 = utilizador0.getNome();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Empresa empresa0 = new Empresa("niNW-!", "niNW-!", "niNW-!", (Ponto2D) null, (-1.0), 0, 0, "niNW-!", 1105.60026289246, 1351.4110451682802);
      String string0 = empresa0.getNome();
      assertEquals("niNW-!", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario("", "", "y?>%]HMZyyG[`k", (Ponto2D) null, 1214.376673, 0, 0, true);
      Ponto2D ponto2D0 = voluntario0.getLocal();
      assertNull(ponto2D0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      ponto2D0.move(0.0, 150.389);
      Loja loja0 = new Loja("E6V)7'BYn<<!^-'", "E6V)7'BYn<<!^-'", "y_\u0002BDN)6", ponto2D0, (-1349), "y_\u0002BDN)6");
      Ponto2D ponto2D1 = loja0.getLocal();
      assertSame(ponto2D1, ponto2D0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D(0.0, 0.0);
      Empresa empresa0 = new Empresa((String) null, "Morada: ", "-*,0wBv:?,ip;e\"", ponto2D0, 0.0, (-1), (-1), "Morada: ", 0.0, 3991.0);
      ponto2D0.move(1071.6, (double) (-1));
      Ponto2D ponto2D1 = empresa0.getLocal();
      assertSame(ponto2D0, ponto2D1);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      Loja loja0 = new Loja((String) null, "Ponto2D", (String) null, ponto2D0, (-1), "DTP7.Iwe&1tgC#KFWf>");
      ponto2D0.move((double) (-1), 0.0);
      Ponto2D ponto2D1 = loja0.getLocal();
      assertEquals(0.0, ponto2D1.getY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D(1.0, 1.0);
      Voluntario voluntario0 = new Voluntario((String) null, (String) null, "", ponto2D0, 1.0, 0, 0, true);
      String string0 = voluntario0.getEmail();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setEmail("Licen\u00E7a de transporte de medicamentos: ");
      String string0 = loja0.getEmail();
      assertEquals("Licen\u00E7a de transporte de medicamentos: ", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D(1.0, 1.0);
      Voluntario voluntario0 = new Voluntario((String) null, (String) null, "", ponto2D0, 1.0, 0, 0, true);
      Perfil perfil0 = voluntario0.clone();
      assertNotSame(perfil0, voluntario0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D(1.0, 1.0);
      Voluntario voluntario0 = new Voluntario((String) null, (String) null, "", ponto2D0, 1.0, 0, 0, true);
      // Undeclared exception!
      try { 
        voluntario0.validaLogin((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Loja loja0 = new Loja("*LIdLd$3vOL&i5/Q", (String) null, "*LIdLd$3vOL&i5/Q", (Ponto2D) null, 0, (String) null);
      // Undeclared exception!
      try { 
        loja0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Perfil", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      String string0 = empresa0.getEmail();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      String string0 = empresa0.getNome();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario("H'OX`{y8\"H2,X)'1", "", "", (Ponto2D) null, 0.0, 0, 0, false);
      String string0 = voluntario0.getPassword();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D(0.0, 0.0);
      Empresa empresa0 = new Empresa((String) null, "Morada: ", "-*,0wBv:?,ip;e\"", ponto2D0, 0.0, (-1), (-1), "Morada: ", 0.0, 0.0);
      empresa0.setEmail("::9S*0l7Ed\"EW");
      Empresa empresa1 = new Empresa(empresa0);
      boolean boolean0 = empresa0.equals(empresa1);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setPassword("j%GRs8eYfrVX0^}");
      Loja loja1 = new Loja();
      boolean boolean0 = loja0.equals(loja1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = new Loja();
      assertTrue(loja1.equals((Object)loja0));
      
      loja1.setEmail("k");
      boolean boolean0 = loja0.equals(loja1);
      assertFalse(loja1.equals((Object)loja0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      Voluntario voluntario0 = new Voluntario("m", "&CEP", "", ponto2D0, 0.0, 0, 0, false);
      boolean boolean0 = voluntario0.equals("");
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario("H'OX`{y8\"H2,X)'1", "", "", (Ponto2D) null, 0.0, 0, 0, false);
      Voluntario voluntario1 = new Voluntario(voluntario0);
      // Undeclared exception!
      try { 
        voluntario1.equals(voluntario0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Perfil", e);
      }
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario("H'OX`{y8\"H2,X)'1", "", "", (Ponto2D) null, 0.0, 0, 0, false);
      boolean boolean0 = voluntario0.equals(voluntario0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Loja loja0 = new Loja();
      boolean boolean0 = loja0.equals((Object) null);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Voluntario voluntario0 = new Voluntario("H'OX`{y8\"H2,X)'1", "", "", (Ponto2D) null, 0.0, 0, 0, false);
      voluntario0.setNome("H'OX`{y8\"H2,X)'1");
      assertEquals("", voluntario0.getPassword());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Loja loja0 = new Loja("*LIdLd$3vOL&i5/Q", (String) null, "*LIdLd$3vOL&i5/Q", (Ponto2D) null, 0, (String) null);
      loja0.setLocal((Ponto2D) null);
      assertNull(loja0.getMorada());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Utilizador utilizador0 = new Utilizador();
      boolean boolean0 = utilizador0.validaLogin("Ponto2D");
      assertFalse(boolean0);
  }
}
