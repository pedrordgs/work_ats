/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:22:28 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Empresa_ESTest extends Empresa_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D(3344.4503, 3344.4503);
      Empresa empresa0 = new Empresa("Ponto2D", "Ponto2D", "Ponto2D", ponto2D0, (-993.533718107), 1849, 1849, "Nif: ", 1528.66, 1849);
      String string0 = empresa0.getNif();
      assertEquals(1849.0, empresa0.getCustokm(), 0.01);
      assertEquals("Nif: ", string0);
      assertEquals(1528.66, empresa0.getCustokg(), 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      Empresa empresa0 = new Empresa("\n", "vPm'{iO=d!6u6&<8pd", "\n", ponto2D0, 0.0, 4638, 4638, "", 4638, 4638);
      String string0 = empresa0.getNif();
      assertEquals(4638.0, empresa0.getCustokm(), 0.01);
      assertEquals("", string0);
      assertEquals(4638.0, empresa0.getCustokg(), 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      assertEquals(0.0, empresa0.getCustokm(), 0.01);
      
      empresa0.setCustokm(1.0);
      double double0 = empresa0.getCustokm();
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D((-1.0), (-1.0));
      Empresa empresa0 = new Empresa("", "", "", ponto2D0, (-1.0), 1, 1, "", (-1705.5729), (-1705.5729));
      double double0 = empresa0.getCustokm();
      assertEquals((-1705.5729), double0, 0.01);
      assertEquals((-1705.5729), empresa0.getCustokg(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D(3344.4503, 3344.4503);
      Empresa empresa0 = new Empresa("Ponto2D", "Ponto2D", "Ponto2D", ponto2D0, (-993.533718107), 1849, 1849, "Nif: ", 1528.66, 1849);
      double double0 = empresa0.getCustokg();
      assertEquals(1849.0, empresa0.getCustokm(), 0.01);
      assertEquals("Nif: ", empresa0.getNif());
      assertEquals(1528.66, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      empresa0.setCustokg((-155.6));
      double double0 = empresa0.getCustokg();
      assertEquals((-155.6), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      empresa0.setVelmed(918);
      empresa0.clone();
      assertEquals(0.0, empresa0.getCustokg(), 0.01);
      assertEquals(0.0, empresa0.getCustokm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      empresa0.setRaio((-1210.41171759241));
      empresa0.clone();
      assertEquals(0.0, empresa0.getCustokm(), 0.01);
      assertEquals(0.0, empresa0.getCustokg(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      empresa0.setLicMedicamentos(1);
      empresa0.clone();
      assertEquals(0.0, empresa0.getCustokg(), 0.01);
      assertEquals(0.0, empresa0.getCustokm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      Empresa empresa0 = new Empresa(",", "nC@", "Perfil", ponto2D0, 1.0, (-1), (-1), "", 1.0, 1.0);
      Empresa empresa1 = empresa0.clone();
      assertEquals(1.0, empresa1.getCustokm(), 0.01);
      assertEquals(1.0, empresa0.getCustokm(), 0.01);
      assertEquals("", empresa1.getNif());
      assertEquals(1.0, empresa1.getCustokg(), 0.01);
      assertEquals(1.0, empresa0.getCustokg(), 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      empresa0.setCustokg((-155.6));
      empresa0.clone();
      assertEquals((-155.6), empresa0.getCustokg(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Empresa empresa0 = new Empresa("'w H'b", "j(\"gLi_v/j*q", "'w H'b", (Ponto2D) null, (-2935.81), 0, (-1), "j(\"gLi_v/j*q", 0.0, 0.0);
      // Undeclared exception!
      try { 
        empresa0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Perfil", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Empresa empresa0 = null;
      try {
        empresa0 = new Empresa((Empresa) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Perfil", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      Empresa empresa1 = new Empresa(empresa0);
      assertEquals(0.0, empresa0.getCustokg(), 0.01);
      assertEquals(0.0, empresa0.getCustokm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      double double0 = empresa0.getCustokm();
      assertEquals(0.0, empresa0.getCustokg(), 0.01);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      empresa0.getNif();
      assertEquals(0.0, empresa0.getCustokg(), 0.01);
      assertEquals(0.0, empresa0.getCustokm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Empresa empresa0 = new Empresa();
      double double0 = empresa0.getCustokg();
      assertEquals(0.0, double0, 0.01);
      assertEquals(0.0, empresa0.getCustokm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      Empresa empresa0 = new Empresa("", "", "", ponto2D0, 1424.791235, (-1132), (-1132), "", 1424.791235, (-1132));
      empresa0.setNif("");
      assertEquals(1424.791235, empresa0.getCustokg(), 0.01);
      assertEquals((-1132.0), empresa0.getCustokm(), 0.01);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      Empresa empresa0 = new Empresa("", "", "", ponto2D0, 1424.791235, (-1132), (-1132), "", 1424.791235, (-1132));
      String string0 = empresa0.toString();
      assertEquals("Perfil: \n\n\n(0.0,0.0)\nRaio de a\u00E7ao: 1424.791235\nVelocidade media: -1132\nLicen\u00E7a de transporte de medicamentos: -1132\nNif: \nCusto por km: -1132.0\nCusto por quilo: 1424.791235\n", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Ponto2D ponto2D0 = new Ponto2D();
      Empresa empresa0 = new Empresa("", "", "", ponto2D0, 1424.791235, (-1132), (-1132), "", 1424.791235, (-1132));
      Empresa empresa1 = empresa0.clone();
      assertEquals((-1132.0), empresa1.getCustokm(), 0.01);
      assertEquals(1424.791235, empresa0.getCustokg(), 0.01);
      assertEquals(1424.791235, empresa1.getCustokg(), 0.01);
      assertEquals((-1132.0), empresa0.getCustokm(), 0.01);
  }
}
