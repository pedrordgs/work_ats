/*
 * This file was automatically generated by EvoSuite
 * Sat Jan 23 21:21:20 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ComparatorUser_ESTest extends ComparatorUser_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      ComparatorUser comparatorUser0 = new ComparatorUser();
      Utilizador utilizador0 = new Utilizador();
      Utilizador utilizador1 = new Utilizador(utilizador0);
      utilizador0.incNumEnc();
      int int0 = comparatorUser0.compare(utilizador1, utilizador0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test1()  throws Throwable  {
      ComparatorUser comparatorUser0 = new ComparatorUser();
      Ponto2D ponto2D0 = new Ponto2D();
      Utilizador utilizador0 = new Utilizador("R$\"$(tx>`d0ze", "aNM)||.M6|Fmc(E+", "aNM)||.M6|Fmc(E+", ponto2D0, 0);
      // Undeclared exception!
      try { 
        comparatorUser0.compare((Utilizador) null, utilizador0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("ComparatorUser", e);
      }
  }

  @Test(timeout = 4000)
  public void test2()  throws Throwable  {
      ComparatorUser comparatorUser0 = new ComparatorUser();
      Utilizador utilizador0 = new Utilizador();
      int int0 = comparatorUser0.compare(utilizador0, utilizador0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test3()  throws Throwable  {
      ComparatorUser comparatorUser0 = new ComparatorUser();
      Utilizador utilizador0 = new Utilizador();
      utilizador0.incNumEnc();
      Utilizador utilizador1 = new Utilizador(utilizador0);
      utilizador1.setNum(0);
      int int0 = comparatorUser0.compare(utilizador0, utilizador1);
      assertEquals((-1), int0);
  }
}
