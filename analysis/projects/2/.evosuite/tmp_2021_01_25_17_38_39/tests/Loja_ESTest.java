/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 17:46:18 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Loja_ESTest extends Loja_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setTempoEspera(316);
      int int0 = loja0.getTempoEspera();
      assertEquals(316, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setTempoEspera((-329));
      int int0 = loja0.getTempoEspera();
      assertEquals((-329), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setMorada((String) null);
      loja0.getMorada();
      assertEquals(0, loja0.getTempoEspera());
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setMorada("_fFH2&>,g`> p 4p[J");
      loja0.getMorada();
      assertEquals(0, loja0.getTempoEspera());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setTempoEspera(877);
      loja0.clone();
      assertEquals(877, loja0.getTempoEspera());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.setTempoEspera((-329));
      loja0.clone();
      assertEquals((-329), loja0.getTempoEspera());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Loja loja0 = new Loja(")", "\n", ")", (Ponto2D) null, 0, "\n");
      // Undeclared exception!
      try { 
        loja0.toString();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Perfil", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Loja loja0 = null;
      try {
        loja0 = new Loja((Loja) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("Perfil", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Loja loja0 = new Loja();
      int int0 = loja0.getTempoEspera();
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = new Loja(loja0);
      assertEquals(0, loja1.getTempoEspera());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Loja loja0 = new Loja();
      loja0.getMorada();
      assertEquals(0, loja0.getTempoEspera());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Ponto2D ponto2D0 = mock(Ponto2D.class, new ViolatedAssumptionAnswer());
      doReturn("!~,)>g}e}[hRQ_sFO").when(ponto2D0).toString();
      Loja loja0 = new Loja("!~,)>g}e}[hRQ_sFO", "!~,)>g}e}[hRQ_sFO", "!~,)>g}e}[hRQ_sFO", ponto2D0, 3792, "!~,)>g}e}[hRQ_sFO");
      String string0 = loja0.toString();
      assertEquals("Perfil: !~,)>g}e}[hRQ_sFO\n!~,)>g}e}[hRQ_sFO\n!~,)>g}e}[hRQ_sFO\n!~,)>g}e}[hRQ_sFO\nTempo de espera: 3792\nMorada: !~,)>g}e}[hRQ_sFO", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Loja loja0 = new Loja();
      Loja loja1 = loja0.clone();
      assertEquals(0, loja1.getTempoEspera());
  }
}
