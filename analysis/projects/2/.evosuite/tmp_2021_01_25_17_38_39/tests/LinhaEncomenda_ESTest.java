/*
 * This file was automatically generated by EvoSuite
 * Mon Jan 25 17:42:36 GMT 2021
 */


import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class LinhaEncomenda_ESTest extends LinhaEncomenda_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.setQuantidade(0.0);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda1.setDescricao("");
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.setReferencia("");
      linhaEncomenda0.equals(linhaEncomenda0);
      linhaEncomenda0.setReferencia("");
      linhaEncomenda1.clone();
      linhaEncomenda1.setQuantidade((-1181.3101019917028));
      linhaEncomenda1.setValorUni(0.0);
      linhaEncomenda0.setQuantidade(0.0);
      linhaEncomenda1.getValorUni();
      linhaEncomenda1.setValorUni(0.0);
      linhaEncomenda1.toString();
      linhaEncomenda1.toString();
      linhaEncomenda0.setQuantidade((-3131.30797417));
      linhaEncomenda1.getDescricao();
      linhaEncomenda0.setReferencia("i`D");
      linhaEncomenda0.equals(linhaEncomenda0);
      linhaEncomenda0.getValorUni();
      linhaEncomenda1.precoLinha();
      linhaEncomenda2.getReferencia();
      linhaEncomenda0.setValorUni((-1.0));
      linhaEncomenda0.compareTo(linhaEncomenda0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      double double0 = 1.0;
      linhaEncomenda0.setQuantidade(1.0);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda();
      linhaEncomenda1.toString();
      linhaEncomenda1.setReferencia((String) null);
      linhaEncomenda0.setQuantidade(1.0);
      // Undeclared exception!
      try { 
        linhaEncomenda0.equals(linhaEncomenda1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 2670.0, 0.0, 2670.0);
      linhaEncomenda0.setReferencia("");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda("", "", (-4763.490186078), 0.0, 0.0);
      linhaEncomenda1.setDescricao("");
      linhaEncomenda1.setValorUni(0.0);
      linhaEncomenda1.toString();
      linhaEncomenda0.equals(linhaEncomenda1);
      linhaEncomenda1.setQuantidade(2670.0);
      linhaEncomenda0.setDescricao("0!P`87\"*D(-LN}RPH<y");
      linhaEncomenda0.precoLinha();
      linhaEncomenda0.setQuantidade(0.0);
      linhaEncomenda0.setValorUni(791.84215);
      linhaEncomenda0.toString();
      linhaEncomenda0.getPeso();
      linhaEncomenda1.setReferencia("");
      linhaEncomenda0.setPeso((-1730.71344129));
      linhaEncomenda0.setQuantidade(0.0);
      linhaEncomenda1.getValorUni();
      linhaEncomenda0.precoLinha();
      linhaEncomenda0.getValorUni();
      linhaEncomenda0.setPeso(0.0);
      linhaEncomenda0.setPeso((-613.2944219785346));
      linhaEncomenda1.getReferencia();
      linhaEncomenda0.precoLinha();
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao((String) null);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda();
      linhaEncomenda0.compareTo(linhaEncomenda1);
      linhaEncomenda0.getDescricao();
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setQuantidade((-874.162));
      linhaEncomenda0.setDescricao("3[");
      linhaEncomenda0.setPeso((-874.162));
      linhaEncomenda0.getPeso();
      linhaEncomenda0.setDescricao("3[");
      linhaEncomenda0.toString();
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setQuantidade((-1824.905868918));
      linhaEncomenda1.toString();
      linhaEncomenda1.setPeso(1507.065260885902);
      linhaEncomenda1.compareTo(linhaEncomenda0);
      linhaEncomenda1.getReferencia();
      linhaEncomenda0.setValorUni(697.0);
      LinhaEncomenda linhaEncomenda2 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.equals(linhaEncomenda2);
      linhaEncomenda1.setDescricao("");
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 1.0, 1.0, (-2476.012751613));
      linhaEncomenda0.setReferencia("");
      linhaEncomenda0.toString();
      linhaEncomenda0.precoLinha();
      linhaEncomenda0.setDescricao("Z-RsLSnxbW+hK");
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("Qw(.+Jr|\"~HTK|6M", "", 0.0, 0.0, 0.0);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setQuantidade(0.0);
      linhaEncomenda0.setQuantidade(0.0);
      linhaEncomenda1.getQuantidade();
      linhaEncomenda1.toString();
      linhaEncomenda1.getDescricao();
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = null;
      try {
        linhaEncomenda0 = new LinhaEncomenda((LinhaEncomenda) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("LinhaEncomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", (-1329.451415763741), (-1329.451415763741), (-1329.451415763741));
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda((String) null, "*yI2c*", 0.0, (-1.0), (-1.0));
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.getReferencia();
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao("a=ak");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda("a=ak", "a=ak", 1.0, 1651.3178867589247, 1.0);
      linhaEncomenda0.compareTo(linhaEncomenda1);
      linhaEncomenda0.getDescricao();
      linhaEncomenda1.setPeso(0.0);
      linhaEncomenda0.setReferencia((String) null);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "XY}zSAh(>pc]<A0t2p", 533.853833777457, (-4062.738), (-209.64));
      linhaEncomenda0.setValorUni((-4062.738));
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda();
      linhaEncomenda0.compareTo(linhaEncomenda1);
      linhaEncomenda0.setValorUni(533.853833777457);
      linhaEncomenda1.getPeso();
      linhaEncomenda1.toString();
      linhaEncomenda0.precoLinha();
      linhaEncomenda0.clone();
      linhaEncomenda1.toString();
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.toString();
      linhaEncomenda0.toString();
      linhaEncomenda0.setValorUni((-140.051826315426));
      linhaEncomenda0.setReferencia("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0");
      linhaEncomenda0.getValorUni();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda("HGrx_:A0:s", "HGrx_:A0:s", (-140.051826315426), (-140.051826315426), 1.0);
      linhaEncomenda0.compareTo(linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setDescricao((String) null);
      linhaEncomenda1.equals(linhaEncomenda0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 834.98903824, 834.98903824, 0.0);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.toString();
      linhaEncomenda1.precoLinha();
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 0.0, 0.0, (-49.5));
      linhaEncomenda0.toString();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.precoLinha();
      LinhaEncomenda linhaEncomenda2 = new LinhaEncomenda();
      linhaEncomenda2.setPeso(0.0);
      linhaEncomenda0.equals(linhaEncomenda2);
      linhaEncomenda0.toString();
      linhaEncomenda2.toString();
      linhaEncomenda0.compareTo(linhaEncomenda2);
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda2.clone();
      linhaEncomenda3.getDescricao();
      linhaEncomenda0.getValorUni();
      linhaEncomenda1.setDescricao("/oOWI");
      linhaEncomenda3.setValorUni(0.0);
      linhaEncomenda3.getDescricao();
      linhaEncomenda1.setReferencia("n/a");
      linhaEncomenda0.getReferencia();
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda0.equals(linhaEncomenda1);
      linhaEncomenda1.setReferencia("Q]!(");
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setReferencia("--Descri\u00E7ao: ");
      linhaEncomenda0.setReferencia("tcY*:.sd");
      linhaEncomenda0.setDescricao((String) null);
      linhaEncomenda0.setValorUni(0.0);
      linhaEncomenda0.setReferencia("tcY*:.sd");
      linhaEncomenda0.setDescricao("--Descri\u00E7ao: ");
      linhaEncomenda0.equals((Object) null);
      linhaEncomenda0.getQuantidade();
      linhaEncomenda0.getReferencia();
      linhaEncomenda0.setReferencia("");
      linhaEncomenda0.clone();
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("|sq+;pF?,7C;wa", "|sq+;pF?,7C;wa", 618.595911, 618.595911, 0.0);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.getQuantidade();
      linhaEncomenda0.clone();
      linhaEncomenda0.setQuantidade(385.2010659737094);
      linhaEncomenda1.setPeso(0.0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda((String) null, (String) null, (-3545.492191606172), 0.0, (-3545.492191606172));
      linhaEncomenda0.clone();
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.toString();
      linhaEncomenda0.setValorUni(1.0);
      linhaEncomenda0.toString();
      linhaEncomenda0.precoLinha();
      linhaEncomenda0.setQuantidade((-1.0));
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      linhaEncomenda0.getPeso();
      linhaEncomenda0.setQuantidade((-349.1869558));
      linhaEncomenda2.getPeso();
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setPeso(2394.95);
      linhaEncomenda0.setQuantidade(0.0);
      linhaEncomenda0.getPeso();
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.getValorUni();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda();
      linhaEncomenda1.setPeso(0.0);
      linhaEncomenda1.setValorUni(0.0);
      linhaEncomenda0.compareTo(linhaEncomenda1);
      linhaEncomenda0.setValorUni(0.0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.setReferencia("\u0007UQl{3n\"R|!Q3h");
      linhaEncomenda1.precoLinha();
      linhaEncomenda1.compareTo(linhaEncomenda0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", 0.0, 0.0, 0.0);
      linhaEncomenda0.equals("");
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("CT5ey};Y", (String) null, 0.0, 0.0, 0.0);
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.getReferencia();
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("NlS+Cs<hlq07J:|O,", "NlS+Cs<hlq07J:|O,", 3352.57462670753, 3352.57462670753, 3352.57462670753);
      linhaEncomenda0.clone();
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setQuantidade(1570.04);
      linhaEncomenda0.setQuantidade(1570.04);
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda0.setDescricao("");
      linhaEncomenda0.equals("f|9*h8<:e/ot1E {");
      linhaEncomenda0.getQuantidade();
      linhaEncomenda1.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      linhaEncomenda1.setPeso((-491.13176));
      linhaEncomenda0.toString();
      linhaEncomenda0.getValorUni();
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("`}2<", "Sh7ha", 31.906861, (-1853.6854299179), (-1853.6854299179));
      linhaEncomenda0.getValorUni();
      linhaEncomenda0.setDescricao("Sh7ha");
      linhaEncomenda0.setReferencia((String) null);
      linhaEncomenda0.setValorUni((-1853.6854299179));
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda();
      linhaEncomenda1.clone();
      // Undeclared exception!
      try { 
        linhaEncomenda0.compareTo(linhaEncomenda1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("LinhaEncomenda", e);
      }
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.precoLinha();
      linhaEncomenda0.equals("");
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda();
      linhaEncomenda0.compareTo(linhaEncomenda1);
      linhaEncomenda0.compareTo(linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setValorUni(0.0);
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setDescricao("hc#CM5Jw=JJ?9dm");
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "", (-1223.970054), (-1223.970054), (-1223.970054));
      linhaEncomenda0.getReferencia();
  }

  @Test(timeout = 4000)
  public void test37()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.getPeso();
      linhaEncomenda0.toString();
  }

  @Test(timeout = 4000)
  public void test38()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setPeso((-1.0));
      linhaEncomenda0.getQuantidade();
  }

  @Test(timeout = 4000)
  public void test39()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setQuantidade(1.0);
  }

  @Test(timeout = 4000)
  public void test40()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setReferencia("");
      linhaEncomenda0.getDescricao();
  }

  @Test(timeout = 4000)
  public void test41()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      linhaEncomenda1.clone();
  }

  @Test(timeout = 4000)
  public void test42()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      Object object0 = new Object();
      linhaEncomenda1.equals(object0);
      linhaEncomenda1.setDescricao("eXf");
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda0.clone();
      LinhaEncomenda linhaEncomenda3 = new LinhaEncomenda();
      linhaEncomenda3.setValorUni(3937.05);
      linhaEncomenda3.clone();
      linhaEncomenda3.toString();
      linhaEncomenda2.setPeso(3937.05);
      linhaEncomenda1.equals(linhaEncomenda3);
      linhaEncomenda3.equals(object0);
      linhaEncomenda2.equals(linhaEncomenda0);
      LinhaEncomenda linhaEncomenda4 = new LinhaEncomenda();
      LinhaEncomenda linhaEncomenda5 = new LinhaEncomenda(linhaEncomenda4);
      linhaEncomenda2.setReferencia("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 3937.05--Quanidade : 0.0");
      linhaEncomenda5.setDescricao("qJn");
      linhaEncomenda5.setPeso(1773.4487210893);
      linhaEncomenda1.equals(linhaEncomenda5);
      linhaEncomenda1.toString();
      linhaEncomenda4.equals(object0);
      linhaEncomenda1.toString();
      LinhaEncomenda linhaEncomenda6 = linhaEncomenda4.clone();
      linhaEncomenda2.toString();
      linhaEncomenda6.setReferencia("--Referencia: hwj8G(Du--Descri\u00E7ao: hwj8G(Du--Valor por unidade : 19.32--Quanidade : 0.0");
      linhaEncomenda6.setQuantidade(3937.05);
      linhaEncomenda1.clone();
      linhaEncomenda0.toString();
      linhaEncomenda2.equals("--Referencia: n/a--Descri\u00E7ao: eXf--Valor por unidade : 0.0--Quanidade : 0.0");
      linhaEncomenda2.toString();
  }

  @Test(timeout = 4000)
  public void test43()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertNotNull(linhaEncomenda0);
      
      String string0 = linhaEncomenda0.toString();
      assertEquals("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0", string0);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertNotNull(string0);
      
      linhaEncomenda0.setReferencia("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0");
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      
      boolean boolean0 = linhaEncomenda0.equals("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0");
      assertFalse(boolean0);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      
      String string1 = linhaEncomenda0.toString();
      assertEquals("--Referencia: --Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0", string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertNotNull(string1);
      
      boolean boolean1 = linhaEncomenda0.equals((Object) null);
      assertFalse(boolean1);
      assertTrue(boolean1 == boolean0);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      
      LinhaEncomenda linhaEncomenda1 = linhaEncomenda0.clone();
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals("--Referencia: n/a--Descri\u00E7ao: n/a--Valor por unidade : 0.0--Quanidade : 0.0", linhaEncomenda1.getReferencia());
      assertEquals("n/a", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertNotNull(linhaEncomenda1);
  }

  @Test(timeout = 4000)
  public void test44()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertNotNull(linhaEncomenda0);
      
      linhaEncomenda0.setDescricao("w^|U(!$");
      assertEquals("w^|U(!$", linhaEncomenda0.getDescricao());
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda();
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda1.getReferencia());
      assertNotNull(linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda1.getReferencia());
      assertEquals("n/a", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda2.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertNotNull(linhaEncomenda2);
      
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda2.clone();
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda1.getReferencia());
      assertEquals("n/a", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda2.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda3.precoLinha(), 0.01);
      assertEquals("n/a", linhaEncomenda3.getDescricao());
      assertEquals(0.0, linhaEncomenda3.getValorUni(), 0.01);
      assertEquals("n/a", linhaEncomenda3.getReferencia());
      assertEquals(0.0, linhaEncomenda3.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda3.getPeso(), 0.01);
      assertNotNull(linhaEncomenda3);
      
      boolean boolean0 = linhaEncomenda1.equals(linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertTrue(boolean0);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda1.getReferencia());
      assertEquals("n/a", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda2.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda3.precoLinha(), 0.01);
      assertEquals("n/a", linhaEncomenda3.getDescricao());
      assertEquals(0.0, linhaEncomenda3.getValorUni(), 0.01);
      assertEquals("n/a", linhaEncomenda3.getReferencia());
      assertEquals(0.0, linhaEncomenda3.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda3.getPeso(), 0.01);
  }

  @Test(timeout = 4000)
  public void test45()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda("", "n/a", 2397.930398, (-2430.44585385), (-1.0));
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertNotNull(linhaEncomenda0);
      
      linhaEncomenda0.setDescricao("");
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda(linhaEncomenda0);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda1.precoLinha(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPeso(), 0.01);
      assertEquals((-2430.44585385), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertNotNull(linhaEncomenda1);
      
      LinhaEncomenda linhaEncomenda2 = new LinhaEncomenda(linhaEncomenda1);
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda1.precoLinha(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPeso(), 0.01);
      assertEquals((-2430.44585385), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals((-1.0), linhaEncomenda2.getPeso(), 0.01);
      assertEquals(2397.930398, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals((-2430.44585385), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals((-5828039.9936399795), linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals("", linhaEncomenda2.getDescricao());
      assertNotNull(linhaEncomenda2);
      
      linhaEncomenda1.setQuantidade((-1.0));
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-2397.930398), linhaEncomenda1.precoLinha(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPeso(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      
      linhaEncomenda2.setValorUni(740.8479164542597);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-2397.930398), linhaEncomenda1.precoLinha(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPeso(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals((-1.0), linhaEncomenda2.getPeso(), 0.01);
      assertEquals((-1800590.7468796666), linhaEncomenda2.precoLinha(), 0.01);
      assertEquals((-2430.44585385), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(740.8479164542597, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals("", linhaEncomenda2.getDescricao());
      
      boolean boolean0 = linhaEncomenda2.equals(linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertFalse(boolean0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-2397.930398), linhaEncomenda1.precoLinha(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPeso(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals((-1.0), linhaEncomenda2.getPeso(), 0.01);
      assertEquals((-1800590.7468796666), linhaEncomenda2.precoLinha(), 0.01);
      assertEquals((-2430.44585385), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(740.8479164542597, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals("", linhaEncomenda2.getDescricao());
      
      boolean boolean1 = linhaEncomenda2.equals("");
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertFalse(boolean1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(boolean1 == boolean0);
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-2397.930398), linhaEncomenda1.precoLinha(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPeso(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals((-1.0), linhaEncomenda2.getPeso(), 0.01);
      assertEquals((-1800590.7468796666), linhaEncomenda2.precoLinha(), 0.01);
      assertEquals((-2430.44585385), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals(740.8479164542597, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals("", linhaEncomenda2.getDescricao());
      
      linhaEncomenda2.setReferencia("n/a");
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-2397.930398), linhaEncomenda1.precoLinha(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPeso(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals((-1.0), linhaEncomenda2.getPeso(), 0.01);
      assertEquals((-1800590.7468796666), linhaEncomenda2.precoLinha(), 0.01);
      assertEquals((-2430.44585385), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda2.getReferencia());
      assertEquals(740.8479164542597, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      
      double double0 = linhaEncomenda2.precoLinha();
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertEquals((-1800590.7468796666), double0, 0.01);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-2397.930398), linhaEncomenda1.precoLinha(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPeso(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals((-1.0), linhaEncomenda2.getPeso(), 0.01);
      assertEquals((-1800590.7468796666), linhaEncomenda2.precoLinha(), 0.01);
      assertEquals((-2430.44585385), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda2.getReferencia());
      assertEquals(740.8479164542597, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      
      linhaEncomenda2.setReferencia("n/a");
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals((-2430.44585385), linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals((-1.0), linhaEncomenda0.getPeso(), 0.01);
      assertEquals("", linhaEncomenda0.getDescricao());
      assertEquals((-5828039.9936399795), linhaEncomenda0.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda0.getReferencia());
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals((-2397.930398), linhaEncomenda1.precoLinha(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getPeso(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals(2397.930398, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals((-1.0), linhaEncomenda2.getPeso(), 0.01);
      assertEquals((-1800590.7468796666), linhaEncomenda2.precoLinha(), 0.01);
      assertEquals((-2430.44585385), linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("n/a", linhaEncomenda2.getReferencia());
      assertEquals(740.8479164542597, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
  }

  @Test(timeout = 4000)
  public void test46()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertNotNull(linhaEncomenda0);
      
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda("", "", 0.0, 0.0, 0.0);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertNotNull(linhaEncomenda1);
      
      linhaEncomenda1.setQuantidade(0.0);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      
      LinhaEncomenda linhaEncomenda2 = linhaEncomenda1.clone();
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda2.getReferencia());
      assertNotNull(linhaEncomenda2);
      
      LinhaEncomenda linhaEncomenda3 = linhaEncomenda2.clone();
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda1);
      assertNotSame(linhaEncomenda3, linhaEncomenda0);
      assertNotSame(linhaEncomenda3, linhaEncomenda2);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda3.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda3.equals((Object)linhaEncomenda0));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals("", linhaEncomenda3.getReferencia());
      assertEquals(0.0, linhaEncomenda3.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda3.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda3.getDescricao());
      assertEquals(0.0, linhaEncomenda3.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda3.getValorUni(), 0.01);
      assertNotNull(linhaEncomenda3);
      
      linhaEncomenda2.setDescricao("");
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda2.getReferencia());
      
      linhaEncomenda1.setDescricao("");
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      
      boolean boolean0 = linhaEncomenda0.equals(linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertFalse(boolean0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      
      linhaEncomenda1.setReferencia("");
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      
      LinhaEncomenda linhaEncomenda4 = linhaEncomenda2.clone();
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda0);
      assertNotSame(linhaEncomenda4, linhaEncomenda3);
      assertNotSame(linhaEncomenda4, linhaEncomenda1);
      assertNotSame(linhaEncomenda4, linhaEncomenda2);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda4.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda4.equals((Object)linhaEncomenda3));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals(0.0, linhaEncomenda2.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals(0.0, linhaEncomenda4.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda4.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda4.getDescricao());
      assertEquals("", linhaEncomenda4.getReferencia());
      assertEquals(0.0, linhaEncomenda4.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda4.getValorUni(), 0.01);
      assertNotNull(linhaEncomenda4);
      
      linhaEncomenda2.setQuantidade((-1181.3101019917028));
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(-0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals((-1181.3101019917028), linhaEncomenda2.getQuantidade(), 0.01);
      
      linhaEncomenda2.setValorUni(0.0);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(-0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals((-1181.3101019917028), linhaEncomenda2.getQuantidade(), 0.01);
      
      linhaEncomenda0.setQuantidade(0.0);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      
      double double0 = linhaEncomenda2.getValorUni();
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertEquals(0.0, double0, 0.01);
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(-0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals((-1181.3101019917028), linhaEncomenda2.getQuantidade(), 0.01);
      
      LinhaEncomenda linhaEncomenda5 = linhaEncomenda0.clone();
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda5);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda5, linhaEncomenda3);
      assertNotSame(linhaEncomenda5, linhaEncomenda2);
      assertNotSame(linhaEncomenda5, linhaEncomenda4);
      assertNotSame(linhaEncomenda5, linhaEncomenda1);
      assertNotSame(linhaEncomenda5, linhaEncomenda0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda5.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda1));
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda5.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda5.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda5.getReferencia());
      assertEquals(0.0, linhaEncomenda5.precoLinha(), 0.01);
      assertEquals("n/a", linhaEncomenda5.getDescricao());
      assertEquals(0.0, linhaEncomenda5.getValorUni(), 0.01);
      assertNotNull(linhaEncomenda5);
      
      String string0 = linhaEncomenda2.toString();
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda5);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertEquals("--Referencia: --Descri\u00E7ao: --Valor por unidade : 0.0--Quanidade : -1181.3101019917028", string0);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(-0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals((-1181.3101019917028), linhaEncomenda2.getQuantidade(), 0.01);
      assertNotNull(string0);
      
      String string1 = linhaEncomenda2.getDescricao();
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda5);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertEquals("", string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda5));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertTrue(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(-0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals((-1181.3101019917028), linhaEncomenda2.getQuantidade(), 0.01);
      assertNotNull(string1);
      
      linhaEncomenda1.setReferencia("i`D");
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("i`D", linhaEncomenda1.getReferencia());
      
      boolean boolean1 = linhaEncomenda0.equals(linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda5);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertFalse(boolean1);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertTrue(boolean1 == boolean0);
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("i`D", linhaEncomenda1.getReferencia());
      
      double double1 = linhaEncomenda2.precoLinha();
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda5);
      assertNotSame(linhaEncomenda2, linhaEncomenda0);
      assertNotSame(linhaEncomenda2, linhaEncomenda4);
      assertNotSame(linhaEncomenda2, linhaEncomenda3);
      assertNotSame(linhaEncomenda2, linhaEncomenda1);
      assertEquals(-0.0, double1, 0.01);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals(double1, double0, 0.01);
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda0));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda2.equals((Object)linhaEncomenda1));
      assertTrue(linhaEncomenda2.equals((Object)linhaEncomenda4));
      assertEquals(0.0, linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("i`D", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda2.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda2.getValorUni(), 0.01);
      assertEquals(-0.0, linhaEncomenda2.precoLinha(), 0.01);
      assertEquals("", linhaEncomenda2.getDescricao());
      assertEquals("", linhaEncomenda2.getReferencia());
      assertEquals((-1181.3101019917028), linhaEncomenda2.getQuantidade(), 0.01);
      
      String string2 = linhaEncomenda5.getReferencia();
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda5);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda5, linhaEncomenda3);
      assertNotSame(linhaEncomenda5, linhaEncomenda2);
      assertNotSame(linhaEncomenda5, linhaEncomenda4);
      assertNotSame(linhaEncomenda5, linhaEncomenda1);
      assertNotSame(linhaEncomenda5, linhaEncomenda0);
      assertEquals("n/a", string2);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda5.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda1));
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda5.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda5.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda5.getReferencia());
      assertEquals(0.0, linhaEncomenda5.precoLinha(), 0.01);
      assertEquals("n/a", linhaEncomenda5.getDescricao());
      assertEquals(0.0, linhaEncomenda5.getValorUni(), 0.01);
      assertNotNull(string2);
      
      linhaEncomenda1.setValorUni((-1.0));
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertEquals((-1.0), linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(-0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("i`D", linhaEncomenda1.getReferencia());
      
      int int0 = linhaEncomenda5.compareTo(linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda1);
      assertNotSame(linhaEncomenda0, linhaEncomenda5);
      assertNotSame(linhaEncomenda0, linhaEncomenda4);
      assertNotSame(linhaEncomenda0, linhaEncomenda2);
      assertNotSame(linhaEncomenda0, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda5);
      assertNotSame(linhaEncomenda1, linhaEncomenda2);
      assertNotSame(linhaEncomenda1, linhaEncomenda4);
      assertNotSame(linhaEncomenda1, linhaEncomenda3);
      assertNotSame(linhaEncomenda1, linhaEncomenda0);
      assertNotSame(linhaEncomenda5, linhaEncomenda3);
      assertNotSame(linhaEncomenda5, linhaEncomenda2);
      assertNotSame(linhaEncomenda5, linhaEncomenda4);
      assertNotSame(linhaEncomenda5, linhaEncomenda1);
      assertNotSame(linhaEncomenda5, linhaEncomenda0);
      assertEquals(5, int0);
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda1));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda0.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda0.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda5));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda2));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda1.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda3));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda2));
      assertTrue(linhaEncomenda5.equals((Object)linhaEncomenda0));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda4));
      assertFalse(linhaEncomenda5.equals((Object)linhaEncomenda1));
      assertEquals(0.0, linhaEncomenda0.getValorUni(), 0.01);
      assertEquals("n/a", linhaEncomenda0.getDescricao());
      assertEquals("n/a", linhaEncomenda0.getReferencia());
      assertEquals(0.0, linhaEncomenda0.precoLinha(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda0.getPeso(), 0.01);
      assertEquals((-1.0), linhaEncomenda1.getValorUni(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getPeso(), 0.01);
      assertEquals(0.0, linhaEncomenda1.getQuantidade(), 0.01);
      assertEquals("", linhaEncomenda1.getDescricao());
      assertEquals(-0.0, linhaEncomenda1.precoLinha(), 0.01);
      assertEquals("i`D", linhaEncomenda1.getReferencia());
      assertEquals(0.0, linhaEncomenda5.getQuantidade(), 0.01);
      assertEquals(0.0, linhaEncomenda5.getPeso(), 0.01);
      assertEquals("n/a", linhaEncomenda5.getReferencia());
      assertEquals(0.0, linhaEncomenda5.precoLinha(), 0.01);
      assertEquals("n/a", linhaEncomenda5.getDescricao());
      assertEquals(0.0, linhaEncomenda5.getValorUni(), 0.01);
  }

  @Test(timeout = 4000)
  public void test47()  throws Throwable  {
      LinhaEncomenda linhaEncomenda0 = new LinhaEncomenda();
      linhaEncomenda0.setQuantidade(10.899361138359962);
      linhaEncomenda0.toString();
      linhaEncomenda0.setQuantidade(10.899361138359962);
      linhaEncomenda0.setReferencia((String) null);
      linhaEncomenda0.setQuantidade(10.899361138359962);
      linhaEncomenda0.equals(linhaEncomenda0);
      linhaEncomenda0.setPeso((-486.22621342133));
      linhaEncomenda0.setReferencia("");
      LinhaEncomenda linhaEncomenda1 = new LinhaEncomenda("", ";", 10.899361138359962, 0.20615496205588224, 10.899361138359962);
      linhaEncomenda0.equals(linhaEncomenda1);
      linhaEncomenda0.setReferencia(";");
      linhaEncomenda1.toString();
      linhaEncomenda1.clone();
      linhaEncomenda0.equals("");
      linhaEncomenda1.toString();
      linhaEncomenda0.clone();
      assertEquals((-486.22621342133), linhaEncomenda0.getPeso(), 0.01);
  }
}
